document.onreadystatechange = function() {
    if (document.readyState !== "complete") {
        document.querySelector("#loader").style = "visibility: visible;";
    } else {
        document.querySelector("#loader").style = "opacity: 0; pointer-events: none;";
        setTimeout(function(){document.querySelector("#loader").style = "display: none";}, 1200);
    }
};









var swiper = new Swiper('.swiper-container', {
    effect: 'coverflow',
  grabCursor: true,
  centeredSlides: true,
  slidesPerView: 'auto',
  coverflowEffect: {
    rotate: 0,
    stretch: 0,
    depth: 0,
    modifier: 1,
    slideShadows : true,
  },
  loop: true,
});





let thumbnails = document.getElementsByClassName('thumbnail');
let slider = document.getElementById('slider');

let buttonRight = document.getElementById('slide-right');
let buttonLeft = document.getElementById('slide-left');

buttonLeft.addEventListener('click', function(){
    slider.scrollLeft -= 125;
})

buttonRight.addEventListener('click', function(){
    slider.scrollLeft += 125;
})

const maxScrollLeft = slider.scrollWidth - slider.clientWidth;
// alert(maxScrollLeft);
// alert("Left Scroll:" + slider.scrollLeft);

//AUTO PLAY THE SLIDER 
function autoPlay() {
    if (slider.scrollLeft > (maxScrollLeft - 1)) {
        slider.scrollLeft -= maxScrollLeft;
    } else {
        slider.scrollLeft += 1;
    }
}
let play = setInterval(autoPlay, 50);

// PAUSE THE SLIDE ON HOVER
for (var i=0; i < thumbnails.length; i++){

thumbnails[i].addEventListener('mouseover', function() {
    clearInterval(play);
});

thumbnails[i].addEventListener('mouseout', function() {
    return play = setInterval(autoPlay, 50);
});
}


(() => {
    var t = {
            234: function(t, e) {
                ! function(t) {
                    "use strict";
                    var e = {
                            3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
                            5: "class enum extends super const export import",
                            6: "enum",
                            strict: "implements interface let package private protected public static yield",
                            strictBind: "eval arguments"
                        },
                        i = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",
                        n = {
                            5: i,
                            "5module": i + " export import",
                            6: i + " const class extends export import super"
                        },
                        r = /^in(stanceof)?$/,
                        s = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                        a = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",
                        o = new RegExp("[" + s + "]"),
                        h = new RegExp("[" + s + a + "]");
                    s = a = null;
                    var l = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938],
                        c = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

                    function u(t, e) {
                        for (var i = 65536, n = 0; n < e.length; n += 2) {
                            if ((i += e[n]) > t) return !1;
                            if ((i += e[n + 1]) >= t) return !0
                        }
                    }

                    function d(t, e) {
                        return t < 65 ? 36 === t : t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && o.test(String.fromCharCode(t)) : !1 !== e && u(t, l)))
                    }

                    function p(t, e) {
                        return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t < 91 || (t < 97 ? 95 === t : t < 123 || (t <= 65535 ? t >= 170 && h.test(String.fromCharCode(t)) : !1 !== e && (u(t, l) || u(t, c)))))
                    }
                    var f = function(t, e) {
                        void 0 === e && (e = {}), this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = e.binop || null, this.updateContext = null
                    };

                    function g(t, e) {
                        return new f(t, {
                            beforeExpr: !0,
                            binop: e
                        })
                    }
                    var m = {
                            beforeExpr: !0
                        },
                        v = {
                            startsExpr: !0
                        },
                        _ = {};

                    function y(t, e) {
                        return void 0 === e && (e = {}), e.keyword = t, _[t] = new f(t, e)
                    }
                    var x = {
                            num: new f("num", v),
                            regexp: new f("regexp", v),
                            string: new f("string", v),
                            name: new f("name", v),
                            privateId: new f("privateId", v),
                            eof: new f("eof"),
                            bracketL: new f("[", {
                                beforeExpr: !0,
                                startsExpr: !0
                            }),
                            bracketR: new f("]"),
                            braceL: new f("{", {
                                beforeExpr: !0,
                                startsExpr: !0
                            }),
                            braceR: new f("}"),
                            parenL: new f("(", {
                                beforeExpr: !0,
                                startsExpr: !0
                            }),
                            parenR: new f(")"),
                            comma: new f(",", m),
                            semi: new f(";", m),
                            colon: new f(":", m),
                            dot: new f("."),
                            question: new f("?", m),
                            questionDot: new f("?."),
                            arrow: new f("=>", m),
                            template: new f("template"),
                            invalidTemplate: new f("invalidTemplate"),
                            ellipsis: new f("...", m),
                            backQuote: new f("`", v),
                            dollarBraceL: new f("${", {
                                beforeExpr: !0,
                                startsExpr: !0
                            }),
                            eq: new f("=", {
                                beforeExpr: !0,
                                isAssign: !0
                            }),
                            assign: new f("_=", {
                                beforeExpr: !0,
                                isAssign: !0
                            }),
                            incDec: new f("++/--", {
                                prefix: !0,
                                postfix: !0,
                                startsExpr: !0
                            }),
                            prefix: new f("!/~", {
                                beforeExpr: !0,
                                prefix: !0,
                                startsExpr: !0
                            }),
                            logicalOR: g("||", 1),
                            logicalAND: g("&&", 2),
                            bitwiseOR: g("|", 3),
                            bitwiseXOR: g("^", 4),
                            bitwiseAND: g("&", 5),
                            equality: g("==/!=/===/!==", 6),
                            relational: g("</>/<=/>=", 7),
                            bitShift: g("<</>>/>>>", 8),
                            plusMin: new f("+/-", {
                                beforeExpr: !0,
                                binop: 9,
                                prefix: !0,
                                startsExpr: !0
                            }),
                            modulo: g("%", 10),
                            star: g("*", 10),
                            slash: g("/", 10),
                            starstar: new f("**", {
                                beforeExpr: !0
                            }),
                            coalesce: g("??", 1),
                            _break: y("break"),
                            _case: y("case", m),
                            _catch: y("catch"),
                            _continue: y("continue"),
                            _debugger: y("debugger"),
                            _default: y("default", m),
                            _do: y("do", {
                                isLoop: !0,
                                beforeExpr: !0
                            }),
                            _else: y("else", m),
                            _finally: y("finally"),
                            _for: y("for", {
                                isLoop: !0
                            }),
                            _function: y("function", v),
                            _if: y("if"),
                            _return: y("return", m),
                            _switch: y("switch"),
                            _throw: y("throw", m),
                            _try: y("try"),
                            _var: y("var"),
                            _const: y("const"),
                            _while: y("while", {
                                isLoop: !0
                            }),
                            _with: y("with"),
                            _new: y("new", {
                                beforeExpr: !0,
                                startsExpr: !0
                            }),
                            _this: y("this", v),
                            _super: y("super", v),
                            _class: y("class", v),
                            _extends: y("extends", m),
                            _export: y("export"),
                            _import: y("import", v),
                            _null: y("null", v),
                            _true: y("true", v),
                            _false: y("false", v),
                            _in: y("in", {
                                beforeExpr: !0,
                                binop: 7
                            }),
                            _instanceof: y("instanceof", {
                                beforeExpr: !0,
                                binop: 7
                            }),
                            _typeof: y("typeof", {
                                beforeExpr: !0,
                                prefix: !0,
                                startsExpr: !0
                            }),
                            _void: y("void", {
                                beforeExpr: !0,
                                prefix: !0,
                                startsExpr: !0
                            }),
                            _delete: y("delete", {
                                beforeExpr: !0,
                                prefix: !0,
                                startsExpr: !0
                            })
                        },
                        b = /\r\n?|\n|\u2028|\u2029/,
                        w = new RegExp(b.source, "g");

                    function S(t, e) {
                        return 10 === t || 13 === t || !e && (8232 === t || 8233 === t)
                    }
                    var C = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
                        k = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,
                        A = Object.prototype,
                        P = A.hasOwnProperty,
                        M = A.toString;

                    function T(t, e) {
                        return P.call(t, e)
                    }
                    var E = Array.isArray || function(t) {
                        return "[object Array]" === M.call(t)
                    };

                    function I(t) {
                        return new RegExp("^(?:" + t.replace(/ /g, "|") + ")$")
                    }
                    var O = function(t, e) {
                        this.line = t, this.column = e
                    };
                    O.prototype.offset = function(t) {
                        return new O(this.line, this.column + t)
                    };
                    var L = function(t, e, i) {
                        this.start = e, this.end = i, null !== t.sourceFile && (this.source = t.sourceFile)
                    };

                    function D(t, e) {
                        for (var i = 1, n = 0;;) {
                            w.lastIndex = n;
                            var r = w.exec(t);
                            if (!(r && r.index < e)) return new O(i, e - n);
                            ++i, n = r.index + r[0].length
                        }
                    }
                    var B = {
                            ecmaVersion: null,
                            sourceType: "script",
                            onInsertedSemicolon: null,
                            onTrailingComma: null,
                            allowReserved: null,
                            allowReturnOutsideFunction: !1,
                            allowImportExportEverywhere: !1,
                            allowAwaitOutsideFunction: null,
                            allowSuperOutsideMethod: null,
                            allowHashBang: !1,
                            locations: !1,
                            onToken: null,
                            onComment: null,
                            ranges: !1,
                            program: null,
                            sourceFile: null,
                            directSourceFile: null,
                            preserveParens: !1
                        },
                        R = !1;

                    function z(t) {
                        var e = {};
                        for (var i in B) e[i] = t && T(t, i) ? t[i] : B[i];
                        if ("latest" === e.ecmaVersion ? e.ecmaVersion = 1e8 : null == e.ecmaVersion ? (!R && "object" == typeof console && console.warn && (R = !0, console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.")), e.ecmaVersion = 11) : e.ecmaVersion >= 2015 && (e.ecmaVersion -= 2009), null == e.allowReserved && (e.allowReserved = e.ecmaVersion < 5), E(e.onToken)) {
                            var n = e.onToken;
                            e.onToken = function(t) {
                                return n.push(t)
                            }
                        }
                        return E(e.onComment) && (e.onComment = N(e, e.onComment)), e
                    }

                    function N(t, e) {
                        return function(i, n, r, s, a, o) {
                            var h = {
                                type: i ? "Block" : "Line",
                                value: n,
                                start: r,
                                end: s
                            };
                            t.locations && (h.loc = new L(this, a, o)), t.ranges && (h.range = [r, s]), e.push(h)
                        }
                    }
                    var V = 1,
                        F = 2,
                        j = V | F,
                        q = 4,
                        H = 8,
                        W = 16,
                        U = 32,
                        Y = 64,
                        X = 128;

                    function G(t, e) {
                        return F | (t ? q : 0) | (e ? H : 0)
                    }
                    var Z = 0,
                        Q = 1,
                        $ = 2,
                        K = 3,
                        J = 4,
                        tt = 5,
                        et = function(t, i, r) {
                            this.options = t = z(t), this.sourceFile = t.sourceFile, this.keywords = I(n[t.ecmaVersion >= 6 ? 6 : "module" === t.sourceType ? "5module" : 5]);
                            var s = "";
                            !0 !== t.allowReserved && (s = e[t.ecmaVersion >= 6 ? 6 : 5 === t.ecmaVersion ? 5 : 3], "module" === t.sourceType && (s += " await")), this.reservedWords = I(s);
                            var a = (s ? s + " " : "") + e.strict;
                            this.reservedWordsStrict = I(a), this.reservedWordsStrictBind = I(a + " " + e.strictBind), this.input = String(i), this.containsEsc = !1, r ? (this.pos = r, this.lineStart = this.input.lastIndexOf("\n", r - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(b).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = x.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0, this.inModule = "module" === t.sourceType, this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = Object.create(null), 0 === this.pos && t.allowHashBang && "#!" === this.input.slice(0, 2) && this.skipLineComment(2), this.scopeStack = [], this.enterScope(V), this.regexpState = null, this.privateNameStack = []
                        },
                        it = {
                            inFunction: {
                                configurable: !0
                            },
                            inGenerator: {
                                configurable: !0
                            },
                            inAsync: {
                                configurable: !0
                            },
                            canAwait: {
                                configurable: !0
                            },
                            allowSuper: {
                                configurable: !0
                            },
                            allowDirectSuper: {
                                configurable: !0
                            },
                            treatFunctionsAsVar: {
                                configurable: !0
                            },
                            inNonArrowFunction: {
                                configurable: !0
                            }
                        };
                    et.prototype.parse = function() {
                        var t = this.options.program || this.startNode();
                        return this.nextToken(), this.parseTopLevel(t)
                    }, it.inFunction.get = function() {
                        return (this.currentVarScope().flags & F) > 0
                    }, it.inGenerator.get = function() {
                        return (this.currentVarScope().flags & H) > 0 && !this.currentVarScope().inClassFieldInit
                    }, it.inAsync.get = function() {
                        return (this.currentVarScope().flags & q) > 0 && !this.currentVarScope().inClassFieldInit
                    }, it.canAwait.get = function() {
                        for (var t = this.scopeStack.length - 1; t >= 0; t--) {
                            var e = this.scopeStack[t];
                            if (e.inClassFieldInit) return !1;
                            if (e.flags & F) return (e.flags & q) > 0
                        }
                        return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction
                    }, it.allowSuper.get = function() {
                        var t = this.currentThisScope(),
                            e = t.flags,
                            i = t.inClassFieldInit;
                        return (e & Y) > 0 || i || this.options.allowSuperOutsideMethod
                    }, it.allowDirectSuper.get = function() {
                        return (this.currentThisScope().flags & X) > 0
                    }, it.treatFunctionsAsVar.get = function() {
                        return this.treatFunctionsAsVarInScope(this.currentScope())
                    }, it.inNonArrowFunction.get = function() {
                        var t = this.currentThisScope(),
                            e = t.flags,
                            i = t.inClassFieldInit;
                        return (e & F) > 0 || i
                    }, et.extend = function() {
                        for (var t = [], e = arguments.length; e--;) t[e] = arguments[e];
                        for (var i = this, n = 0; n < t.length; n++) i = t[n](i);
                        return i
                    }, et.parse = function(t, e) {
                        return new this(e, t).parse()
                    }, et.parseExpressionAt = function(t, e, i) {
                        var n = new this(i, t, e);
                        return n.nextToken(), n.parseExpression()
                    }, et.tokenizer = function(t, e) {
                        return new this(e, t)
                    }, Object.defineProperties(et.prototype, it);
                    var nt = et.prototype,
                        rt = /^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/;

                    function st() {
                        this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1
                    }
                    nt.strictDirective = function(t) {
                        for (;;) {
                            k.lastIndex = t, t += k.exec(this.input)[0].length;
                            var e = rt.exec(this.input.slice(t));
                            if (!e) return !1;
                            if ("use strict" === (e[1] || e[2])) {
                                k.lastIndex = t + e[0].length;
                                var i = k.exec(this.input),
                                    n = i.index + i[0].length,
                                    r = this.input.charAt(n);
                                return ";" === r || "}" === r || b.test(i[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(r) || "!" === r && "=" === this.input.charAt(n + 1))
                            }
                            t += e[0].length, k.lastIndex = t, t += k.exec(this.input)[0].length, ";" === this.input[t] && t++
                        }
                    }, nt.eat = function(t) {
                        return this.type === t && (this.next(), !0)
                    }, nt.isContextual = function(t) {
                        return this.type === x.name && this.value === t && !this.containsEsc
                    }, nt.eatContextual = function(t) {
                        return !!this.isContextual(t) && (this.next(), !0)
                    }, nt.expectContextual = function(t) {
                        this.eatContextual(t) || this.unexpected()
                    }, nt.canInsertSemicolon = function() {
                        return this.type === x.eof || this.type === x.braceR || b.test(this.input.slice(this.lastTokEnd, this.start))
                    }, nt.insertSemicolon = function() {
                        if (this.canInsertSemicolon()) return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0
                    }, nt.semicolon = function() {
                        this.eat(x.semi) || this.insertSemicolon() || this.unexpected()
                    }, nt.afterTrailingComma = function(t, e) {
                        if (this.type === t) return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), e || this.next(), !0
                    }, nt.expect = function(t) {
                        this.eat(t) || this.unexpected()
                    }, nt.unexpected = function(t) {
                        this.raise(null != t ? t : this.start, "Unexpected token")
                    }, nt.checkPatternErrors = function(t, e) {
                        if (t) {
                            t.trailingComma > -1 && this.raiseRecoverable(t.trailingComma, "Comma is not permitted after the rest element");
                            var i = e ? t.parenthesizedAssign : t.parenthesizedBind;
                            i > -1 && this.raiseRecoverable(i, "Parenthesized pattern")
                        }
                    }, nt.checkExpressionErrors = function(t, e) {
                        if (!t) return !1;
                        var i = t.shorthandAssign,
                            n = t.doubleProto;
                        if (!e) return i >= 0 || n >= 0;
                        i >= 0 && this.raise(i, "Shorthand property assignments are valid only in destructuring patterns"), n >= 0 && this.raiseRecoverable(n, "Redefinition of __proto__ property")
                    }, nt.checkYieldAwaitInDefaultParams = function() {
                        this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value")
                    }, nt.isSimpleAssignTarget = function(t) {
                        return "ParenthesizedExpression" === t.type ? this.isSimpleAssignTarget(t.expression) : "Identifier" === t.type || "MemberExpression" === t.type
                    };
                    var at = et.prototype;
                    at.parseTopLevel = function(t) {
                        var e = Object.create(null);
                        for (t.body || (t.body = []); this.type !== x.eof;) {
                            var i = this.parseStatement(null, !0, e);
                            t.body.push(i)
                        }
                        if (this.inModule)
                            for (var n = 0, r = Object.keys(this.undefinedExports); n < r.length; n += 1) {
                                var s = r[n];
                                this.raiseRecoverable(this.undefinedExports[s].start, "Export '" + s + "' is not defined")
                            }
                        return this.adaptDirectivePrologue(t.body), this.next(), t.sourceType = this.options.sourceType, this.finishNode(t, "Program")
                    };
                    var ot = {
                            kind: "loop"
                        },
                        ht = {
                            kind: "switch"
                        };
                    at.isLet = function(t) {
                        if (this.options.ecmaVersion < 6 || !this.isContextual("let")) return !1;
                        k.lastIndex = this.pos;
                        var e = k.exec(this.input),
                            i = this.pos + e[0].length,
                            n = this.input.charCodeAt(i);
                        if (91 === n || 92 === n || n > 55295 && n < 56320) return !0;
                        if (t) return !1;
                        if (123 === n) return !0;
                        if (d(n, !0)) {
                            for (var s = i + 1; p(n = this.input.charCodeAt(s), !0);) ++s;
                            if (92 === n || n > 55295 && n < 56320) return !0;
                            var a = this.input.slice(i, s);
                            if (!r.test(a)) return !0
                        }
                        return !1
                    }, at.isAsyncFunction = function() {
                        if (this.options.ecmaVersion < 8 || !this.isContextual("async")) return !1;
                        k.lastIndex = this.pos;
                        var t, e = k.exec(this.input),
                            i = this.pos + e[0].length;
                        return !(b.test(this.input.slice(this.pos, i)) || "function" !== this.input.slice(i, i + 8) || i + 8 !== this.input.length && (p(t = this.input.charCodeAt(i + 8)) || t > 55295 && t < 56320))
                    }, at.parseStatement = function(t, e, i) {
                        var n, r = this.type,
                            s = this.startNode();
                        switch (this.isLet(t) && (r = x._var, n = "let"), r) {
                            case x._break:
                            case x._continue:
                                return this.parseBreakContinueStatement(s, r.keyword);
                            case x._debugger:
                                return this.parseDebuggerStatement(s);
                            case x._do:
                                return this.parseDoStatement(s);
                            case x._for:
                                return this.parseForStatement(s);
                            case x._function:
                                return t && (this.strict || "if" !== t && "label" !== t) && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(s, !1, !t);
                            case x._class:
                                return t && this.unexpected(), this.parseClass(s, !0);
                            case x._if:
                                return this.parseIfStatement(s);
                            case x._return:
                                return this.parseReturnStatement(s);
                            case x._switch:
                                return this.parseSwitchStatement(s);
                            case x._throw:
                                return this.parseThrowStatement(s);
                            case x._try:
                                return this.parseTryStatement(s);
                            case x._const:
                            case x._var:
                                return n = n || this.value, t && "var" !== n && this.unexpected(), this.parseVarStatement(s, n);
                            case x._while:
                                return this.parseWhileStatement(s);
                            case x._with:
                                return this.parseWithStatement(s);
                            case x.braceL:
                                return this.parseBlock(!0, s);
                            case x.semi:
                                return this.parseEmptyStatement(s);
                            case x._export:
                            case x._import:
                                if (this.options.ecmaVersion > 10 && r === x._import) {
                                    k.lastIndex = this.pos;
                                    var a = k.exec(this.input),
                                        o = this.pos + a[0].length,
                                        h = this.input.charCodeAt(o);
                                    if (40 === h || 46 === h) return this.parseExpressionStatement(s, this.parseExpression())
                                }
                                return this.options.allowImportExportEverywhere || (e || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), r === x._import ? this.parseImport(s) : this.parseExport(s, i);
                            default:
                                if (this.isAsyncFunction()) return t && this.unexpected(), this.next(), this.parseFunctionStatement(s, !0, !t);
                                var l = this.value,
                                    c = this.parseExpression();
                                return r === x.name && "Identifier" === c.type && this.eat(x.colon) ? this.parseLabeledStatement(s, l, c, t) : this.parseExpressionStatement(s, c)
                        }
                    }, at.parseBreakContinueStatement = function(t, e) {
                        var i = "break" === e;
                        this.next(), this.eat(x.semi) || this.insertSemicolon() ? t.label = null : this.type !== x.name ? this.unexpected() : (t.label = this.parseIdent(), this.semicolon());
                        for (var n = 0; n < this.labels.length; ++n) {
                            var r = this.labels[n];
                            if (null == t.label || r.name === t.label.name) {
                                if (null != r.kind && (i || "loop" === r.kind)) break;
                                if (t.label && i) break
                            }
                        }
                        return n === this.labels.length && this.raise(t.start, "Unsyntactic " + e), this.finishNode(t, i ? "BreakStatement" : "ContinueStatement")
                    }, at.parseDebuggerStatement = function(t) {
                        return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement")
                    }, at.parseDoStatement = function(t) {
                        return this.next(), this.labels.push(ot), t.body = this.parseStatement("do"), this.labels.pop(), this.expect(x._while), t.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(x.semi) : this.semicolon(), this.finishNode(t, "DoWhileStatement")
                    }, at.parseForStatement = function(t) {
                        this.next();
                        var e = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
                        if (this.labels.push(ot), this.enterScope(0), this.expect(x.parenL), this.type === x.semi) return e > -1 && this.unexpected(e), this.parseFor(t, null);
                        var i = this.isLet();
                        if (this.type === x._var || this.type === x._const || i) {
                            var n = this.startNode(),
                                r = i ? "let" : this.value;
                            return this.next(), this.parseVar(n, !0, r), this.finishNode(n, "VariableDeclaration"), (this.type === x._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && 1 === n.declarations.length ? (this.options.ecmaVersion >= 9 && (this.type === x._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.parseForIn(t, n)) : (e > -1 && this.unexpected(e), this.parseFor(t, n))
                        }
                        var s = new st,
                            a = this.parseExpression(!(e > -1) || "await", s);
                        return this.type === x._in || this.options.ecmaVersion >= 6 && this.isContextual("of") ? (this.options.ecmaVersion >= 9 && (this.type === x._in ? e > -1 && this.unexpected(e) : t.await = e > -1), this.toAssignable(a, !1, s), this.checkLValPattern(a), this.parseForIn(t, a)) : (this.checkExpressionErrors(s, !0), e > -1 && this.unexpected(e), this.parseFor(t, a))
                    }, at.parseFunctionStatement = function(t, e, i) {
                        return this.next(), this.parseFunction(t, ct | (i ? 0 : ut), !1, e)
                    }, at.parseIfStatement = function(t) {
                        return this.next(), t.test = this.parseParenExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(x._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement")
                    }, at.parseReturnStatement = function(t) {
                        return this.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.start, "'return' outside of function"), this.next(), this.eat(x.semi) || this.insertSemicolon() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement")
                    }, at.parseSwitchStatement = function(t) {
                        var e;
                        this.next(), t.discriminant = this.parseParenExpression(), t.cases = [], this.expect(x.braceL), this.labels.push(ht), this.enterScope(0);
                        for (var i = !1; this.type !== x.braceR;)
                            if (this.type === x._case || this.type === x._default) {
                                var n = this.type === x._case;
                                e && this.finishNode(e, "SwitchCase"), t.cases.push(e = this.startNode()), e.consequent = [], this.next(), n ? e.test = this.parseExpression() : (i && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), i = !0, e.test = null), this.expect(x.colon)
                            } else e || this.unexpected(), e.consequent.push(this.parseStatement(null));
                        return this.exitScope(), e && this.finishNode(e, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(t, "SwitchStatement")
                    }, at.parseThrowStatement = function(t) {
                        return this.next(), b.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement")
                    };
                    var lt = [];
                    at.parseTryStatement = function(t) {
                        if (this.next(), t.block = this.parseBlock(), t.handler = null, this.type === x._catch) {
                            var e = this.startNode();
                            if (this.next(), this.eat(x.parenL)) {
                                e.param = this.parseBindingAtom();
                                var i = "Identifier" === e.param.type;
                                this.enterScope(i ? U : 0), this.checkLValPattern(e.param, i ? J : $), this.expect(x.parenR)
                            } else this.options.ecmaVersion < 10 && this.unexpected(), e.param = null, this.enterScope(0);
                            e.body = this.parseBlock(!1), this.exitScope(), t.handler = this.finishNode(e, "CatchClause")
                        }
                        return t.finalizer = this.eat(x._finally) ? this.parseBlock() : null, t.handler || t.finalizer || this.raise(t.start, "Missing catch or finally clause"), this.finishNode(t, "TryStatement")
                    }, at.parseVarStatement = function(t, e) {
                        return this.next(), this.parseVar(t, !1, e), this.semicolon(), this.finishNode(t, "VariableDeclaration")
                    }, at.parseWhileStatement = function(t) {
                        return this.next(), t.test = this.parseParenExpression(), this.labels.push(ot), t.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(t, "WhileStatement")
                    }, at.parseWithStatement = function(t) {
                        return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), t.object = this.parseParenExpression(), t.body = this.parseStatement("with"), this.finishNode(t, "WithStatement")
                    }, at.parseEmptyStatement = function(t) {
                        return this.next(), this.finishNode(t, "EmptyStatement")
                    }, at.parseLabeledStatement = function(t, e, i, n) {
                        for (var r = 0, s = this.labels; r < s.length; r += 1) s[r].name === e && this.raise(i.start, "Label '" + e + "' is already declared");
                        for (var a = this.type.isLoop ? "loop" : this.type === x._switch ? "switch" : null, o = this.labels.length - 1; o >= 0; o--) {
                            var h = this.labels[o];
                            if (h.statementStart !== t.start) break;
                            h.statementStart = this.start, h.kind = a
                        }
                        return this.labels.push({
                            name: e,
                            kind: a,
                            statementStart: this.start
                        }), t.body = this.parseStatement(n ? -1 === n.indexOf("label") ? n + "label" : n : "label"), this.labels.pop(), t.label = i, this.finishNode(t, "LabeledStatement")
                    }, at.parseExpressionStatement = function(t, e) {
                        return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement")
                    }, at.parseBlock = function(t, e, i) {
                        for (void 0 === t && (t = !0), void 0 === e && (e = this.startNode()), e.body = [], this.expect(x.braceL), t && this.enterScope(0); this.type !== x.braceR;) {
                            var n = this.parseStatement(null);
                            e.body.push(n)
                        }
                        return i && (this.strict = !1), this.next(), t && this.exitScope(), this.finishNode(e, "BlockStatement")
                    }, at.parseFor = function(t, e) {
                        return t.init = e, this.expect(x.semi), t.test = this.type === x.semi ? null : this.parseExpression(), this.expect(x.semi), t.update = this.type === x.parenR ? null : this.parseExpression(), this.expect(x.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, "ForStatement")
                    }, at.parseForIn = function(t, e) {
                        var i = this.type === x._in;
                        return this.next(), "VariableDeclaration" === e.type && null != e.declarations[0].init && (!i || this.options.ecmaVersion < 8 || this.strict || "var" !== e.kind || "Identifier" !== e.declarations[0].id.type) && this.raise(e.start, (i ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssign(), this.expect(x.parenR), t.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(t, i ? "ForInStatement" : "ForOfStatement")
                    }, at.parseVar = function(t, e, i) {
                        for (t.declarations = [], t.kind = i;;) {
                            var n = this.startNode();
                            if (this.parseVarId(n, i), this.eat(x.eq) ? n.init = this.parseMaybeAssign(e) : "const" !== i || this.type === x._in || this.options.ecmaVersion >= 6 && this.isContextual("of") ? "Identifier" === n.id.type || e && (this.type === x._in || this.isContextual("of")) ? n.init = null : this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : this.unexpected(), t.declarations.push(this.finishNode(n, "VariableDeclarator")), !this.eat(x.comma)) break
                        }
                        return t
                    }, at.parseVarId = function(t, e) {
                        t.id = this.parseBindingAtom(), this.checkLValPattern(t.id, "var" === e ? Q : $, !1)
                    };
                    var ct = 1,
                        ut = 2,
                        dt = 4;

                    function pt(t, e) {
                        var i = e.key.name,
                            n = t[i],
                            r = "true";
                        return "MethodDefinition" !== e.type || "get" !== e.kind && "set" !== e.kind || (r = (e.static ? "s" : "i") + e.kind), "iget" === n && "iset" === r || "iset" === n && "iget" === r || "sget" === n && "sset" === r || "sset" === n && "sget" === r ? (t[i] = "true", !1) : !!n || (t[i] = r, !1)
                    }

                    function ft(t, e) {
                        var i = t.computed,
                            n = t.key;
                        return !i && ("Identifier" === n.type && n.name === e || "Literal" === n.type && n.value === e)
                    }
                    at.parseFunction = function(t, e, i, n) {
                        this.initFunction(t), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !n) && (this.type === x.star && e & ut && this.unexpected(), t.generator = this.eat(x.star)), this.options.ecmaVersion >= 8 && (t.async = !!n), e & ct && (t.id = e & dt && this.type !== x.name ? null : this.parseIdent(), !t.id || e & ut || this.checkLValSimple(t.id, this.strict || t.generator || t.async ? this.treatFunctionsAsVar ? Q : $ : K));
                        var r = this.yieldPos,
                            s = this.awaitPos,
                            a = this.awaitIdentPos;
                        return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(G(t.async, t.generator)), e & ct || (t.id = this.type === x.name ? this.parseIdent() : null), this.parseFunctionParams(t), this.parseFunctionBody(t, i, !1), this.yieldPos = r, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(t, e & ct ? "FunctionDeclaration" : "FunctionExpression")
                    }, at.parseFunctionParams = function(t) {
                        this.expect(x.parenL), t.params = this.parseBindingList(x.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams()
                    }, at.parseClass = function(t, e) {
                        this.next();
                        var i = this.strict;
                        this.strict = !0, this.parseClassId(t, e), this.parseClassSuper(t);
                        var n = this.enterClassBody(),
                            r = this.startNode(),
                            s = !1;
                        for (r.body = [], this.expect(x.braceL); this.type !== x.braceR;) {
                            var a = this.parseClassElement(null !== t.superClass);
                            a && (r.body.push(a), "MethodDefinition" === a.type && "constructor" === a.kind ? (s && this.raise(a.start, "Duplicate constructor in the same class"), s = !0) : "PrivateIdentifier" === a.key.type && pt(n, a) && this.raiseRecoverable(a.key.start, "Identifier '#" + a.key.name + "' has already been declared"))
                        }
                        return this.strict = i, this.next(), t.body = this.finishNode(r, "ClassBody"), this.exitClassBody(), this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression")
                    }, at.parseClassElement = function(t) {
                        if (this.eat(x.semi)) return null;
                        var e = this.options.ecmaVersion,
                            i = this.startNode(),
                            n = "",
                            r = !1,
                            s = !1,
                            a = "method";
                        if (i.static = !1, this.eatContextual("static") && (this.isClassElementNameStart() || this.type === x.star ? i.static = !0 : n = "static"), !n && e >= 8 && this.eatContextual("async") && (!this.isClassElementNameStart() && this.type !== x.star || this.canInsertSemicolon() ? n = "async" : s = !0), !n && (e >= 9 || !s) && this.eat(x.star) && (r = !0), !n && !s && !r) {
                            var o = this.value;
                            (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = o : n = o)
                        }
                        if (n ? (i.computed = !1, i.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), i.key.name = n, this.finishNode(i.key, "Identifier")) : this.parseClassElementName(i), e < 13 || this.type === x.parenL || "method" !== a || r || s) {
                            var h = !i.static && ft(i, "constructor"),
                                l = h && t;
                            h && "method" !== a && this.raise(i.key.start, "Constructor can't have get/set modifier"), i.kind = h ? "constructor" : a, this.parseClassMethod(i, r, s, l)
                        } else this.parseClassField(i);
                        return i
                    }, at.isClassElementNameStart = function() {
                        return this.type === x.name || this.type === x.privateId || this.type === x.num || this.type === x.string || this.type === x.bracketL || this.type.keyword
                    }, at.parseClassElementName = function(t) {
                        this.type === x.privateId ? ("constructor" === this.value && this.raise(this.start, "Classes can't have an element named '#constructor'"), t.computed = !1, t.key = this.parsePrivateIdent()) : this.parsePropertyName(t)
                    }, at.parseClassMethod = function(t, e, i, n) {
                        var r = t.key;
                        "constructor" === t.kind ? (e && this.raise(r.start, "Constructor can't be a generator"), i && this.raise(r.start, "Constructor can't be an async method")) : t.static && ft(t, "prototype") && this.raise(r.start, "Classes may not have a static property named prototype");
                        var s = t.value = this.parseMethod(e, i, n);
                        return "get" === t.kind && 0 !== s.params.length && this.raiseRecoverable(s.start, "getter should have no params"), "set" === t.kind && 1 !== s.params.length && this.raiseRecoverable(s.start, "setter should have exactly one param"), "set" === t.kind && "RestElement" === s.params[0].type && this.raiseRecoverable(s.params[0].start, "Setter cannot use rest params"), this.finishNode(t, "MethodDefinition")
                    }, at.parseClassField = function(t) {
                        if (ft(t, "constructor") ? this.raise(t.key.start, "Classes can't have a field named 'constructor'") : t.static && ft(t, "prototype") && this.raise(t.key.start, "Classes can't have a static field named 'prototype'"), this.eat(x.eq)) {
                            var e = this.currentThisScope(),
                                i = e.inClassFieldInit;
                            e.inClassFieldInit = !0, t.value = this.parseMaybeAssign(), e.inClassFieldInit = i
                        } else t.value = null;
                        return this.semicolon(), this.finishNode(t, "PropertyDefinition")
                    }, at.parseClassId = function(t, e) {
                        this.type === x.name ? (t.id = this.parseIdent(), e && this.checkLValSimple(t.id, $, !1)) : (!0 === e && this.unexpected(), t.id = null)
                    }, at.parseClassSuper = function(t) {
                        t.superClass = this.eat(x._extends) ? this.parseExprSubscripts() : null
                    }, at.enterClassBody = function() {
                        var t = {
                            declared: Object.create(null),
                            used: []
                        };
                        return this.privateNameStack.push(t), t.declared
                    }, at.exitClassBody = function() {
                        for (var t = this.privateNameStack.pop(), e = t.declared, i = t.used, n = this.privateNameStack.length, r = 0 === n ? null : this.privateNameStack[n - 1], s = 0; s < i.length; ++s) {
                            var a = i[s];
                            T(e, a.name) || (r ? r.used.push(a) : this.raiseRecoverable(a.start, "Private field '#" + a.name + "' must be declared in an enclosing class"))
                        }
                    }, at.parseExport = function(t, e) {
                        if (this.next(), this.eat(x.star)) return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (t.exported = this.parseIdent(!0), this.checkExport(e, t.exported.name, this.lastTokStart)) : t.exported = null), this.expectContextual("from"), this.type !== x.string && this.unexpected(), t.source = this.parseExprAtom(), this.semicolon(), this.finishNode(t, "ExportAllDeclaration");
                        if (this.eat(x._default)) {
                            var i;
                            if (this.checkExport(e, "default", this.lastTokStart), this.type === x._function || (i = this.isAsyncFunction())) {
                                var n = this.startNode();
                                this.next(), i && this.next(), t.declaration = this.parseFunction(n, ct | dt, !1, i)
                            } else if (this.type === x._class) {
                                var r = this.startNode();
                                t.declaration = this.parseClass(r, "nullableID")
                            } else t.declaration = this.parseMaybeAssign(), this.semicolon();
                            return this.finishNode(t, "ExportDefaultDeclaration")
                        }
                        if (this.shouldParseExportStatement()) t.declaration = this.parseStatement(null), "VariableDeclaration" === t.declaration.type ? this.checkVariableExport(e, t.declaration.declarations) : this.checkExport(e, t.declaration.id.name, t.declaration.id.start), t.specifiers = [], t.source = null;
                        else {
                            if (t.declaration = null, t.specifiers = this.parseExportSpecifiers(e), this.eatContextual("from")) this.type !== x.string && this.unexpected(), t.source = this.parseExprAtom();
                            else {
                                for (var s = 0, a = t.specifiers; s < a.length; s += 1) {
                                    var o = a[s];
                                    this.checkUnreserved(o.local), this.checkLocalExport(o.local)
                                }
                                t.source = null
                            }
                            this.semicolon()
                        }
                        return this.finishNode(t, "ExportNamedDeclaration")
                    }, at.checkExport = function(t, e, i) {
                        t && (T(t, e) && this.raiseRecoverable(i, "Duplicate export '" + e + "'"), t[e] = !0)
                    }, at.checkPatternExport = function(t, e) {
                        var i = e.type;
                        if ("Identifier" === i) this.checkExport(t, e.name, e.start);
                        else if ("ObjectPattern" === i)
                            for (var n = 0, r = e.properties; n < r.length; n += 1) {
                                var s = r[n];
                                this.checkPatternExport(t, s)
                            } else if ("ArrayPattern" === i)
                                for (var a = 0, o = e.elements; a < o.length; a += 1) {
                                    var h = o[a];
                                    h && this.checkPatternExport(t, h)
                                } else "Property" === i ? this.checkPatternExport(t, e.value) : "AssignmentPattern" === i ? this.checkPatternExport(t, e.left) : "RestElement" === i ? this.checkPatternExport(t, e.argument) : "ParenthesizedExpression" === i && this.checkPatternExport(t, e.expression)
                    }, at.checkVariableExport = function(t, e) {
                        if (t)
                            for (var i = 0, n = e; i < n.length; i += 1) {
                                var r = n[i];
                                this.checkPatternExport(t, r.id)
                            }
                    }, at.shouldParseExportStatement = function() {
                        return "var" === this.type.keyword || "const" === this.type.keyword || "class" === this.type.keyword || "function" === this.type.keyword || this.isLet() || this.isAsyncFunction()
                    }, at.parseExportSpecifiers = function(t) {
                        var e = [],
                            i = !0;
                        for (this.expect(x.braceL); !this.eat(x.braceR);) {
                            if (i) i = !1;
                            else if (this.expect(x.comma), this.afterTrailingComma(x.braceR)) break;
                            var n = this.startNode();
                            n.local = this.parseIdent(!0), n.exported = this.eatContextual("as") ? this.parseIdent(!0) : n.local, this.checkExport(t, n.exported.name, n.exported.start), e.push(this.finishNode(n, "ExportSpecifier"))
                        }
                        return e
                    }, at.parseImport = function(t) {
                        return this.next(), this.type === x.string ? (t.specifiers = lt, t.source = this.parseExprAtom()) : (t.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), t.source = this.type === x.string ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(t, "ImportDeclaration")
                    }, at.parseImportSpecifiers = function() {
                        var t = [],
                            e = !0;
                        if (this.type === x.name) {
                            var i = this.startNode();
                            if (i.local = this.parseIdent(), this.checkLValSimple(i.local, $), t.push(this.finishNode(i, "ImportDefaultSpecifier")), !this.eat(x.comma)) return t
                        }
                        if (this.type === x.star) {
                            var n = this.startNode();
                            return this.next(), this.expectContextual("as"), n.local = this.parseIdent(), this.checkLValSimple(n.local, $), t.push(this.finishNode(n, "ImportNamespaceSpecifier")), t
                        }
                        for (this.expect(x.braceL); !this.eat(x.braceR);) {
                            if (e) e = !1;
                            else if (this.expect(x.comma), this.afterTrailingComma(x.braceR)) break;
                            var r = this.startNode();
                            r.imported = this.parseIdent(!0), this.eatContextual("as") ? r.local = this.parseIdent() : (this.checkUnreserved(r.imported), r.local = r.imported), this.checkLValSimple(r.local, $), t.push(this.finishNode(r, "ImportSpecifier"))
                        }
                        return t
                    }, at.adaptDirectivePrologue = function(t) {
                        for (var e = 0; e < t.length && this.isDirectiveCandidate(t[e]); ++e) t[e].directive = t[e].expression.raw.slice(1, -1)
                    }, at.isDirectiveCandidate = function(t) {
                        return "ExpressionStatement" === t.type && "Literal" === t.expression.type && "string" == typeof t.expression.value && ('"' === this.input[t.start] || "'" === this.input[t.start])
                    };
                    var gt = et.prototype;
                    gt.toAssignable = function(t, e, i) {
                        if (this.options.ecmaVersion >= 6 && t) switch (t.type) {
                            case "Identifier":
                                this.inAsync && "await" === t.name && this.raise(t.start, "Cannot use 'await' as identifier inside an async function");
                                break;
                            case "ObjectPattern":
                            case "ArrayPattern":
                            case "AssignmentPattern":
                            case "RestElement":
                                break;
                            case "ObjectExpression":
                                t.type = "ObjectPattern", i && this.checkPatternErrors(i, !0);
                                for (var n = 0, r = t.properties; n < r.length; n += 1) {
                                    var s = r[n];
                                    this.toAssignable(s, e), "RestElement" !== s.type || "ArrayPattern" !== s.argument.type && "ObjectPattern" !== s.argument.type || this.raise(s.argument.start, "Unexpected token")
                                }
                                break;
                            case "Property":
                                "init" !== t.kind && this.raise(t.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(t.value, e);
                                break;
                            case "ArrayExpression":
                                t.type = "ArrayPattern", i && this.checkPatternErrors(i, !0), this.toAssignableList(t.elements, e);
                                break;
                            case "SpreadElement":
                                t.type = "RestElement", this.toAssignable(t.argument, e), "AssignmentPattern" === t.argument.type && this.raise(t.argument.start, "Rest elements cannot have a default value");
                                break;
                            case "AssignmentExpression":
                                "=" !== t.operator && this.raise(t.left.end, "Only '=' operator can be used for specifying default value."), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left, e);
                                break;
                            case "ParenthesizedExpression":
                                this.toAssignable(t.expression, e, i);
                                break;
                            case "ChainExpression":
                                this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
                                break;
                            case "MemberExpression":
                                if (!e) break;
                            default:
                                this.raise(t.start, "Assigning to rvalue")
                        } else i && this.checkPatternErrors(i, !0);
                        return t
                    }, gt.toAssignableList = function(t, e) {
                        for (var i = t.length, n = 0; n < i; n++) {
                            var r = t[n];
                            r && this.toAssignable(r, e)
                        }
                        if (i) {
                            var s = t[i - 1];
                            6 === this.options.ecmaVersion && e && s && "RestElement" === s.type && "Identifier" !== s.argument.type && this.unexpected(s.argument.start)
                        }
                        return t
                    }, gt.parseSpread = function(t) {
                        var e = this.startNode();
                        return this.next(), e.argument = this.parseMaybeAssign(!1, t), this.finishNode(e, "SpreadElement")
                    }, gt.parseRestBinding = function() {
                        var t = this.startNode();
                        return this.next(), 6 === this.options.ecmaVersion && this.type !== x.name && this.unexpected(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement")
                    }, gt.parseBindingAtom = function() {
                        if (this.options.ecmaVersion >= 6) switch (this.type) {
                            case x.bracketL:
                                var t = this.startNode();
                                return this.next(), t.elements = this.parseBindingList(x.bracketR, !0, !0), this.finishNode(t, "ArrayPattern");
                            case x.braceL:
                                return this.parseObj(!0)
                        }
                        return this.parseIdent()
                    }, gt.parseBindingList = function(t, e, i) {
                        for (var n = [], r = !0; !this.eat(t);)
                            if (r ? r = !1 : this.expect(x.comma), e && this.type === x.comma) n.push(null);
                            else {
                                if (i && this.afterTrailingComma(t)) break;
                                if (this.type === x.ellipsis) {
                                    var s = this.parseRestBinding();
                                    this.parseBindingListItem(s), n.push(s), this.type === x.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.expect(t);
                                    break
                                }
                                var a = this.parseMaybeDefault(this.start, this.startLoc);
                                this.parseBindingListItem(a), n.push(a)
                            }
                        return n
                    }, gt.parseBindingListItem = function(t) {
                        return t
                    }, gt.parseMaybeDefault = function(t, e, i) {
                        if (i = i || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(x.eq)) return i;
                        var n = this.startNodeAt(t, e);
                        return n.left = i, n.right = this.parseMaybeAssign(), this.finishNode(n, "AssignmentPattern")
                    }, gt.checkLValSimple = function(t, e, i) {
                        void 0 === e && (e = Z);
                        var n = e !== Z;
                        switch (t.type) {
                            case "Identifier":
                                this.strict && this.reservedWordsStrictBind.test(t.name) && this.raiseRecoverable(t.start, (n ? "Binding " : "Assigning to ") + t.name + " in strict mode"), n && (e === $ && "let" === t.name && this.raiseRecoverable(t.start, "let is disallowed as a lexically bound name"), i && (T(i, t.name) && this.raiseRecoverable(t.start, "Argument name clash"), i[t.name] = !0), e !== tt && this.declareName(t.name, e, t.start));
                                break;
                            case "ChainExpression":
                                this.raiseRecoverable(t.start, "Optional chaining cannot appear in left-hand side");
                                break;
                            case "MemberExpression":
                                n && this.raiseRecoverable(t.start, "Binding member expression");
                                break;
                            case "ParenthesizedExpression":
                                return n && this.raiseRecoverable(t.start, "Binding parenthesized expression"), this.checkLValSimple(t.expression, e, i);
                            default:
                                this.raise(t.start, (n ? "Binding" : "Assigning to") + " rvalue")
                        }
                    }, gt.checkLValPattern = function(t, e, i) {
                        switch (void 0 === e && (e = Z), t.type) {
                            case "ObjectPattern":
                                for (var n = 0, r = t.properties; n < r.length; n += 1) {
                                    var s = r[n];
                                    this.checkLValInnerPattern(s, e, i)
                                }
                                break;
                            case "ArrayPattern":
                                for (var a = 0, o = t.elements; a < o.length; a += 1) {
                                    var h = o[a];
                                    h && this.checkLValInnerPattern(h, e, i)
                                }
                                break;
                            default:
                                this.checkLValSimple(t, e, i)
                        }
                    }, gt.checkLValInnerPattern = function(t, e, i) {
                        switch (void 0 === e && (e = Z), t.type) {
                            case "Property":
                                this.checkLValInnerPattern(t.value, e, i);
                                break;
                            case "AssignmentPattern":
                                this.checkLValPattern(t.left, e, i);
                                break;
                            case "RestElement":
                                this.checkLValPattern(t.argument, e, i);
                                break;
                            default:
                                this.checkLValPattern(t, e, i)
                        }
                    };
                    var mt = et.prototype;

                    function vt(t) {
                        return "MemberExpression" === t.type && "PrivateIdentifier" === t.property.type || "ChainExpression" === t.type && vt(t.expression)
                    }
                    mt.checkPropClash = function(t, e, i) {
                        if (!(this.options.ecmaVersion >= 9 && "SpreadElement" === t.type || this.options.ecmaVersion >= 6 && (t.computed || t.method || t.shorthand))) {
                            var n, r = t.key;
                            switch (r.type) {
                                case "Identifier":
                                    n = r.name;
                                    break;
                                case "Literal":
                                    n = String(r.value);
                                    break;
                                default:
                                    return
                            }
                            var s = t.kind;
                            if (this.options.ecmaVersion >= 6) "__proto__" === n && "init" === s && (e.proto && (i ? i.doubleProto < 0 && (i.doubleProto = r.start) : this.raiseRecoverable(r.start, "Redefinition of __proto__ property")), e.proto = !0);
                            else {
                                var a = e[n = "$" + n];
                                a ? ("init" === s ? this.strict && a.init || a.get || a.set : a.init || a[s]) && this.raiseRecoverable(r.start, "Redefinition of property") : a = e[n] = {
                                    init: !1,
                                    get: !1,
                                    set: !1
                                }, a[s] = !0
                            }
                        }
                    }, mt.parseExpression = function(t, e) {
                        var i = this.start,
                            n = this.startLoc,
                            r = this.parseMaybeAssign(t, e);
                        if (this.type === x.comma) {
                            var s = this.startNodeAt(i, n);
                            for (s.expressions = [r]; this.eat(x.comma);) s.expressions.push(this.parseMaybeAssign(t, e));
                            return this.finishNode(s, "SequenceExpression")
                        }
                        return r
                    }, mt.parseMaybeAssign = function(t, e, i) {
                        if (this.isContextual("yield")) {
                            if (this.inGenerator) return this.parseYield(t);
                            this.exprAllowed = !1
                        }
                        var n = !1,
                            r = -1,
                            s = -1;
                        e ? (r = e.parenthesizedAssign, s = e.trailingComma, e.parenthesizedAssign = e.trailingComma = -1) : (e = new st, n = !0);
                        var a = this.start,
                            o = this.startLoc;
                        this.type !== x.parenL && this.type !== x.name || (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = "await" === t);
                        var h = this.parseMaybeConditional(t, e);
                        if (i && (h = i.call(this, h, a, o)), this.type.isAssign) {
                            var l = this.startNodeAt(a, o);
                            return l.operator = this.value, this.type === x.eq && (h = this.toAssignable(h, !1, e)), n || (e.parenthesizedAssign = e.trailingComma = e.doubleProto = -1), e.shorthandAssign >= h.start && (e.shorthandAssign = -1), this.type === x.eq ? this.checkLValPattern(h) : this.checkLValSimple(h), l.left = h, this.next(), l.right = this.parseMaybeAssign(t), this.finishNode(l, "AssignmentExpression")
                        }
                        return n && this.checkExpressionErrors(e, !0), r > -1 && (e.parenthesizedAssign = r), s > -1 && (e.trailingComma = s), h
                    }, mt.parseMaybeConditional = function(t, e) {
                        var i = this.start,
                            n = this.startLoc,
                            r = this.parseExprOps(t, e);
                        if (this.checkExpressionErrors(e)) return r;
                        if (this.eat(x.question)) {
                            var s = this.startNodeAt(i, n);
                            return s.test = r, s.consequent = this.parseMaybeAssign(), this.expect(x.colon), s.alternate = this.parseMaybeAssign(t), this.finishNode(s, "ConditionalExpression")
                        }
                        return r
                    }, mt.parseExprOps = function(t, e) {
                        var i = this.start,
                            n = this.startLoc,
                            r = this.parseMaybeUnary(e, !1);
                        return this.checkExpressionErrors(e) || r.start === i && "ArrowFunctionExpression" === r.type ? r : this.parseExprOp(r, i, n, -1, t)
                    }, mt.parseExprOp = function(t, e, i, n, r) {
                        var s = this.type.binop;
                        if (null != s && (!r || this.type !== x._in) && s > n) {
                            var a = this.type === x.logicalOR || this.type === x.logicalAND,
                                o = this.type === x.coalesce;
                            o && (s = x.logicalAND.binop);
                            var h = this.value;
                            this.next();
                            var l = this.start,
                                c = this.startLoc,
                                u = this.parseExprOp(this.parseMaybeUnary(null, !1), l, c, s, r),
                                d = this.buildBinary(e, i, t, u, h, a || o);
                            return (a && this.type === x.coalesce || o && (this.type === x.logicalOR || this.type === x.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(d, e, i, n, r)
                        }
                        return t
                    }, mt.buildBinary = function(t, e, i, n, r, s) {
                        var a = this.startNodeAt(t, e);
                        return a.left = i, a.operator = r, a.right = n, this.finishNode(a, s ? "LogicalExpression" : "BinaryExpression")
                    }, mt.parseMaybeUnary = function(t, e, i) {
                        var n, r = this.start,
                            s = this.startLoc;
                        if (this.isContextual("await") && this.canAwait) n = this.parseAwait(), e = !0;
                        else if (this.type.prefix) {
                            var a = this.startNode(),
                                o = this.type === x.incDec;
                            a.operator = this.value, a.prefix = !0, this.next(), a.argument = this.parseMaybeUnary(null, !0, o), this.checkExpressionErrors(t, !0), o ? this.checkLValSimple(a.argument) : this.strict && "delete" === a.operator && "Identifier" === a.argument.type ? this.raiseRecoverable(a.start, "Deleting local variable in strict mode") : "delete" === a.operator && vt(a.argument) ? this.raiseRecoverable(a.start, "Private fields can not be deleted") : e = !0, n = this.finishNode(a, o ? "UpdateExpression" : "UnaryExpression")
                        } else {
                            if (n = this.parseExprSubscripts(t), this.checkExpressionErrors(t)) return n;
                            for (; this.type.postfix && !this.canInsertSemicolon();) {
                                var h = this.startNodeAt(r, s);
                                h.operator = this.value, h.prefix = !1, h.argument = n, this.checkLValSimple(n), this.next(), n = this.finishNode(h, "UpdateExpression")
                            }
                        }
                        return i || !this.eat(x.starstar) ? n : e ? void this.unexpected(this.lastTokStart) : this.buildBinary(r, s, n, this.parseMaybeUnary(null, !1), "**", !1)
                    }, mt.parseExprSubscripts = function(t) {
                        var e = this.start,
                            i = this.startLoc,
                            n = this.parseExprAtom(t);
                        if ("ArrowFunctionExpression" === n.type && ")" !== this.input.slice(this.lastTokStart, this.lastTokEnd)) return n;
                        var r = this.parseSubscripts(n, e, i);
                        return t && "MemberExpression" === r.type && (t.parenthesizedAssign >= r.start && (t.parenthesizedAssign = -1), t.parenthesizedBind >= r.start && (t.parenthesizedBind = -1), t.trailingComma >= r.start && (t.trailingComma = -1)), r
                    }, mt.parseSubscripts = function(t, e, i, n) {
                        for (var r = this.options.ecmaVersion >= 8 && "Identifier" === t.type && "async" === t.name && this.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start == 5 && this.potentialArrowAt === t.start, s = !1;;) {
                            var a = this.parseSubscript(t, e, i, n, r, s);
                            if (a.optional && (s = !0), a === t || "ArrowFunctionExpression" === a.type) {
                                if (s) {
                                    var o = this.startNodeAt(e, i);
                                    o.expression = a, a = this.finishNode(o, "ChainExpression")
                                }
                                return a
                            }
                            t = a
                        }
                    }, mt.parseSubscript = function(t, e, i, n, r, s) {
                        var a = this.options.ecmaVersion >= 11,
                            o = a && this.eat(x.questionDot);
                        n && o && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
                        var h = this.eat(x.bracketL);
                        if (h || o && this.type !== x.parenL && this.type !== x.backQuote || this.eat(x.dot)) {
                            var l = this.startNodeAt(e, i);
                            l.object = t, h ? (l.property = this.parseExpression(), this.expect(x.bracketR)) : this.type === x.privateId && "Super" !== t.type ? l.property = this.parsePrivateIdent() : l.property = this.parseIdent("never" !== this.options.allowReserved), l.computed = !!h, a && (l.optional = o), t = this.finishNode(l, "MemberExpression")
                        } else if (!n && this.eat(x.parenL)) {
                            var c = new st,
                                u = this.yieldPos,
                                d = this.awaitPos,
                                p = this.awaitIdentPos;
                            this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
                            var f = this.parseExprList(x.parenR, this.options.ecmaVersion >= 8, !1, c);
                            if (r && !o && !this.canInsertSemicolon() && this.eat(x.arrow)) return this.checkPatternErrors(c, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = u, this.awaitPos = d, this.awaitIdentPos = p, this.parseArrowExpression(this.startNodeAt(e, i), f, !0);
                            this.checkExpressionErrors(c, !0), this.yieldPos = u || this.yieldPos, this.awaitPos = d || this.awaitPos, this.awaitIdentPos = p || this.awaitIdentPos;
                            var g = this.startNodeAt(e, i);
                            g.callee = t, g.arguments = f, a && (g.optional = o), t = this.finishNode(g, "CallExpression")
                        } else if (this.type === x.backQuote) {
                            (o || s) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
                            var m = this.startNodeAt(e, i);
                            m.tag = t, m.quasi = this.parseTemplate({
                                isTagged: !0
                            }), t = this.finishNode(m, "TaggedTemplateExpression")
                        }
                        return t
                    }, mt.parseExprAtom = function(t) {
                        this.type === x.slash && this.readRegexp();
                        var e, i = this.potentialArrowAt === this.start;
                        switch (this.type) {
                            case x._super:
                                return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), e = this.startNode(), this.next(), this.type !== x.parenL || this.allowDirectSuper || this.raise(e.start, "super() call outside constructor of a subclass"), this.type !== x.dot && this.type !== x.bracketL && this.type !== x.parenL && this.unexpected(), this.finishNode(e, "Super");
                            case x._this:
                                return e = this.startNode(), this.next(), this.finishNode(e, "ThisExpression");
                            case x.name:
                                var n = this.start,
                                    r = this.startLoc,
                                    s = this.containsEsc,
                                    a = this.parseIdent(!1);
                                if (this.options.ecmaVersion >= 8 && !s && "async" === a.name && !this.canInsertSemicolon() && this.eat(x._function)) return this.parseFunction(this.startNodeAt(n, r), 0, !1, !0);
                                if (i && !this.canInsertSemicolon()) {
                                    if (this.eat(x.arrow)) return this.parseArrowExpression(this.startNodeAt(n, r), [a], !1);
                                    if (this.options.ecmaVersion >= 8 && "async" === a.name && this.type === x.name && !s && (!this.potentialArrowInForAwait || "of" !== this.value || this.containsEsc)) return a = this.parseIdent(!1), !this.canInsertSemicolon() && this.eat(x.arrow) || this.unexpected(), this.parseArrowExpression(this.startNodeAt(n, r), [a], !0)
                                }
                                return a;
                            case x.regexp:
                                var o = this.value;
                                return (e = this.parseLiteral(o.value)).regex = {
                                    pattern: o.pattern,
                                    flags: o.flags
                                }, e;
                            case x.num:
                            case x.string:
                                return this.parseLiteral(this.value);
                            case x._null:
                            case x._true:
                            case x._false:
                                return (e = this.startNode()).value = this.type === x._null ? null : this.type === x._true, e.raw = this.type.keyword, this.next(), this.finishNode(e, "Literal");
                            case x.parenL:
                                var h = this.start,
                                    l = this.parseParenAndDistinguishExpression(i);
                                return t && (t.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(l) && (t.parenthesizedAssign = h), t.parenthesizedBind < 0 && (t.parenthesizedBind = h)), l;
                            case x.bracketL:
                                return e = this.startNode(), this.next(), e.elements = this.parseExprList(x.bracketR, !0, !0, t), this.finishNode(e, "ArrayExpression");
                            case x.braceL:
                                return this.parseObj(!1, t);
                            case x._function:
                                return e = this.startNode(), this.next(), this.parseFunction(e, 0);
                            case x._class:
                                return this.parseClass(this.startNode(), !1);
                            case x._new:
                                return this.parseNew();
                            case x.backQuote:
                                return this.parseTemplate();
                            case x._import:
                                return this.options.ecmaVersion >= 11 ? this.parseExprImport() : this.unexpected();
                            default:
                                this.unexpected()
                        }
                    }, mt.parseExprImport = function() {
                        var t = this.startNode();
                        this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import");
                        var e = this.parseIdent(!0);
                        switch (this.type) {
                            case x.parenL:
                                return this.parseDynamicImport(t);
                            case x.dot:
                                return t.meta = e, this.parseImportMeta(t);
                            default:
                                this.unexpected()
                        }
                    }, mt.parseDynamicImport = function(t) {
                        if (this.next(), t.source = this.parseMaybeAssign(), !this.eat(x.parenR)) {
                            var e = this.start;
                            this.eat(x.comma) && this.eat(x.parenR) ? this.raiseRecoverable(e, "Trailing comma is not allowed in import()") : this.unexpected(e)
                        }
                        return this.finishNode(t, "ImportExpression")
                    }, mt.parseImportMeta = function(t) {
                        this.next();
                        var e = this.containsEsc;
                        return t.property = this.parseIdent(!0), "meta" !== t.property.name && this.raiseRecoverable(t.property.start, "The only valid meta property for import is 'import.meta'"), e && this.raiseRecoverable(t.start, "'import.meta' must not contain escaped characters"), "module" === this.options.sourceType || this.options.allowImportExportEverywhere || this.raiseRecoverable(t.start, "Cannot use 'import.meta' outside a module"), this.finishNode(t, "MetaProperty")
                    }, mt.parseLiteral = function(t) {
                        var e = this.startNode();
                        return e.value = t, e.raw = this.input.slice(this.start, this.end), 110 === e.raw.charCodeAt(e.raw.length - 1) && (e.bigint = e.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(e, "Literal")
                    }, mt.parseParenExpression = function() {
                        this.expect(x.parenL);
                        var t = this.parseExpression();
                        return this.expect(x.parenR), t
                    }, mt.parseParenAndDistinguishExpression = function(t) {
                        var e, i = this.start,
                            n = this.startLoc,
                            r = this.options.ecmaVersion >= 8;
                        if (this.options.ecmaVersion >= 6) {
                            this.next();
                            var s, a = this.start,
                                o = this.startLoc,
                                h = [],
                                l = !0,
                                c = !1,
                                u = new st,
                                d = this.yieldPos,
                                p = this.awaitPos;
                            for (this.yieldPos = 0, this.awaitPos = 0; this.type !== x.parenR;) {
                                if (l ? l = !1 : this.expect(x.comma), r && this.afterTrailingComma(x.parenR, !0)) {
                                    c = !0;
                                    break
                                }
                                if (this.type === x.ellipsis) {
                                    s = this.start, h.push(this.parseParenItem(this.parseRestBinding())), this.type === x.comma && this.raise(this.start, "Comma is not permitted after the rest element");
                                    break
                                }
                                h.push(this.parseMaybeAssign(!1, u, this.parseParenItem))
                            }
                            var f = this.start,
                                g = this.startLoc;
                            if (this.expect(x.parenR), t && !this.canInsertSemicolon() && this.eat(x.arrow)) return this.checkPatternErrors(u, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = d, this.awaitPos = p, this.parseParenArrowList(i, n, h);
                            h.length && !c || this.unexpected(this.lastTokStart), s && this.unexpected(s), this.checkExpressionErrors(u, !0), this.yieldPos = d || this.yieldPos, this.awaitPos = p || this.awaitPos, h.length > 1 ? ((e = this.startNodeAt(a, o)).expressions = h, this.finishNodeAt(e, "SequenceExpression", f, g)) : e = h[0]
                        } else e = this.parseParenExpression();
                        if (this.options.preserveParens) {
                            var m = this.startNodeAt(i, n);
                            return m.expression = e, this.finishNode(m, "ParenthesizedExpression")
                        }
                        return e
                    }, mt.parseParenItem = function(t) {
                        return t
                    }, mt.parseParenArrowList = function(t, e, i) {
                        return this.parseArrowExpression(this.startNodeAt(t, e), i)
                    };
                    var _t = [];
                    mt.parseNew = function() {
                        this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
                        var t = this.startNode(),
                            e = this.parseIdent(!0);
                        if (this.options.ecmaVersion >= 6 && this.eat(x.dot)) {
                            t.meta = e;
                            var i = this.containsEsc;
                            return t.property = this.parseIdent(!0), "target" !== t.property.name && this.raiseRecoverable(t.property.start, "The only valid meta property for new is 'new.target'"), i && this.raiseRecoverable(t.start, "'new.target' must not contain escaped characters"), this.inNonArrowFunction || this.raiseRecoverable(t.start, "'new.target' can only be used in functions"), this.finishNode(t, "MetaProperty")
                        }
                        var n = this.start,
                            r = this.startLoc,
                            s = this.type === x._import;
                        return t.callee = this.parseSubscripts(this.parseExprAtom(), n, r, !0), s && "ImportExpression" === t.callee.type && this.raise(n, "Cannot use new with import()"), this.eat(x.parenL) ? t.arguments = this.parseExprList(x.parenR, this.options.ecmaVersion >= 8, !1) : t.arguments = _t, this.finishNode(t, "NewExpression")
                    }, mt.parseTemplateElement = function(t) {
                        var e = t.isTagged,
                            i = this.startNode();
                        return this.type === x.invalidTemplate ? (e || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), i.value = {
                            raw: this.value,
                            cooked: null
                        }) : i.value = {
                            raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
                            cooked: this.value
                        }, this.next(), i.tail = this.type === x.backQuote, this.finishNode(i, "TemplateElement")
                    }, mt.parseTemplate = function(t) {
                        void 0 === t && (t = {});
                        var e = t.isTagged;
                        void 0 === e && (e = !1);
                        var i = this.startNode();
                        this.next(), i.expressions = [];
                        var n = this.parseTemplateElement({
                            isTagged: e
                        });
                        for (i.quasis = [n]; !n.tail;) this.type === x.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(x.dollarBraceL), i.expressions.push(this.parseExpression()), this.expect(x.braceR), i.quasis.push(n = this.parseTemplateElement({
                            isTagged: e
                        }));
                        return this.next(), this.finishNode(i, "TemplateLiteral")
                    }, mt.isAsyncProp = function(t) {
                        return !t.computed && "Identifier" === t.key.type && "async" === t.key.name && (this.type === x.name || this.type === x.num || this.type === x.string || this.type === x.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === x.star) && !b.test(this.input.slice(this.lastTokEnd, this.start))
                    }, mt.parseObj = function(t, e) {
                        var i = this.startNode(),
                            n = !0,
                            r = {};
                        for (i.properties = [], this.next(); !this.eat(x.braceR);) {
                            if (n) n = !1;
                            else if (this.expect(x.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(x.braceR)) break;
                            var s = this.parseProperty(t, e);
                            t || this.checkPropClash(s, r, e), i.properties.push(s)
                        }
                        return this.finishNode(i, t ? "ObjectPattern" : "ObjectExpression")
                    }, mt.parseProperty = function(t, e) {
                        var i, n, r, s, a = this.startNode();
                        if (this.options.ecmaVersion >= 9 && this.eat(x.ellipsis)) return t ? (a.argument = this.parseIdent(!1), this.type === x.comma && this.raise(this.start, "Comma is not permitted after the rest element"), this.finishNode(a, "RestElement")) : (this.type === x.parenL && e && (e.parenthesizedAssign < 0 && (e.parenthesizedAssign = this.start), e.parenthesizedBind < 0 && (e.parenthesizedBind = this.start)), a.argument = this.parseMaybeAssign(!1, e), this.type === x.comma && e && e.trailingComma < 0 && (e.trailingComma = this.start), this.finishNode(a, "SpreadElement"));
                        this.options.ecmaVersion >= 6 && (a.method = !1, a.shorthand = !1, (t || e) && (r = this.start, s = this.startLoc), t || (i = this.eat(x.star)));
                        var o = this.containsEsc;
                        return this.parsePropertyName(a), !t && !o && this.options.ecmaVersion >= 8 && !i && this.isAsyncProp(a) ? (n = !0, i = this.options.ecmaVersion >= 9 && this.eat(x.star), this.parsePropertyName(a, e)) : n = !1, this.parsePropertyValue(a, t, i, n, r, s, e, o), this.finishNode(a, "Property")
                    }, mt.parsePropertyValue = function(t, e, i, n, r, s, a, o) {
                        if ((i || n) && this.type === x.colon && this.unexpected(), this.eat(x.colon)) t.value = e ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(!1, a), t.kind = "init";
                        else if (this.options.ecmaVersion >= 6 && this.type === x.parenL) e && this.unexpected(), t.kind = "init", t.method = !0, t.value = this.parseMethod(i, n);
                        else if (e || o || !(this.options.ecmaVersion >= 5) || t.computed || "Identifier" !== t.key.type || "get" !== t.key.name && "set" !== t.key.name || this.type === x.comma || this.type === x.braceR || this.type === x.eq) this.options.ecmaVersion >= 6 && !t.computed && "Identifier" === t.key.type ? ((i || n) && this.unexpected(), this.checkUnreserved(t.key), "await" !== t.key.name || this.awaitIdentPos || (this.awaitIdentPos = r), t.kind = "init", e ? t.value = this.parseMaybeDefault(r, s, this.copyNode(t.key)) : this.type === x.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start), t.value = this.parseMaybeDefault(r, s, this.copyNode(t.key))) : t.value = this.copyNode(t.key), t.shorthand = !0) : this.unexpected();
                        else {
                            (i || n) && this.unexpected(), t.kind = t.key.name, this.parsePropertyName(t), t.value = this.parseMethod(!1);
                            var h = "get" === t.kind ? 0 : 1;
                            if (t.value.params.length !== h) {
                                var l = t.value.start;
                                "get" === t.kind ? this.raiseRecoverable(l, "getter should have no params") : this.raiseRecoverable(l, "setter should have exactly one param")
                            } else "set" === t.kind && "RestElement" === t.value.params[0].type && this.raiseRecoverable(t.value.params[0].start, "Setter cannot use rest params")
                        }
                    }, mt.parsePropertyName = function(t) {
                        if (this.options.ecmaVersion >= 6) {
                            if (this.eat(x.bracketL)) return t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(x.bracketR), t.key;
                            t.computed = !1
                        }
                        return t.key = this.type === x.num || this.type === x.string ? this.parseExprAtom() : this.parseIdent("never" !== this.options.allowReserved)
                    }, mt.initFunction = function(t) {
                        t.id = null, this.options.ecmaVersion >= 6 && (t.generator = t.expression = !1), this.options.ecmaVersion >= 8 && (t.async = !1)
                    }, mt.parseMethod = function(t, e, i) {
                        var n = this.startNode(),
                            r = this.yieldPos,
                            s = this.awaitPos,
                            a = this.awaitIdentPos;
                        return this.initFunction(n), this.options.ecmaVersion >= 6 && (n.generator = t), this.options.ecmaVersion >= 8 && (n.async = !!e), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(G(e, n.generator) | Y | (i ? X : 0)), this.expect(x.parenL), n.params = this.parseBindingList(x.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(n, !1, !0), this.yieldPos = r, this.awaitPos = s, this.awaitIdentPos = a, this.finishNode(n, "FunctionExpression")
                    }, mt.parseArrowExpression = function(t, e, i) {
                        var n = this.yieldPos,
                            r = this.awaitPos,
                            s = this.awaitIdentPos;
                        return this.enterScope(G(i, !1) | W), this.initFunction(t), this.options.ecmaVersion >= 8 && (t.async = !!i), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, t.params = this.toAssignableList(e, !0), this.parseFunctionBody(t, !0, !1), this.yieldPos = n, this.awaitPos = r, this.awaitIdentPos = s, this.finishNode(t, "ArrowFunctionExpression")
                    }, mt.parseFunctionBody = function(t, e, i) {
                        var n = e && this.type !== x.braceL,
                            r = this.strict,
                            s = !1;
                        if (n) t.body = this.parseMaybeAssign(), t.expression = !0, this.checkParams(t, !1);
                        else {
                            var a = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(t.params);
                            r && !a || (s = this.strictDirective(this.end)) && a && this.raiseRecoverable(t.start, "Illegal 'use strict' directive in function with non-simple parameter list");
                            var o = this.labels;
                            this.labels = [], s && (this.strict = !0), this.checkParams(t, !r && !s && !e && !i && this.isSimpleParamList(t.params)), this.strict && t.id && this.checkLValSimple(t.id, tt), t.body = this.parseBlock(!1, void 0, s && !r), t.expression = !1, this.adaptDirectivePrologue(t.body.body), this.labels = o
                        }
                        this.exitScope()
                    }, mt.isSimpleParamList = function(t) {
                        for (var e = 0, i = t; e < i.length; e += 1)
                            if ("Identifier" !== i[e].type) return !1;
                        return !0
                    }, mt.checkParams = function(t, e) {
                        for (var i = Object.create(null), n = 0, r = t.params; n < r.length; n += 1) {
                            var s = r[n];
                            this.checkLValInnerPattern(s, Q, e ? null : i)
                        }
                    }, mt.parseExprList = function(t, e, i, n) {
                        for (var r = [], s = !0; !this.eat(t);) {
                            if (s) s = !1;
                            else if (this.expect(x.comma), e && this.afterTrailingComma(t)) break;
                            var a = void 0;
                            i && this.type === x.comma ? a = null : this.type === x.ellipsis ? (a = this.parseSpread(n), n && this.type === x.comma && n.trailingComma < 0 && (n.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, n), r.push(a)
                        }
                        return r
                    }, mt.checkUnreserved = function(t) {
                        var e = t.start,
                            i = t.end,
                            n = t.name;
                        this.inGenerator && "yield" === n && this.raiseRecoverable(e, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && "await" === n && this.raiseRecoverable(e, "Cannot use 'await' as identifier inside an async function"), this.currentThisScope().inClassFieldInit && "arguments" === n && this.raiseRecoverable(e, "Cannot use 'arguments' in class field initializer"), this.keywords.test(n) && this.raise(e, "Unexpected keyword '" + n + "'"), this.options.ecmaVersion < 6 && -1 !== this.input.slice(e, i).indexOf("\\") || (this.strict ? this.reservedWordsStrict : this.reservedWords).test(n) && (this.inAsync || "await" !== n || this.raiseRecoverable(e, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(e, "The keyword '" + n + "' is reserved"))
                    }, mt.parseIdent = function(t, e) {
                        var i = this.startNode();
                        return this.type === x.name ? i.name = this.value : this.type.keyword ? (i.name = this.type.keyword, "class" !== i.name && "function" !== i.name || this.lastTokEnd === this.lastTokStart + 1 && 46 === this.input.charCodeAt(this.lastTokStart) || this.context.pop()) : this.unexpected(), this.next(!!t), this.finishNode(i, "Identifier"), t || (this.checkUnreserved(i), "await" !== i.name || this.awaitIdentPos || (this.awaitIdentPos = i.start)), i
                    }, mt.parsePrivateIdent = function() {
                        var t = this.startNode();
                        return this.type === x.privateId ? t.name = this.value : this.unexpected(), this.next(), this.finishNode(t, "PrivateIdentifier"), 0 === this.privateNameStack.length ? this.raise(t.start, "Private field '#" + t.name + "' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(t), t
                    }, mt.parseYield = function(t) {
                        this.yieldPos || (this.yieldPos = this.start);
                        var e = this.startNode();
                        return this.next(), this.type === x.semi || this.canInsertSemicolon() || this.type !== x.star && !this.type.startsExpr ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(x.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression")
                    }, mt.parseAwait = function() {
                        this.awaitPos || (this.awaitPos = this.start);
                        var t = this.startNode();
                        return this.next(), t.argument = this.parseMaybeUnary(null, !0), this.finishNode(t, "AwaitExpression")
                    };
                    var yt = et.prototype;
                    yt.raise = function(t, e) {
                        var i = D(this.input, t);
                        e += " (" + i.line + ":" + i.column + ")";
                        var n = new SyntaxError(e);
                        throw n.pos = t, n.loc = i, n.raisedAt = this.pos, n
                    }, yt.raiseRecoverable = yt.raise, yt.curPosition = function() {
                        if (this.options.locations) return new O(this.curLine, this.pos - this.lineStart)
                    };
                    var xt = et.prototype,
                        bt = function(t) {
                            this.flags = t, this.var = [], this.lexical = [], this.functions = [], this.inClassFieldInit = !1
                        };
                    xt.enterScope = function(t) {
                        this.scopeStack.push(new bt(t))
                    }, xt.exitScope = function() {
                        this.scopeStack.pop()
                    }, xt.treatFunctionsAsVarInScope = function(t) {
                        return t.flags & F || !this.inModule && t.flags & V
                    }, xt.declareName = function(t, e, i) {
                        var n = !1;
                        if (e === $) {
                            var r = this.currentScope();
                            n = r.lexical.indexOf(t) > -1 || r.functions.indexOf(t) > -1 || r.var.indexOf(t) > -1, r.lexical.push(t), this.inModule && r.flags & V && delete this.undefinedExports[t]
                        } else if (e === J) this.currentScope().lexical.push(t);
                        else if (e === K) {
                            var s = this.currentScope();
                            n = this.treatFunctionsAsVar ? s.lexical.indexOf(t) > -1 : s.lexical.indexOf(t) > -1 || s.var.indexOf(t) > -1, s.functions.push(t)
                        } else
                            for (var a = this.scopeStack.length - 1; a >= 0; --a) {
                                var o = this.scopeStack[a];
                                if (o.lexical.indexOf(t) > -1 && !(o.flags & U && o.lexical[0] === t) || !this.treatFunctionsAsVarInScope(o) && o.functions.indexOf(t) > -1) {
                                    n = !0;
                                    break
                                }
                                if (o.var.push(t), this.inModule && o.flags & V && delete this.undefinedExports[t], o.flags & j) break
                            }
                        n && this.raiseRecoverable(i, "Identifier '" + t + "' has already been declared")
                    }, xt.checkLocalExport = function(t) {
                        -1 === this.scopeStack[0].lexical.indexOf(t.name) && -1 === this.scopeStack[0].var.indexOf(t.name) && (this.undefinedExports[t.name] = t)
                    }, xt.currentScope = function() {
                        return this.scopeStack[this.scopeStack.length - 1]
                    }, xt.currentVarScope = function() {
                        for (var t = this.scopeStack.length - 1;; t--) {
                            var e = this.scopeStack[t];
                            if (e.flags & j) return e
                        }
                    }, xt.currentThisScope = function() {
                        for (var t = this.scopeStack.length - 1;; t--) {
                            var e = this.scopeStack[t];
                            if (e.flags & j && !(e.flags & W)) return e
                        }
                    };
                    var wt = function(t, e, i) {
                            this.type = "", this.start = e, this.end = 0, t.options.locations && (this.loc = new L(t, i)), t.options.directSourceFile && (this.sourceFile = t.options.directSourceFile), t.options.ranges && (this.range = [e, 0])
                        },
                        St = et.prototype;

                    function Ct(t, e, i, n) {
                        return t.type = e, t.end = i, this.options.locations && (t.loc.end = n), this.options.ranges && (t.range[1] = i), t
                    }
                    St.startNode = function() {
                        return new wt(this, this.start, this.startLoc)
                    }, St.startNodeAt = function(t, e) {
                        return new wt(this, t, e)
                    }, St.finishNode = function(t, e) {
                        return Ct.call(this, t, e, this.lastTokEnd, this.lastTokEndLoc)
                    }, St.finishNodeAt = function(t, e, i, n) {
                        return Ct.call(this, t, e, i, n)
                    }, St.copyNode = function(t) {
                        var e = new wt(this, t.start, this.startLoc);
                        for (var i in t) e[i] = t[i];
                        return e
                    };
                    var kt = function(t, e, i, n, r) {
                            this.token = t, this.isExpr = !!e, this.preserveSpace = !!i, this.override = n, this.generator = !!r
                        },
                        At = {
                            b_stat: new kt("{", !1),
                            b_expr: new kt("{", !0),
                            b_tmpl: new kt("${", !1),
                            p_stat: new kt("(", !1),
                            p_expr: new kt("(", !0),
                            q_tmpl: new kt("`", !0, !0, (function(t) {
                                return t.tryReadTemplateToken()
                            })),
                            f_stat: new kt("function", !1),
                            f_expr: new kt("function", !0),
                            f_expr_gen: new kt("function", !0, !1, null, !0),
                            f_gen: new kt("function", !1, !1, null, !0)
                        },
                        Pt = et.prototype;
                    Pt.initialContext = function() {
                        return [At.b_stat]
                    }, Pt.braceIsBlock = function(t) {
                        var e = this.curContext();
                        return e === At.f_expr || e === At.f_stat || (t !== x.colon || e !== At.b_stat && e !== At.b_expr ? t === x._return || t === x.name && this.exprAllowed ? b.test(this.input.slice(this.lastTokEnd, this.start)) : t === x._else || t === x.semi || t === x.eof || t === x.parenR || t === x.arrow || (t === x.braceL ? e === At.b_stat : t !== x._var && t !== x._const && t !== x.name && !this.exprAllowed) : !e.isExpr)
                    }, Pt.inGeneratorContext = function() {
                        for (var t = this.context.length - 1; t >= 1; t--) {
                            var e = this.context[t];
                            if ("function" === e.token) return e.generator
                        }
                        return !1
                    }, Pt.updateContext = function(t) {
                        var e, i = this.type;
                        i.keyword && t === x.dot ? this.exprAllowed = !1 : (e = i.updateContext) ? e.call(this, t) : this.exprAllowed = i.beforeExpr
                    }, x.parenR.updateContext = x.braceR.updateContext = function() {
                        if (1 !== this.context.length) {
                            var t = this.context.pop();
                            t === At.b_stat && "function" === this.curContext().token && (t = this.context.pop()), this.exprAllowed = !t.isExpr
                        } else this.exprAllowed = !0
                    }, x.braceL.updateContext = function(t) {
                        this.context.push(this.braceIsBlock(t) ? At.b_stat : At.b_expr), this.exprAllowed = !0
                    }, x.dollarBraceL.updateContext = function() {
                        this.context.push(At.b_tmpl), this.exprAllowed = !0
                    }, x.parenL.updateContext = function(t) {
                        var e = t === x._if || t === x._for || t === x._with || t === x._while;
                        this.context.push(e ? At.p_stat : At.p_expr), this.exprAllowed = !0
                    }, x.incDec.updateContext = function() {}, x._function.updateContext = x._class.updateContext = function(t) {
                        !t.beforeExpr || t === x._else || t === x.semi && this.curContext() !== At.p_stat || t === x._return && b.test(this.input.slice(this.lastTokEnd, this.start)) || (t === x.colon || t === x.braceL) && this.curContext() === At.b_stat ? this.context.push(At.f_stat) : this.context.push(At.f_expr), this.exprAllowed = !1
                    }, x.backQuote.updateContext = function() {
                        this.curContext() === At.q_tmpl ? this.context.pop() : this.context.push(At.q_tmpl), this.exprAllowed = !1
                    }, x.star.updateContext = function(t) {
                        if (t === x._function) {
                            var e = this.context.length - 1;
                            this.context[e] === At.f_expr ? this.context[e] = At.f_expr_gen : this.context[e] = At.f_gen
                        }
                        this.exprAllowed = !0
                    }, x.name.updateContext = function(t) {
                        var e = !1;
                        this.options.ecmaVersion >= 6 && t !== x.dot && ("of" === this.value && !this.exprAllowed || "yield" === this.value && this.inGeneratorContext()) && (e = !0), this.exprAllowed = e
                    };
                    var Mt = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",
                        Tt = Mt + " Extended_Pictographic",
                        Et = {
                            9: Mt,
                            10: Tt,
                            11: Tt,
                            12: Tt + " EBase EComp EMod EPres ExtPict"
                        },
                        It = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",
                        Ot = "Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",
                        Lt = Ot + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",
                        Dt = Lt + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",
                        Bt = {
                            9: Ot,
                            10: Lt,
                            11: Dt,
                            12: Dt + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi"
                        },
                        Rt = {};

                    function zt(t) {
                        var e = Rt[t] = {
                            binary: I(Et[t] + " " + It),
                            nonBinary: {
                                General_Category: I(It),
                                Script: I(Bt[t])
                            }
                        };
                        e.nonBinary.Script_Extensions = e.nonBinary.Script, e.nonBinary.gc = e.nonBinary.General_Category, e.nonBinary.sc = e.nonBinary.Script, e.nonBinary.scx = e.nonBinary.Script_Extensions
                    }
                    zt(9), zt(10), zt(11), zt(12);
                    var Nt = et.prototype,
                        Vt = function(t) {
                            this.parser = t, this.validFlags = "gim" + (t.options.ecmaVersion >= 6 ? "uy" : "") + (t.options.ecmaVersion >= 9 ? "s" : "") + (t.options.ecmaVersion >= 13 ? "d" : ""), this.unicodeProperties = Rt[t.options.ecmaVersion >= 12 ? 12 : t.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchN = !1, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = [], this.backReferenceNames = []
                        };

                    function Ft(t) {
                        return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)))
                    }

                    function jt(t) {
                        return 36 === t || t >= 40 && t <= 43 || 46 === t || 63 === t || t >= 91 && t <= 94 || t >= 123 && t <= 125
                    }

                    function qt(t) {
                        return d(t, !0) || 36 === t || 95 === t
                    }

                    function Ht(t) {
                        return p(t, !0) || 36 === t || 95 === t || 8204 === t || 8205 === t
                    }

                    function Wt(t) {
                        return t >= 65 && t <= 90 || t >= 97 && t <= 122
                    }

                    function Ut(t) {
                        return t >= 0 && t <= 1114111
                    }

                    function Yt(t) {
                        return 100 === t || 68 === t || 115 === t || 83 === t || 119 === t || 87 === t
                    }

                    function Xt(t) {
                        return Wt(t) || 95 === t
                    }

                    function Gt(t) {
                        return Xt(t) || Zt(t)
                    }

                    function Zt(t) {
                        return t >= 48 && t <= 57
                    }

                    function Qt(t) {
                        return t >= 48 && t <= 57 || t >= 65 && t <= 70 || t >= 97 && t <= 102
                    }

                    function $t(t) {
                        return t >= 65 && t <= 70 ? t - 65 + 10 : t >= 97 && t <= 102 ? t - 97 + 10 : t - 48
                    }

                    function Kt(t) {
                        return t >= 48 && t <= 55
                    }
                    Vt.prototype.reset = function(t, e, i) {
                        var n = -1 !== i.indexOf("u");
                        this.start = 0 | t, this.source = e + "", this.flags = i, this.switchU = n && this.parser.options.ecmaVersion >= 6, this.switchN = n && this.parser.options.ecmaVersion >= 9
                    }, Vt.prototype.raise = function(t) {
                        this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + t)
                    }, Vt.prototype.at = function(t, e) {
                        void 0 === e && (e = !1);
                        var i = this.source,
                            n = i.length;
                        if (t >= n) return -1;
                        var r = i.charCodeAt(t);
                        if (!e && !this.switchU || r <= 55295 || r >= 57344 || t + 1 >= n) return r;
                        var s = i.charCodeAt(t + 1);
                        return s >= 56320 && s <= 57343 ? (r << 10) + s - 56613888 : r
                    }, Vt.prototype.nextIndex = function(t, e) {
                        void 0 === e && (e = !1);
                        var i = this.source,
                            n = i.length;
                        if (t >= n) return n;
                        var r, s = i.charCodeAt(t);
                        return !e && !this.switchU || s <= 55295 || s >= 57344 || t + 1 >= n || (r = i.charCodeAt(t + 1)) < 56320 || r > 57343 ? t + 1 : t + 2
                    }, Vt.prototype.current = function(t) {
                        return void 0 === t && (t = !1), this.at(this.pos, t)
                    }, Vt.prototype.lookahead = function(t) {
                        return void 0 === t && (t = !1), this.at(this.nextIndex(this.pos, t), t)
                    }, Vt.prototype.advance = function(t) {
                        void 0 === t && (t = !1), this.pos = this.nextIndex(this.pos, t)
                    }, Vt.prototype.eat = function(t, e) {
                        return void 0 === e && (e = !1), this.current(e) === t && (this.advance(e), !0)
                    }, Nt.validateRegExpFlags = function(t) {
                        for (var e = t.validFlags, i = t.flags, n = 0; n < i.length; n++) {
                            var r = i.charAt(n); - 1 === e.indexOf(r) && this.raise(t.start, "Invalid regular expression flag"), i.indexOf(r, n + 1) > -1 && this.raise(t.start, "Duplicate regular expression flag")
                        }
                    }, Nt.validateRegExpPattern = function(t) {
                        this.regexp_pattern(t), !t.switchN && this.options.ecmaVersion >= 9 && t.groupNames.length > 0 && (t.switchN = !0, this.regexp_pattern(t))
                    }, Nt.regexp_pattern = function(t) {
                        t.pos = 0, t.lastIntValue = 0, t.lastStringValue = "", t.lastAssertionIsQuantifiable = !1, t.numCapturingParens = 0, t.maxBackReference = 0, t.groupNames.length = 0, t.backReferenceNames.length = 0, this.regexp_disjunction(t), t.pos !== t.source.length && (t.eat(41) && t.raise("Unmatched ')'"), (t.eat(93) || t.eat(125)) && t.raise("Lone quantifier brackets")), t.maxBackReference > t.numCapturingParens && t.raise("Invalid escape");
                        for (var e = 0, i = t.backReferenceNames; e < i.length; e += 1) {
                            var n = i[e]; - 1 === t.groupNames.indexOf(n) && t.raise("Invalid named capture referenced")
                        }
                    }, Nt.regexp_disjunction = function(t) {
                        for (this.regexp_alternative(t); t.eat(124);) this.regexp_alternative(t);
                        this.regexp_eatQuantifier(t, !0) && t.raise("Nothing to repeat"), t.eat(123) && t.raise("Lone quantifier brackets")
                    }, Nt.regexp_alternative = function(t) {
                        for (; t.pos < t.source.length && this.regexp_eatTerm(t););
                    }, Nt.regexp_eatTerm = function(t) {
                        return this.regexp_eatAssertion(t) ? (t.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(t) && t.switchU && t.raise("Invalid quantifier"), !0) : !!(t.switchU ? this.regexp_eatAtom(t) : this.regexp_eatExtendedAtom(t)) && (this.regexp_eatQuantifier(t), !0)
                    }, Nt.regexp_eatAssertion = function(t) {
                        var e = t.pos;
                        if (t.lastAssertionIsQuantifiable = !1, t.eat(94) || t.eat(36)) return !0;
                        if (t.eat(92)) {
                            if (t.eat(66) || t.eat(98)) return !0;
                            t.pos = e
                        }
                        if (t.eat(40) && t.eat(63)) {
                            var i = !1;
                            if (this.options.ecmaVersion >= 9 && (i = t.eat(60)), t.eat(61) || t.eat(33)) return this.regexp_disjunction(t), t.eat(41) || t.raise("Unterminated group"), t.lastAssertionIsQuantifiable = !i, !0
                        }
                        return t.pos = e, !1
                    }, Nt.regexp_eatQuantifier = function(t, e) {
                        return void 0 === e && (e = !1), !!this.regexp_eatQuantifierPrefix(t, e) && (t.eat(63), !0)
                    }, Nt.regexp_eatQuantifierPrefix = function(t, e) {
                        return t.eat(42) || t.eat(43) || t.eat(63) || this.regexp_eatBracedQuantifier(t, e)
                    }, Nt.regexp_eatBracedQuantifier = function(t, e) {
                        var i = t.pos;
                        if (t.eat(123)) {
                            var n = 0,
                                r = -1;
                            if (this.regexp_eatDecimalDigits(t) && (n = t.lastIntValue, t.eat(44) && this.regexp_eatDecimalDigits(t) && (r = t.lastIntValue), t.eat(125))) return -1 !== r && r < n && !e && t.raise("numbers out of order in {} quantifier"), !0;
                            t.switchU && !e && t.raise("Incomplete quantifier"), t.pos = i
                        }
                        return !1
                    }, Nt.regexp_eatAtom = function(t) {
                        return this.regexp_eatPatternCharacters(t) || t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t)
                    }, Nt.regexp_eatReverseSolidusAtomEscape = function(t) {
                        var e = t.pos;
                        if (t.eat(92)) {
                            if (this.regexp_eatAtomEscape(t)) return !0;
                            t.pos = e
                        }
                        return !1
                    }, Nt.regexp_eatUncapturingGroup = function(t) {
                        var e = t.pos;
                        if (t.eat(40)) {
                            if (t.eat(63) && t.eat(58)) {
                                if (this.regexp_disjunction(t), t.eat(41)) return !0;
                                t.raise("Unterminated group")
                            }
                            t.pos = e
                        }
                        return !1
                    }, Nt.regexp_eatCapturingGroup = function(t) {
                        if (t.eat(40)) {
                            if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(t) : 63 === t.current() && t.raise("Invalid group"), this.regexp_disjunction(t), t.eat(41)) return t.numCapturingParens += 1, !0;
                            t.raise("Unterminated group")
                        }
                        return !1
                    }, Nt.regexp_eatExtendedAtom = function(t) {
                        return t.eat(46) || this.regexp_eatReverseSolidusAtomEscape(t) || this.regexp_eatCharacterClass(t) || this.regexp_eatUncapturingGroup(t) || this.regexp_eatCapturingGroup(t) || this.regexp_eatInvalidBracedQuantifier(t) || this.regexp_eatExtendedPatternCharacter(t)
                    }, Nt.regexp_eatInvalidBracedQuantifier = function(t) {
                        return this.regexp_eatBracedQuantifier(t, !0) && t.raise("Nothing to repeat"), !1
                    }, Nt.regexp_eatSyntaxCharacter = function(t) {
                        var e = t.current();
                        return !!jt(e) && (t.lastIntValue = e, t.advance(), !0)
                    }, Nt.regexp_eatPatternCharacters = function(t) {
                        for (var e = t.pos, i = 0; - 1 !== (i = t.current()) && !jt(i);) t.advance();
                        return t.pos !== e
                    }, Nt.regexp_eatExtendedPatternCharacter = function(t) {
                        var e = t.current();
                        return !(-1 === e || 36 === e || e >= 40 && e <= 43 || 46 === e || 63 === e || 91 === e || 94 === e || 124 === e || (t.advance(), 0))
                    }, Nt.regexp_groupSpecifier = function(t) {
                        if (t.eat(63)) {
                            if (this.regexp_eatGroupName(t)) return -1 !== t.groupNames.indexOf(t.lastStringValue) && t.raise("Duplicate capture group name"), void t.groupNames.push(t.lastStringValue);
                            t.raise("Invalid group")
                        }
                    }, Nt.regexp_eatGroupName = function(t) {
                        if (t.lastStringValue = "", t.eat(60)) {
                            if (this.regexp_eatRegExpIdentifierName(t) && t.eat(62)) return !0;
                            t.raise("Invalid capture group name")
                        }
                        return !1
                    }, Nt.regexp_eatRegExpIdentifierName = function(t) {
                        if (t.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(t)) {
                            for (t.lastStringValue += Ft(t.lastIntValue); this.regexp_eatRegExpIdentifierPart(t);) t.lastStringValue += Ft(t.lastIntValue);
                            return !0
                        }
                        return !1
                    }, Nt.regexp_eatRegExpIdentifierStart = function(t) {
                        var e = t.pos,
                            i = this.options.ecmaVersion >= 11,
                            n = t.current(i);
                        return t.advance(i), 92 === n && this.regexp_eatRegExpUnicodeEscapeSequence(t, i) && (n = t.lastIntValue), qt(n) ? (t.lastIntValue = n, !0) : (t.pos = e, !1)
                    }, Nt.regexp_eatRegExpIdentifierPart = function(t) {
                        var e = t.pos,
                            i = this.options.ecmaVersion >= 11,
                            n = t.current(i);
                        return t.advance(i), 92 === n && this.regexp_eatRegExpUnicodeEscapeSequence(t, i) && (n = t.lastIntValue), Ht(n) ? (t.lastIntValue = n, !0) : (t.pos = e, !1)
                    }, Nt.regexp_eatAtomEscape = function(t) {
                        return !!(this.regexp_eatBackReference(t) || this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t) || t.switchN && this.regexp_eatKGroupName(t)) || (t.switchU && (99 === t.current() && t.raise("Invalid unicode escape"), t.raise("Invalid escape")), !1)
                    }, Nt.regexp_eatBackReference = function(t) {
                        var e = t.pos;
                        if (this.regexp_eatDecimalEscape(t)) {
                            var i = t.lastIntValue;
                            if (t.switchU) return i > t.maxBackReference && (t.maxBackReference = i), !0;
                            if (i <= t.numCapturingParens) return !0;
                            t.pos = e
                        }
                        return !1
                    }, Nt.regexp_eatKGroupName = function(t) {
                        if (t.eat(107)) {
                            if (this.regexp_eatGroupName(t)) return t.backReferenceNames.push(t.lastStringValue), !0;
                            t.raise("Invalid named reference")
                        }
                        return !1
                    }, Nt.regexp_eatCharacterEscape = function(t) {
                        return this.regexp_eatControlEscape(t) || this.regexp_eatCControlLetter(t) || this.regexp_eatZero(t) || this.regexp_eatHexEscapeSequence(t) || this.regexp_eatRegExpUnicodeEscapeSequence(t, !1) || !t.switchU && this.regexp_eatLegacyOctalEscapeSequence(t) || this.regexp_eatIdentityEscape(t)
                    }, Nt.regexp_eatCControlLetter = function(t) {
                        var e = t.pos;
                        if (t.eat(99)) {
                            if (this.regexp_eatControlLetter(t)) return !0;
                            t.pos = e
                        }
                        return !1
                    }, Nt.regexp_eatZero = function(t) {
                        return 48 === t.current() && !Zt(t.lookahead()) && (t.lastIntValue = 0, t.advance(), !0)
                    }, Nt.regexp_eatControlEscape = function(t) {
                        var e = t.current();
                        return 116 === e ? (t.lastIntValue = 9, t.advance(), !0) : 110 === e ? (t.lastIntValue = 10, t.advance(), !0) : 118 === e ? (t.lastIntValue = 11, t.advance(), !0) : 102 === e ? (t.lastIntValue = 12, t.advance(), !0) : 114 === e && (t.lastIntValue = 13, t.advance(), !0)
                    }, Nt.regexp_eatControlLetter = function(t) {
                        var e = t.current();
                        return !!Wt(e) && (t.lastIntValue = e % 32, t.advance(), !0)
                    }, Nt.regexp_eatRegExpUnicodeEscapeSequence = function(t, e) {
                        void 0 === e && (e = !1);
                        var i = t.pos,
                            n = e || t.switchU;
                        if (t.eat(117)) {
                            if (this.regexp_eatFixedHexDigits(t, 4)) {
                                var r = t.lastIntValue;
                                if (n && r >= 55296 && r <= 56319) {
                                    var s = t.pos;
                                    if (t.eat(92) && t.eat(117) && this.regexp_eatFixedHexDigits(t, 4)) {
                                        var a = t.lastIntValue;
                                        if (a >= 56320 && a <= 57343) return t.lastIntValue = 1024 * (r - 55296) + (a - 56320) + 65536, !0
                                    }
                                    t.pos = s, t.lastIntValue = r
                                }
                                return !0
                            }
                            if (n && t.eat(123) && this.regexp_eatHexDigits(t) && t.eat(125) && Ut(t.lastIntValue)) return !0;
                            n && t.raise("Invalid unicode escape"), t.pos = i
                        }
                        return !1
                    }, Nt.regexp_eatIdentityEscape = function(t) {
                        if (t.switchU) return !!this.regexp_eatSyntaxCharacter(t) || !!t.eat(47) && (t.lastIntValue = 47, !0);
                        var e = t.current();
                        return !(99 === e || t.switchN && 107 === e || (t.lastIntValue = e, t.advance(), 0))
                    }, Nt.regexp_eatDecimalEscape = function(t) {
                        t.lastIntValue = 0;
                        var e = t.current();
                        if (e >= 49 && e <= 57) {
                            do {
                                t.lastIntValue = 10 * t.lastIntValue + (e - 48), t.advance()
                            } while ((e = t.current()) >= 48 && e <= 57);
                            return !0
                        }
                        return !1
                    }, Nt.regexp_eatCharacterClassEscape = function(t) {
                        var e = t.current();
                        if (Yt(e)) return t.lastIntValue = -1, t.advance(), !0;
                        if (t.switchU && this.options.ecmaVersion >= 9 && (80 === e || 112 === e)) {
                            if (t.lastIntValue = -1, t.advance(), t.eat(123) && this.regexp_eatUnicodePropertyValueExpression(t) && t.eat(125)) return !0;
                            t.raise("Invalid property name")
                        }
                        return !1
                    }, Nt.regexp_eatUnicodePropertyValueExpression = function(t) {
                        var e = t.pos;
                        if (this.regexp_eatUnicodePropertyName(t) && t.eat(61)) {
                            var i = t.lastStringValue;
                            if (this.regexp_eatUnicodePropertyValue(t)) {
                                var n = t.lastStringValue;
                                return this.regexp_validateUnicodePropertyNameAndValue(t, i, n), !0
                            }
                        }
                        if (t.pos = e, this.regexp_eatLoneUnicodePropertyNameOrValue(t)) {
                            var r = t.lastStringValue;
                            return this.regexp_validateUnicodePropertyNameOrValue(t, r), !0
                        }
                        return !1
                    }, Nt.regexp_validateUnicodePropertyNameAndValue = function(t, e, i) {
                        T(t.unicodeProperties.nonBinary, e) || t.raise("Invalid property name"), t.unicodeProperties.nonBinary[e].test(i) || t.raise("Invalid property value")
                    }, Nt.regexp_validateUnicodePropertyNameOrValue = function(t, e) {
                        t.unicodeProperties.binary.test(e) || t.raise("Invalid property name")
                    }, Nt.regexp_eatUnicodePropertyName = function(t) {
                        var e = 0;
                        for (t.lastStringValue = ""; Xt(e = t.current());) t.lastStringValue += Ft(e), t.advance();
                        return "" !== t.lastStringValue
                    }, Nt.regexp_eatUnicodePropertyValue = function(t) {
                        var e = 0;
                        for (t.lastStringValue = ""; Gt(e = t.current());) t.lastStringValue += Ft(e), t.advance();
                        return "" !== t.lastStringValue
                    }, Nt.regexp_eatLoneUnicodePropertyNameOrValue = function(t) {
                        return this.regexp_eatUnicodePropertyValue(t)
                    }, Nt.regexp_eatCharacterClass = function(t) {
                        if (t.eat(91)) {
                            if (t.eat(94), this.regexp_classRanges(t), t.eat(93)) return !0;
                            t.raise("Unterminated character class")
                        }
                        return !1
                    }, Nt.regexp_classRanges = function(t) {
                        for (; this.regexp_eatClassAtom(t);) {
                            var e = t.lastIntValue;
                            if (t.eat(45) && this.regexp_eatClassAtom(t)) {
                                var i = t.lastIntValue;
                                !t.switchU || -1 !== e && -1 !== i || t.raise("Invalid character class"), -1 !== e && -1 !== i && e > i && t.raise("Range out of order in character class")
                            }
                        }
                    }, Nt.regexp_eatClassAtom = function(t) {
                        var e = t.pos;
                        if (t.eat(92)) {
                            if (this.regexp_eatClassEscape(t)) return !0;
                            if (t.switchU) {
                                var i = t.current();
                                (99 === i || Kt(i)) && t.raise("Invalid class escape"), t.raise("Invalid escape")
                            }
                            t.pos = e
                        }
                        var n = t.current();
                        return 93 !== n && (t.lastIntValue = n, t.advance(), !0)
                    }, Nt.regexp_eatClassEscape = function(t) {
                        var e = t.pos;
                        if (t.eat(98)) return t.lastIntValue = 8, !0;
                        if (t.switchU && t.eat(45)) return t.lastIntValue = 45, !0;
                        if (!t.switchU && t.eat(99)) {
                            if (this.regexp_eatClassControlLetter(t)) return !0;
                            t.pos = e
                        }
                        return this.regexp_eatCharacterClassEscape(t) || this.regexp_eatCharacterEscape(t)
                    }, Nt.regexp_eatClassControlLetter = function(t) {
                        var e = t.current();
                        return !(!Zt(e) && 95 !== e || (t.lastIntValue = e % 32, t.advance(), 0))
                    }, Nt.regexp_eatHexEscapeSequence = function(t) {
                        var e = t.pos;
                        if (t.eat(120)) {
                            if (this.regexp_eatFixedHexDigits(t, 2)) return !0;
                            t.switchU && t.raise("Invalid escape"), t.pos = e
                        }
                        return !1
                    }, Nt.regexp_eatDecimalDigits = function(t) {
                        var e = t.pos,
                            i = 0;
                        for (t.lastIntValue = 0; Zt(i = t.current());) t.lastIntValue = 10 * t.lastIntValue + (i - 48), t.advance();
                        return t.pos !== e
                    }, Nt.regexp_eatHexDigits = function(t) {
                        var e = t.pos,
                            i = 0;
                        for (t.lastIntValue = 0; Qt(i = t.current());) t.lastIntValue = 16 * t.lastIntValue + $t(i), t.advance();
                        return t.pos !== e
                    }, Nt.regexp_eatLegacyOctalEscapeSequence = function(t) {
                        if (this.regexp_eatOctalDigit(t)) {
                            var e = t.lastIntValue;
                            if (this.regexp_eatOctalDigit(t)) {
                                var i = t.lastIntValue;
                                e <= 3 && this.regexp_eatOctalDigit(t) ? t.lastIntValue = 64 * e + 8 * i + t.lastIntValue : t.lastIntValue = 8 * e + i
                            } else t.lastIntValue = e;
                            return !0
                        }
                        return !1
                    }, Nt.regexp_eatOctalDigit = function(t) {
                        var e = t.current();
                        return Kt(e) ? (t.lastIntValue = e - 48, t.advance(), !0) : (t.lastIntValue = 0, !1)
                    }, Nt.regexp_eatFixedHexDigits = function(t, e) {
                        var i = t.pos;
                        t.lastIntValue = 0;
                        for (var n = 0; n < e; ++n) {
                            var r = t.current();
                            if (!Qt(r)) return t.pos = i, !1;
                            t.lastIntValue = 16 * t.lastIntValue + $t(r), t.advance()
                        }
                        return !0
                    };
                    var Jt = function(t) {
                            this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, t.options.locations && (this.loc = new L(t, t.startLoc, t.endLoc)), t.options.ranges && (this.range = [t.start, t.end])
                        },
                        te = et.prototype;

                    function ee(t, e) {
                        return e ? parseInt(t, 8) : parseFloat(t.replace(/_/g, ""))
                    }

                    function ie(t) {
                        return "function" != typeof BigInt ? null : BigInt(t.replace(/_/g, ""))
                    }

                    function ne(t) {
                        return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)))
                    }
                    te.next = function(t) {
                        !t && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new Jt(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken()
                    }, te.getToken = function() {
                        return this.next(), new Jt(this)
                    }, "undefined" != typeof Symbol && (te[Symbol.iterator] = function() {
                        var t = this;
                        return {
                            next: function() {
                                var e = t.getToken();
                                return {
                                    done: e.type === x.eof,
                                    value: e
                                }
                            }
                        }
                    }), te.curContext = function() {
                        return this.context[this.context.length - 1]
                    }, te.nextToken = function() {
                        var t = this.curContext();
                        return t && t.preserveSpace || this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length ? this.finishToken(x.eof) : t.override ? t.override(this) : void this.readToken(this.fullCharCodeAtPos())
                    }, te.readToken = function(t) {
                        return d(t, this.options.ecmaVersion >= 6) || 92 === t ? this.readWord() : this.getTokenFromCode(t)
                    }, te.fullCharCodeAtPos = function() {
                        var t = this.input.charCodeAt(this.pos);
                        if (t <= 55295 || t >= 56320) return t;
                        var e = this.input.charCodeAt(this.pos + 1);
                        return e <= 56319 || e >= 57344 ? t : (t << 10) + e - 56613888
                    }, te.skipBlockComment = function() {
                        var t, e = this.options.onComment && this.curPosition(),
                            i = this.pos,
                            n = this.input.indexOf("*/", this.pos += 2);
                        if (-1 === n && this.raise(this.pos - 2, "Unterminated comment"), this.pos = n + 2, this.options.locations)
                            for (w.lastIndex = i;
                                (t = w.exec(this.input)) && t.index < this.pos;) ++this.curLine, this.lineStart = t.index + t[0].length;
                        this.options.onComment && this.options.onComment(!0, this.input.slice(i + 2, n), i, this.pos, e, this.curPosition())
                    }, te.skipLineComment = function(t) {
                        for (var e = this.pos, i = this.options.onComment && this.curPosition(), n = this.input.charCodeAt(this.pos += t); this.pos < this.input.length && !S(n);) n = this.input.charCodeAt(++this.pos);
                        this.options.onComment && this.options.onComment(!1, this.input.slice(e + t, this.pos), e, this.pos, i, this.curPosition())
                    }, te.skipSpace = function() {
                        t: for (; this.pos < this.input.length;) {
                            var t = this.input.charCodeAt(this.pos);
                            switch (t) {
                                case 32:
                                case 160:
                                    ++this.pos;
                                    break;
                                case 13:
                                    10 === this.input.charCodeAt(this.pos + 1) && ++this.pos;
                                case 10:
                                case 8232:
                                case 8233:
                                    ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
                                    break;
                                case 47:
                                    switch (this.input.charCodeAt(this.pos + 1)) {
                                        case 42:
                                            this.skipBlockComment();
                                            break;
                                        case 47:
                                            this.skipLineComment(2);
                                            break;
                                        default:
                                            break t
                                    }
                                    break;
                                default:
                                    if (!(t > 8 && t < 14 || t >= 5760 && C.test(String.fromCharCode(t)))) break t;
                                    ++this.pos
                            }
                        }
                    }, te.finishToken = function(t, e) {
                        this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
                        var i = this.type;
                        this.type = t, this.value = e, this.updateContext(i)
                    }, te.readToken_dot = function() {
                        var t = this.input.charCodeAt(this.pos + 1);
                        if (t >= 48 && t <= 57) return this.readNumber(!0);
                        var e = this.input.charCodeAt(this.pos + 2);
                        return this.options.ecmaVersion >= 6 && 46 === t && 46 === e ? (this.pos += 3, this.finishToken(x.ellipsis)) : (++this.pos, this.finishToken(x.dot))
                    }, te.readToken_slash = function() {
                        var t = this.input.charCodeAt(this.pos + 1);
                        return this.exprAllowed ? (++this.pos, this.readRegexp()) : 61 === t ? this.finishOp(x.assign, 2) : this.finishOp(x.slash, 1)
                    }, te.readToken_mult_modulo_exp = function(t) {
                        var e = this.input.charCodeAt(this.pos + 1),
                            i = 1,
                            n = 42 === t ? x.star : x.modulo;
                        return this.options.ecmaVersion >= 7 && 42 === t && 42 === e && (++i, n = x.starstar, e = this.input.charCodeAt(this.pos + 2)), 61 === e ? this.finishOp(x.assign, i + 1) : this.finishOp(n, i)
                    }, te.readToken_pipe_amp = function(t) {
                        var e = this.input.charCodeAt(this.pos + 1);
                        return e === t ? this.options.ecmaVersion >= 12 && 61 === this.input.charCodeAt(this.pos + 2) ? this.finishOp(x.assign, 3) : this.finishOp(124 === t ? x.logicalOR : x.logicalAND, 2) : 61 === e ? this.finishOp(x.assign, 2) : this.finishOp(124 === t ? x.bitwiseOR : x.bitwiseAND, 1)
                    }, te.readToken_caret = function() {
                        return 61 === this.input.charCodeAt(this.pos + 1) ? this.finishOp(x.assign, 2) : this.finishOp(x.bitwiseXOR, 1)
                    }, te.readToken_plus_min = function(t) {
                        var e = this.input.charCodeAt(this.pos + 1);
                        return e === t ? 45 !== e || this.inModule || 62 !== this.input.charCodeAt(this.pos + 2) || 0 !== this.lastTokEnd && !b.test(this.input.slice(this.lastTokEnd, this.pos)) ? this.finishOp(x.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : 61 === e ? this.finishOp(x.assign, 2) : this.finishOp(x.plusMin, 1)
                    }, te.readToken_lt_gt = function(t) {
                        var e = this.input.charCodeAt(this.pos + 1),
                            i = 1;
                        return e === t ? (i = 62 === t && 62 === this.input.charCodeAt(this.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.pos + i) ? this.finishOp(x.assign, i + 1) : this.finishOp(x.bitShift, i)) : 33 !== e || 60 !== t || this.inModule || 45 !== this.input.charCodeAt(this.pos + 2) || 45 !== this.input.charCodeAt(this.pos + 3) ? (61 === e && (i = 2), this.finishOp(x.relational, i)) : (this.skipLineComment(4), this.skipSpace(), this.nextToken())
                    }, te.readToken_eq_excl = function(t) {
                        var e = this.input.charCodeAt(this.pos + 1);
                        return 61 === e ? this.finishOp(x.equality, 61 === this.input.charCodeAt(this.pos + 2) ? 3 : 2) : 61 === t && 62 === e && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(x.arrow)) : this.finishOp(61 === t ? x.eq : x.prefix, 1)
                    }, te.readToken_question = function() {
                        var t = this.options.ecmaVersion;
                        if (t >= 11) {
                            var e = this.input.charCodeAt(this.pos + 1);
                            if (46 === e) {
                                var i = this.input.charCodeAt(this.pos + 2);
                                if (i < 48 || i > 57) return this.finishOp(x.questionDot, 2)
                            }
                            if (63 === e) return t >= 12 && 61 === this.input.charCodeAt(this.pos + 2) ? this.finishOp(x.assign, 3) : this.finishOp(x.coalesce, 2)
                        }
                        return this.finishOp(x.question, 1)
                    }, te.readToken_numberSign = function() {
                        var t = 35;
                        if (this.options.ecmaVersion >= 13 && (++this.pos, d(t = this.fullCharCodeAtPos(), !0) || 92 === t)) return this.finishToken(x.privateId, this.readWord1());
                        this.raise(this.pos, "Unexpected character '" + ne(t) + "'")
                    }, te.getTokenFromCode = function(t) {
                        switch (t) {
                            case 46:
                                return this.readToken_dot();
                            case 40:
                                return ++this.pos, this.finishToken(x.parenL);
                            case 41:
                                return ++this.pos, this.finishToken(x.parenR);
                            case 59:
                                return ++this.pos, this.finishToken(x.semi);
                            case 44:
                                return ++this.pos, this.finishToken(x.comma);
                            case 91:
                                return ++this.pos, this.finishToken(x.bracketL);
                            case 93:
                                return ++this.pos, this.finishToken(x.bracketR);
                            case 123:
                                return ++this.pos, this.finishToken(x.braceL);
                            case 125:
                                return ++this.pos, this.finishToken(x.braceR);
                            case 58:
                                return ++this.pos, this.finishToken(x.colon);
                            case 96:
                                if (this.options.ecmaVersion < 6) break;
                                return ++this.pos, this.finishToken(x.backQuote);
                            case 48:
                                var e = this.input.charCodeAt(this.pos + 1);
                                if (120 === e || 88 === e) return this.readRadixNumber(16);
                                if (this.options.ecmaVersion >= 6) {
                                    if (111 === e || 79 === e) return this.readRadixNumber(8);
                                    if (98 === e || 66 === e) return this.readRadixNumber(2)
                                }
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                                return this.readNumber(!1);
                            case 34:
                            case 39:
                                return this.readString(t);
                            case 47:
                                return this.readToken_slash();
                            case 37:
                            case 42:
                                return this.readToken_mult_modulo_exp(t);
                            case 124:
                            case 38:
                                return this.readToken_pipe_amp(t);
                            case 94:
                                return this.readToken_caret();
                            case 43:
                            case 45:
                                return this.readToken_plus_min(t);
                            case 60:
                            case 62:
                                return this.readToken_lt_gt(t);
                            case 61:
                            case 33:
                                return this.readToken_eq_excl(t);
                            case 63:
                                return this.readToken_question();
                            case 126:
                                return this.finishOp(x.prefix, 1);
                            case 35:
                                return this.readToken_numberSign()
                        }
                        this.raise(this.pos, "Unexpected character '" + ne(t) + "'")
                    }, te.finishOp = function(t, e) {
                        var i = this.input.slice(this.pos, this.pos + e);
                        return this.pos += e, this.finishToken(t, i)
                    }, te.readRegexp = function() {
                        for (var t, e, i = this.pos;;) {
                            this.pos >= this.input.length && this.raise(i, "Unterminated regular expression");
                            var n = this.input.charAt(this.pos);
                            if (b.test(n) && this.raise(i, "Unterminated regular expression"), t) t = !1;
                            else {
                                if ("[" === n) e = !0;
                                else if ("]" === n && e) e = !1;
                                else if ("/" === n && !e) break;
                                t = "\\" === n
                            }++this.pos
                        }
                        var r = this.input.slice(i, this.pos);
                        ++this.pos;
                        var s = this.pos,
                            a = this.readWord1();
                        this.containsEsc && this.unexpected(s);
                        var o = this.regexpState || (this.regexpState = new Vt(this));
                        o.reset(i, r, a), this.validateRegExpFlags(o), this.validateRegExpPattern(o);
                        var h = null;
                        try {
                            h = new RegExp(r, a)
                        } catch (t) {}
                        return this.finishToken(x.regexp, {
                            pattern: r,
                            flags: a,
                            value: h
                        })
                    }, te.readInt = function(t, e, i) {
                        for (var n = this.options.ecmaVersion >= 12 && void 0 === e, r = i && 48 === this.input.charCodeAt(this.pos), s = this.pos, a = 0, o = 0, h = 0, l = null == e ? 1 / 0 : e; h < l; ++h, ++this.pos) {
                            var c = this.input.charCodeAt(this.pos),
                                u = void 0;
                            if (n && 95 === c) r && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), 95 === o && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), 0 === h && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o = c;
                            else {
                                if ((u = c >= 97 ? c - 97 + 10 : c >= 65 ? c - 65 + 10 : c >= 48 && c <= 57 ? c - 48 : 1 / 0) >= t) break;
                                o = c, a = a * t + u
                            }
                        }
                        return n && 95 === o && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === s || null != e && this.pos - s !== e ? null : a
                    }, te.readRadixNumber = function(t) {
                        var e = this.pos;
                        this.pos += 2;
                        var i = this.readInt(t);
                        return null == i && this.raise(this.start + 2, "Expected number in radix " + t), this.options.ecmaVersion >= 11 && 110 === this.input.charCodeAt(this.pos) ? (i = ie(this.input.slice(e, this.pos)), ++this.pos) : d(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(x.num, i)
                    }, te.readNumber = function(t) {
                        var e = this.pos;
                        t || null !== this.readInt(10, void 0, !0) || this.raise(e, "Invalid number");
                        var i = this.pos - e >= 2 && 48 === this.input.charCodeAt(e);
                        i && this.strict && this.raise(e, "Invalid number");
                        var n = this.input.charCodeAt(this.pos);
                        if (!i && !t && this.options.ecmaVersion >= 11 && 110 === n) {
                            var r = ie(this.input.slice(e, this.pos));
                            return ++this.pos, d(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(x.num, r)
                        }
                        i && /[89]/.test(this.input.slice(e, this.pos)) && (i = !1), 46 !== n || i || (++this.pos, this.readInt(10), n = this.input.charCodeAt(this.pos)), 69 !== n && 101 !== n || i || (43 !== (n = this.input.charCodeAt(++this.pos)) && 45 !== n || ++this.pos, null === this.readInt(10) && this.raise(e, "Invalid number")), d(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
                        var s = ee(this.input.slice(e, this.pos), i);
                        return this.finishToken(x.num, s)
                    }, te.readCodePoint = function() {
                        var t;
                        if (123 === this.input.charCodeAt(this.pos)) {
                            this.options.ecmaVersion < 6 && this.unexpected();
                            var e = ++this.pos;
                            t = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, t > 1114111 && this.invalidStringToken(e, "Code point out of bounds")
                        } else t = this.readHexChar(4);
                        return t
                    }, te.readString = function(t) {
                        for (var e = "", i = ++this.pos;;) {
                            this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
                            var n = this.input.charCodeAt(this.pos);
                            if (n === t) break;
                            92 === n ? (e += this.input.slice(i, this.pos), e += this.readEscapedChar(!1), i = this.pos) : (S(n, this.options.ecmaVersion >= 10) && this.raise(this.start, "Unterminated string constant"), ++this.pos)
                        }
                        return e += this.input.slice(i, this.pos++), this.finishToken(x.string, e)
                    };
                    var re = {};
                    te.tryReadTemplateToken = function() {
                        this.inTemplateElement = !0;
                        try {
                            this.readTmplToken()
                        } catch (t) {
                            if (t !== re) throw t;
                            this.readInvalidTemplateToken()
                        }
                        this.inTemplateElement = !1
                    }, te.invalidStringToken = function(t, e) {
                        if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw re;
                        this.raise(t, e)
                    }, te.readTmplToken = function() {
                        for (var t = "", e = this.pos;;) {
                            this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
                            var i = this.input.charCodeAt(this.pos);
                            if (96 === i || 36 === i && 123 === this.input.charCodeAt(this.pos + 1)) return this.pos !== this.start || this.type !== x.template && this.type !== x.invalidTemplate ? (t += this.input.slice(e, this.pos), this.finishToken(x.template, t)) : 36 === i ? (this.pos += 2, this.finishToken(x.dollarBraceL)) : (++this.pos, this.finishToken(x.backQuote));
                            if (92 === i) t += this.input.slice(e, this.pos), t += this.readEscapedChar(!0), e = this.pos;
                            else if (S(i)) {
                                switch (t += this.input.slice(e, this.pos), ++this.pos, i) {
                                    case 13:
                                        10 === this.input.charCodeAt(this.pos) && ++this.pos;
                                    case 10:
                                        t += "\n";
                                        break;
                                    default:
                                        t += String.fromCharCode(i)
                                }
                                this.options.locations && (++this.curLine, this.lineStart = this.pos), e = this.pos
                            } else ++this.pos
                        }
                    }, te.readInvalidTemplateToken = function() {
                        for (; this.pos < this.input.length; this.pos++) switch (this.input[this.pos]) {
                            case "\\":
                                ++this.pos;
                                break;
                            case "$":
                                if ("{" !== this.input[this.pos + 1]) break;
                            case "`":
                                return this.finishToken(x.invalidTemplate, this.input.slice(this.start, this.pos))
                        }
                        this.raise(this.start, "Unterminated template")
                    }, te.readEscapedChar = function(t) {
                        var e = this.input.charCodeAt(++this.pos);
                        switch (++this.pos, e) {
                            case 110:
                                return "\n";
                            case 114:
                                return "\r";
                            case 120:
                                return String.fromCharCode(this.readHexChar(2));
                            case 117:
                                return ne(this.readCodePoint());
                            case 116:
                                return "\t";
                            case 98:
                                return "\b";
                            case 118:
                                return "\v";
                            case 102:
                                return "\f";
                            case 13:
                                10 === this.input.charCodeAt(this.pos) && ++this.pos;
                            case 10:
                                return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
                            case 56:
                            case 57:
                                if (this.strict && this.invalidStringToken(this.pos - 1, "Invalid escape sequence"), t) {
                                    var i = this.pos - 1;
                                    return this.invalidStringToken(i, "Invalid escape sequence in template string"), null
                                }
                            default:
                                if (e >= 48 && e <= 55) {
                                    var n = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0],
                                        r = parseInt(n, 8);
                                    return r > 255 && (n = n.slice(0, -1), r = parseInt(n, 8)), this.pos += n.length - 1, e = this.input.charCodeAt(this.pos), "0" === n && 56 !== e && 57 !== e || !this.strict && !t || this.invalidStringToken(this.pos - 1 - n.length, t ? "Octal literal in template string" : "Octal literal in strict mode"), String.fromCharCode(r)
                                }
                                return S(e) ? "" : String.fromCharCode(e)
                        }
                    }, te.readHexChar = function(t) {
                        var e = this.pos,
                            i = this.readInt(16, t);
                        return null === i && this.invalidStringToken(e, "Bad character escape sequence"), i
                    }, te.readWord1 = function() {
                        this.containsEsc = !1;
                        for (var t = "", e = !0, i = this.pos, n = this.options.ecmaVersion >= 6; this.pos < this.input.length;) {
                            var r = this.fullCharCodeAtPos();
                            if (p(r, n)) this.pos += r <= 65535 ? 1 : 2;
                            else {
                                if (92 !== r) break;
                                this.containsEsc = !0, t += this.input.slice(i, this.pos);
                                var s = this.pos;
                                117 !== this.input.charCodeAt(++this.pos) && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
                                var a = this.readCodePoint();
                                (e ? d : p)(a, n) || this.invalidStringToken(s, "Invalid Unicode escape"), t += ne(a), i = this.pos
                            }
                            e = !1
                        }
                        return t + this.input.slice(i, this.pos)
                    }, te.readWord = function() {
                        var t = this.readWord1(),
                            e = x.name;
                        return this.keywords.test(t) && (e = _[t]), this.finishToken(e, t)
                    };
                    var se = "8.4.1";

                    function ae(t, e) {
                        return et.parse(t, e)
                    }

                    function oe(t, e, i) {
                        return et.parseExpressionAt(t, e, i)
                    }

                    function he(t, e) {
                        return et.tokenizer(t, e)
                    }
                    et.acorn = {
                        Parser: et,
                        version: se,
                        defaultOptions: B,
                        Position: O,
                        SourceLocation: L,
                        getLineInfo: D,
                        Node: wt,
                        TokenType: f,
                        tokTypes: x,
                        keywordTypes: _,
                        TokContext: kt,
                        tokContexts: At,
                        isIdentifierChar: p,
                        isIdentifierStart: d,
                        Token: Jt,
                        isNewLine: S,
                        lineBreak: b,
                        lineBreakG: w,
                        nonASCIIwhitespace: C
                    }, t.Node = wt, t.Parser = et, t.Position = O, t.SourceLocation = L, t.TokContext = kt, t.Token = Jt, t.TokenType = f, t.defaultOptions = B, t.getLineInfo = D, t.isIdentifierChar = p, t.isIdentifierStart = d, t.isNewLine = S, t.keywordTypes = _, t.lineBreak = b, t.lineBreakG = w, t.nonASCIIwhitespace = C, t.parse = ae, t.parseExpressionAt = oe, t.tokContexts = At, t.tokTypes = x, t.tokenizer = he, t.version = se, Object.defineProperty(t, "__esModule", {
                        value: !0
                    })
                }(e)
            },
            187: t => {
                "use strict";
                var e, i = "object" == typeof Reflect ? Reflect : null,
                    n = i && "function" == typeof i.apply ? i.apply : function(t, e, i) {
                        return Function.prototype.apply.call(t, e, i)
                    };
                e = i && "function" == typeof i.ownKeys ? i.ownKeys : Object.getOwnPropertySymbols ? function(t) {
                    return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))
                } : function(t) {
                    return Object.getOwnPropertyNames(t)
                };
                var r = Number.isNaN || function(t) {
                    return t != t
                };

                function s() {
                    s.init.call(this)
                }
                t.exports = s, t.exports.once = function(t, e) {
                    return new Promise((function(i, n) {
                        function r(i) {
                            t.removeListener(e, s), n(i)
                        }

                        function s() {
                            "function" == typeof t.removeListener && t.removeListener("error", r), i([].slice.call(arguments))
                        }
                        g(t, e, s, {
                            once: !0
                        }), "error" !== e && function(t, e, i) {
                            "function" == typeof t.on && g(t, "error", e, i)
                        }(t, r, {
                            once: !0
                        })
                    }))
                }, s.EventEmitter = s, s.prototype._events = void 0, s.prototype._eventsCount = 0, s.prototype._maxListeners = void 0;
                var a = 10;

                function o(t) {
                    if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t)
                }

                function h(t) {
                    return void 0 === t._maxListeners ? s.defaultMaxListeners : t._maxListeners
                }

                function l(t, e, i, n) {
                    var r, s, a, l;
                    if (o(i), void 0 === (s = t._events) ? (s = t._events = Object.create(null), t._eventsCount = 0) : (void 0 !== s.newListener && (t.emit("newListener", e, i.listener ? i.listener : i), s = t._events), a = s[e]), void 0 === a) a = s[e] = i, ++t._eventsCount;
                    else if ("function" == typeof a ? a = s[e] = n ? [i, a] : [a, i] : n ? a.unshift(i) : a.push(i), (r = h(t)) > 0 && a.length > r && !a.warned) {
                        a.warned = !0;
                        var c = new Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                        c.name = "MaxListenersExceededWarning", c.emitter = t, c.type = e, c.count = a.length, l = c, console && console.warn && console.warn(l)
                    }
                    return t
                }

                function c() {
                    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
                }

                function u(t, e, i) {
                    var n = {
                            fired: !1,
                            wrapFn: void 0,
                            target: t,
                            type: e,
                            listener: i
                        },
                        r = c.bind(n);
                    return r.listener = i, n.wrapFn = r, r
                }

                function d(t, e, i) {
                    var n = t._events;
                    if (void 0 === n) return [];
                    var r = n[e];
                    return void 0 === r ? [] : "function" == typeof r ? i ? [r.listener || r] : [r] : i ? function(t) {
                        for (var e = new Array(t.length), i = 0; i < e.length; ++i) e[i] = t[i].listener || t[i];
                        return e
                    }(r) : f(r, r.length)
                }

                function p(t) {
                    var e = this._events;
                    if (void 0 !== e) {
                        var i = e[t];
                        if ("function" == typeof i) return 1;
                        if (void 0 !== i) return i.length
                    }
                    return 0
                }

                function f(t, e) {
                    for (var i = new Array(e), n = 0; n < e; ++n) i[n] = t[n];
                    return i
                }

                function g(t, e, i, n) {
                    if ("function" == typeof t.on) n.once ? t.once(e, i) : t.on(e, i);
                    else {
                        if ("function" != typeof t.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t);
                        t.addEventListener(e, (function r(s) {
                            n.once && t.removeEventListener(e, r), i(s)
                        }))
                    }
                }
                Object.defineProperty(s, "defaultMaxListeners", {
                    enumerable: !0,
                    get: function() {
                        return a
                    },
                    set: function(t) {
                        if ("number" != typeof t || t < 0 || r(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
                        a = t
                    }
                }), s.init = function() {
                    void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
                }, s.prototype.setMaxListeners = function(t) {
                    if ("number" != typeof t || t < 0 || r(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
                    return this._maxListeners = t, this
                }, s.prototype.getMaxListeners = function() {
                    return h(this)
                }, s.prototype.emit = function(t) {
                    for (var e = [], i = 1; i < arguments.length; i++) e.push(arguments[i]);
                    var r = "error" === t,
                        s = this._events;
                    if (void 0 !== s) r = r && void 0 === s.error;
                    else if (!r) return !1;
                    if (r) {
                        var a;
                        if (e.length > 0 && (a = e[0]), a instanceof Error) throw a;
                        var o = new Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                        throw o.context = a, o
                    }
                    var h = s[t];
                    if (void 0 === h) return !1;
                    if ("function" == typeof h) n(h, this, e);
                    else {
                        var l = h.length,
                            c = f(h, l);
                        for (i = 0; i < l; ++i) n(c[i], this, e)
                    }
                    return !0
                }, s.prototype.addListener = function(t, e) {
                    return l(this, t, e, !1)
                }, s.prototype.on = s.prototype.addListener, s.prototype.prependListener = function(t, e) {
                    return l(this, t, e, !0)
                }, s.prototype.once = function(t, e) {
                    return o(e), this.on(t, u(this, t, e)), this
                }, s.prototype.prependOnceListener = function(t, e) {
                    return o(e), this.prependListener(t, u(this, t, e)), this
                }, s.prototype.removeListener = function(t, e) {
                    var i, n, r, s, a;
                    if (o(e), void 0 === (n = this._events)) return this;
                    if (void 0 === (i = n[t])) return this;
                    if (i === e || i.listener === e) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[t], n.removeListener && this.emit("removeListener", t, i.listener || e));
                    else if ("function" != typeof i) {
                        for (r = -1, s = i.length - 1; s >= 0; s--)
                            if (i[s] === e || i[s].listener === e) {
                                a = i[s].listener, r = s;
                                break
                            }
                        if (r < 0) return this;
                        0 === r ? i.shift() : function(t, e) {
                            for (; e + 1 < t.length; e++) t[e] = t[e + 1];
                            t.pop()
                        }(i, r), 1 === i.length && (n[t] = i[0]), void 0 !== n.removeListener && this.emit("removeListener", t, a || e)
                    }
                    return this
                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t) {
                    var e, i, n;
                    if (void 0 === (i = this._events)) return this;
                    if (void 0 === i.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== i[t] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete i[t]), this;
                    if (0 === arguments.length) {
                        var r, s = Object.keys(i);
                        for (n = 0; n < s.length; ++n) "removeListener" !== (r = s[n]) && this.removeAllListeners(r);
                        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
                    }
                    if ("function" == typeof(e = i[t])) this.removeListener(t, e);
                    else if (void 0 !== e)
                        for (n = e.length - 1; n >= 0; n--) this.removeListener(t, e[n]);
                    return this
                }, s.prototype.listeners = function(t) {
                    return d(this, t, !0)
                }, s.prototype.rawListeners = function(t) {
                    return d(this, t, !1)
                }, s.listenerCount = function(t, e) {
                    return "function" == typeof t.listenerCount ? t.listenerCount(e) : p.call(t, e)
                }, s.prototype.listenerCount = p, s.prototype.eventNames = function() {
                    return this._eventsCount > 0 ? e(this._events) : []
                }
            },
            90: t => {
                ! function(e, i) {
                    var n = function(t, e, i) {
                        "use strict";
                        var n, r;
                        if (function() {
                                var e, i = {
                                    lazyClass: "lazyload",
                                    loadedClass: "lazyloaded",
                                    loadingClass: "lazyloading",
                                    preloadClass: "lazypreload",
                                    errorClass: "lazyerror",
                                    autosizesClass: "lazyautosizes",
                                    fastLoadedClass: "ls-is-cached",
                                    iframeLoadMode: 0,
                                    srcAttr: "data-src",
                                    srcsetAttr: "data-srcset",
                                    sizesAttr: "data-sizes",
                                    minSize: 40,
                                    customMedia: {},
                                    init: !0,
                                    expFactor: 1.5,
                                    hFac: .8,
                                    loadMode: 2,
                                    loadHidden: !0,
                                    ricTimeout: 0,
                                    throttleDelay: 125
                                };
                                for (e in r = t.lazySizesConfig || t.lazysizesConfig || {}, i) e in r || (r[e] = i[e])
                            }(), !e || !e.getElementsByClassName) return {
                            init: function() {},
                            cfg: r,
                            noSupport: !0
                        };
                        var s = e.documentElement,
                            a = t.HTMLPictureElement,
                            o = "addEventListener",
                            h = "getAttribute",
                            l = t[o].bind(t),
                            c = t.setTimeout,
                            u = t.requestAnimationFrame || c,
                            d = t.requestIdleCallback,
                            p = /^picture$/i,
                            f = ["load", "error", "lazyincluded", "_lazyloaded"],
                            g = {},
                            m = Array.prototype.forEach,
                            v = function(t, e) {
                                return g[e] || (g[e] = new RegExp("(\\s|^)" + e + "(\\s|$)")), g[e].test(t[h]("class") || "") && g[e]
                            },
                            _ = function(t, e) {
                                v(t, e) || t.setAttribute("class", (t[h]("class") || "").trim() + " " + e)
                            },
                            y = function(t, e) {
                                var i;
                                (i = v(t, e)) && t.setAttribute("class", (t[h]("class") || "").replace(i, " "))
                            },
                            x = function(t, e, i) {
                                var n = i ? o : "removeEventListener";
                                i && x(t, e), f.forEach((function(i) {
                                    t[n](i, e)
                                }))
                            },
                            b = function(t, i, r, s, a) {
                                var o = e.createEvent("Event");
                                return r || (r = {}), r.instance = n, o.initEvent(i, !s, !a), o.detail = r, t.dispatchEvent(o), o
                            },
                            w = function(e, i) {
                                var n;
                                !a && (n = t.picturefill || r.pf) ? (i && i.src && !e[h]("srcset") && e.setAttribute("srcset", i.src), n({
                                    reevaluate: !0,
                                    elements: [e]
                                })) : i && i.src && (e.src = i.src)
                            },
                            S = function(t, e) {
                                return (getComputedStyle(t, null) || {})[e]
                            },
                            C = function(t, e, i) {
                                for (i = i || t.offsetWidth; i < r.minSize && e && !t._lazysizesWidth;) i = e.offsetWidth, e = e.parentNode;
                                return i
                            },
                            k = (_t = [], yt = [], xt = _t, bt = function() {
                                var t = xt;
                                for (xt = _t.length ? yt : _t, mt = !0, vt = !1; t.length;) t.shift()();
                                mt = !1
                            }, wt = function(t, i) {
                                mt && !i ? t.apply(this, arguments) : (xt.push(t), vt || (vt = !0, (e.hidden ? c : u)(bt)))
                            }, wt._lsFlush = bt, wt),
                            A = function(t, e) {
                                return e ? function() {
                                    k(t)
                                } : function() {
                                    var e = this,
                                        i = arguments;
                                    k((function() {
                                        t.apply(e, i)
                                    }))
                                }
                            },
                            P = function(t) {
                                var e, n = 0,
                                    s = r.throttleDelay,
                                    a = r.ricTimeout,
                                    o = function() {
                                        e = !1, n = i.now(), t()
                                    },
                                    h = d && a > 49 ? function() {
                                        d(o, {
                                            timeout: a
                                        }), a !== r.ricTimeout && (a = r.ricTimeout)
                                    } : A((function() {
                                        c(o)
                                    }), !0);
                                return function(t) {
                                    var r;
                                    (t = !0 === t) && (a = 33), e || (e = !0, (r = s - (i.now() - n)) < 0 && (r = 0), t || r < 9 ? h() : c(h, r))
                                }
                            },
                            M = function(t) {
                                var e, n, r = 99,
                                    s = function() {
                                        e = null, t()
                                    },
                                    a = function() {
                                        var t = i.now() - n;
                                        t < r ? c(a, r - t) : (d || s)(s)
                                    };
                                return function() {
                                    n = i.now(), e || (e = c(a, r))
                                }
                            },
                            T = (G = /^img$/i, Z = /^iframe$/i, Q = "onscroll" in t && !/(gle|ing)bot/.test(navigator.userAgent), $ = 0, K = 0, J = 0, tt = -1, et = function(t) {
                                J--, (!t || J < 0 || !t.target) && (J = 0)
                            }, it = function(t) {
                                return null == X && (X = "hidden" == S(e.body, "visibility")), X || !("hidden" == S(t.parentNode, "visibility") && "hidden" == S(t, "visibility"))
                            }, nt = function(t, i) {
                                var n, r = t,
                                    a = it(t);
                                for (H -= i, Y += i, W -= i, U += i; a && (r = r.offsetParent) && r != e.body && r != s;)(a = (S(r, "opacity") || 1) > 0) && "visible" != S(r, "overflow") && (n = r.getBoundingClientRect(), a = U > n.left && W < n.right && Y > n.top - 1 && H < n.bottom + 1);
                                return a
                            }, rt = function() {
                                var t, i, a, o, l, c, u, d, p, f, g, m, v = n.elements;
                                if ((V = r.loadMode) && J < 8 && (t = v.length)) {
                                    for (i = 0, tt++; i < t; i++)
                                        if (v[i] && !v[i]._lazyRace)
                                            if (!Q || n.prematureUnveil && n.prematureUnveil(v[i])) dt(v[i]);
                                            else if ((d = v[i][h]("data-expand")) && (c = 1 * d) || (c = K), f || (f = !r.expand || r.expand < 1 ? s.clientHeight > 500 && s.clientWidth > 500 ? 500 : 370 : r.expand, n._defEx = f, g = f * r.expFactor, m = r.hFac, X = null, K < g && J < 1 && tt > 2 && V > 2 && !e.hidden ? (K = g, tt = 0) : K = V > 1 && tt > 1 && J < 6 ? f : $), p !== c && (j = innerWidth + c * m, q = innerHeight + c, u = -1 * c, p = c), a = v[i].getBoundingClientRect(), (Y = a.bottom) >= u && (H = a.top) <= q && (U = a.right) >= u * m && (W = a.left) <= j && (Y || U || W || H) && (r.loadHidden || it(v[i])) && (z && J < 3 && !d && (V < 3 || tt < 4) || nt(v[i], c))) {
                                        if (dt(v[i]), l = !0, J > 9) break
                                    } else !l && z && !o && J < 4 && tt < 4 && V > 2 && (R[0] || r.preloadAfterLoad) && (R[0] || !d && (Y || U || W || H || "auto" != v[i][h](r.sizesAttr))) && (o = R[0] || v[i]);
                                    o && !l && dt(o)
                                }
                            }, st = P(rt), at = function(t) {
                                var e = t.target;
                                e._lazyCache ? delete e._lazyCache : (et(t), _(e, r.loadedClass), y(e, r.loadingClass), x(e, ht), b(e, "lazyloaded"))
                            }, ot = A(at), ht = function(t) {
                                ot({
                                    target: t.target
                                })
                            }, lt = function(t, e) {
                                var i = t.getAttribute("data-load-mode") || r.iframeLoadMode;
                                0 == i ? t.contentWindow.location.replace(e) : 1 == i && (t.src = e)
                            }, ct = function(t) {
                                var e, i = t[h](r.srcsetAttr);
                                (e = r.customMedia[t[h]("data-media") || t[h]("media")]) && t.setAttribute("media", e), i && t.setAttribute("srcset", i)
                            }, ut = A((function(t, e, i, n, s) {
                                var a, o, l, u, d, f;
                                (d = b(t, "lazybeforeunveil", e)).defaultPrevented || (n && (i ? _(t, r.autosizesClass) : t.setAttribute("sizes", n)), o = t[h](r.srcsetAttr), a = t[h](r.srcAttr), s && (u = (l = t.parentNode) && p.test(l.nodeName || "")), f = e.firesLoad || "src" in t && (o || a || u), d = {
                                    target: t
                                }, _(t, r.loadingClass), f && (clearTimeout(N), N = c(et, 2500), x(t, ht, !0)), u && m.call(l.getElementsByTagName("source"), ct), o ? t.setAttribute("srcset", o) : a && !u && (Z.test(t.nodeName) ? lt(t, a) : t.src = a), s && (o || u) && w(t, {
                                    src: a
                                })), t._lazyRace && delete t._lazyRace, y(t, r.lazyClass), k((function() {
                                    var e = t.complete && t.naturalWidth > 1;
                                    f && !e || (e && _(t, r.fastLoadedClass), at(d), t._lazyCache = !0, c((function() {
                                        "_lazyCache" in t && delete t._lazyCache
                                    }), 9)), "lazy" == t.loading && J--
                                }), !0)
                            })), dt = function(t) {
                                if (!t._lazyRace) {
                                    var e, i = G.test(t.nodeName),
                                        n = i && (t[h](r.sizesAttr) || t[h]("sizes")),
                                        s = "auto" == n;
                                    (!s && z || !i || !t[h]("src") && !t.srcset || t.complete || v(t, r.errorClass) || !v(t, r.lazyClass)) && (e = b(t, "lazyunveilread").detail, s && E.updateElem(t, !0, t.offsetWidth), t._lazyRace = !0, J++, ut(t, e, s, n, i))
                                }
                            }, pt = M((function() {
                                r.loadMode = 3, st()
                            })), ft = function() {
                                3 == r.loadMode && (r.loadMode = 2), pt()
                            }, gt = function() {
                                z || (i.now() - F < 999 ? c(gt, 999) : (z = !0, r.loadMode = 3, st(), l("scroll", ft, !0)))
                            }, {
                                _: function() {
                                    F = i.now(), n.elements = e.getElementsByClassName(r.lazyClass), R = e.getElementsByClassName(r.lazyClass + " " + r.preloadClass), l("scroll", st, !0), l("resize", st, !0), l("pageshow", (function(t) {
                                        if (t.persisted) {
                                            var i = e.querySelectorAll("." + r.loadingClass);
                                            i.length && i.forEach && u((function() {
                                                i.forEach((function(t) {
                                                    t.complete && dt(t)
                                                }))
                                            }))
                                        }
                                    })), t.MutationObserver ? new MutationObserver(st).observe(s, {
                                        childList: !0,
                                        subtree: !0,
                                        attributes: !0
                                    }) : (s[o]("DOMNodeInserted", st, !0), s[o]("DOMAttrModified", st, !0), setInterval(st, 999)), l("hashchange", st, !0), ["focus", "mouseover", "click", "load", "transitionend", "animationend"].forEach((function(t) {
                                        e[o](t, st, !0)
                                    })), /d$|^c/.test(e.readyState) ? gt() : (l("load", gt), e[o]("DOMContentLoaded", st), c(gt, 2e4)), n.elements.length ? (rt(), k._lsFlush()) : st()
                                },
                                checkElems: st,
                                unveil: dt,
                                _aLSL: ft
                            }),
                            E = (L = A((function(t, e, i, n) {
                                var r, s, a;
                                if (t._lazysizesWidth = n, n += "px", t.setAttribute("sizes", n), p.test(e.nodeName || ""))
                                    for (s = 0, a = (r = e.getElementsByTagName("source")).length; s < a; s++) r[s].setAttribute("sizes", n);
                                i.detail.dataAttr || w(t, i.detail)
                            })), D = function(t, e, i) {
                                var n, r = t.parentNode;
                                r && (i = C(t, r, i), (n = b(t, "lazybeforesizes", {
                                    width: i,
                                    dataAttr: !!e
                                })).defaultPrevented || (i = n.detail.width) && i !== t._lazysizesWidth && L(t, r, n, i))
                            }, B = M((function() {
                                var t, e = O.length;
                                if (e)
                                    for (t = 0; t < e; t++) D(O[t])
                            })), {
                                _: function() {
                                    O = e.getElementsByClassName(r.autosizesClass), l("resize", B)
                                },
                                checkElems: B,
                                updateElem: D
                            }),
                            I = function() {
                                !I.i && e.getElementsByClassName && (I.i = !0, E._(), T._())
                            };
                        var O, L, D, B;
                        var R, z, N, V, F, j, q, H, W, U, Y, X, G, Z, Q, $, K, J, tt, et, it, nt, rt, st, at, ot, ht, lt, ct, ut, dt, pt, ft, gt;
                        var mt, vt, _t, yt, xt, bt, wt;
                        return c((function() {
                            r.init && I()
                        })), n = {
                            cfg: r,
                            autoSizer: E,
                            loader: T,
                            init: I,
                            uP: w,
                            aC: _,
                            rC: y,
                            hC: v,
                            fire: b,
                            gW: C,
                            rAF: k
                        }
                    }(e, e.document, Date);
                    e.lazySizes = n, t.exports && (t.exports = n)
                }("undefined" != typeof window ? window : {})
            },
            770: (t, e, i) => {
                var n, r, s;
                ! function(a, o) {
                    if (a) {
                        o = o.bind(null, a, a.document), t.exports ? o(i(90)) : (r = [i(90)], void 0 === (s = "function" == typeof(n = o) ? n.apply(e, r) : n) || (t.exports = s))
                    }
                }("undefined" != typeof window ? window : 0, (function(t, e, i) {
                    "use strict";
                    if (t.addEventListener) {
                        var n = /\s+(\d+)(w|h)\s+(\d+)(w|h)/,
                            r = /parent-fit["']*\s*:\s*["']*(contain|cover|width)/,
                            s = /parent-container["']*\s*:\s*["']*(.+?)(?=(\s|$|,|'|"|;))/,
                            a = /^picture$/i,
                            o = i.cfg,
                            h = {
                                getParent: function(e, i) {
                                    var n = e,
                                        r = e.parentNode;
                                    return i && "prev" != i || !r || !a.test(r.nodeName || "") || (r = r.parentNode), "self" != i && (n = "prev" == i ? e.previousElementSibling : i && (r.closest || t.jQuery) && (r.closest ? r.closest(i) : jQuery(r).closest(i)[0]) || r), n
                                },
                                getFit: function(t) {
                                    var e, i, n = getComputedStyle(t, null) || {},
                                        a = n.content || n.fontFamily,
                                        o = {
                                            fit: t._lazysizesParentFit || t.getAttribute("data-parent-fit")
                                        };
                                    return !o.fit && a && (e = a.match(r)) && (o.fit = e[1]), o.fit ? (!(i = t._lazysizesParentContainer || t.getAttribute("data-parent-container")) && a && (e = a.match(s)) && (i = e[1]), o.parent = h.getParent(t, i)) : o.fit = n.objectFit, o
                                },
                                getImageRatio: function(e) {
                                    var i, r, s, h, l, c, u, d = e.parentNode,
                                        p = d && a.test(d.nodeName || "") ? d.querySelectorAll("source, img") : [e];
                                    for (i = 0; i < p.length; i++)
                                        if (r = (e = p[i]).getAttribute(o.srcsetAttr) || e.getAttribute("srcset") || e.getAttribute("data-pfsrcset") || e.getAttribute("data-risrcset") || "", s = e._lsMedia || e.getAttribute("media"), s = o.customMedia[e.getAttribute("data-media") || s] || s, r && (!s || (t.matchMedia && matchMedia(s) || {}).matches)) {
                                            (h = parseFloat(e.getAttribute("data-aspectratio"))) || ((l = r.match(n)) ? "w" == l[2] ? (c = l[1], u = l[3]) : (c = l[3], u = l[1]) : (c = e.getAttribute("width"), u = e.getAttribute("height")), h = c / u);
                                            break
                                        }
                                    return h
                                },
                                calculateSize: function(t, e) {
                                    var i, n, r, s = this.getFit(t),
                                        a = s.fit,
                                        o = s.parent;
                                    return "width" == a || ("contain" == a || "cover" == a) && (n = this.getImageRatio(t)) ? (o ? e = o.clientWidth : o = t, r = e, "width" == a ? r = e : (i = e / o.clientHeight) && ("cover" == a && i < n || "contain" == a && i > n) && (r = e * (n / i)), r) : e
                                }
                            };
                        i.parentFit = h, e.addEventListener("lazybeforesizes", (function(t) {
                            if (!t.defaultPrevented && t.detail.instance == i) {
                                var e = t.target;
                                t.detail.width = h.calculateSize(e, t.detail.width)
                            }
                        }))
                    }
                }))
            },
            842: function(t, e, i) {
                /*!
                 * matter-js 0.17.1 by @liabru
                 * http://brm.io/matter-js/
                 * License MIT
                 * 
                 * The MIT License (MIT)
                 * 
                 * Copyright (c) Liam Brummitt and contributors.
                 * 
                 * Permission is hereby granted, free of charge, to any person obtaining a copy
                 * of this software and associated documentation files (the "Software"), to deal
                 * in the Software without restriction, including without limitation the rights
                 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                 * copies of the Software, and to permit persons to whom the Software is
                 * furnished to do so, subject to the following conditions:
                 * 
                 * The above copyright notice and this permission notice shall be included in
                 * all copies or substantial portions of the Software.
                 * 
                 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
                 * THE SOFTWARE.
                 */
                var n;
                n = function() {
                    return function(t) {
                        var e = {};

                        function i(n) {
                            if (e[n]) return e[n].exports;
                            var r = e[n] = {
                                i: n,
                                l: !1,
                                exports: {}
                            };
                            return t[n].call(r.exports, r, r.exports, i), r.l = !0, r.exports
                        }
                        return i.m = t, i.c = e, i.d = function(t, e, n) {
                            i.o(t, e) || Object.defineProperty(t, e, {
                                enumerable: !0,
                                get: n
                            })
                        }, i.r = function(t) {
                            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                                value: "Module"
                            }), Object.defineProperty(t, "__esModule", {
                                value: !0
                            })
                        }, i.t = function(t, e) {
                            if (1 & e && (t = i(t)), 8 & e) return t;
                            if (4 & e && "object" == typeof t && t && t.__esModule) return t;
                            var n = Object.create(null);
                            if (i.r(n), Object.defineProperty(n, "default", {
                                    enumerable: !0,
                                    value: t
                                }), 2 & e && "string" != typeof t)
                                for (var r in t) i.d(n, r, function(e) {
                                    return t[e]
                                }.bind(null, r));
                            return n
                        }, i.n = function(t) {
                            var e = t && t.__esModule ? function() {
                                return t.default
                            } : function() {
                                return t
                            };
                            return i.d(e, "a", e), e
                        }, i.o = function(t, e) {
                            return Object.prototype.hasOwnProperty.call(t, e)
                        }, i.p = "", i(i.s = 22)
                    }([function(t, e) {
                        var n = {};
                        t.exports = n,
                            function() {
                                n._nextId = 0, n._seed = 0, n._nowStartTime = +new Date, n._warnedOnce = {}, n._decomp = null, n.extend = function(t, e) {
                                    var i, r;
                                    "boolean" == typeof e ? (i = 2, r = e) : (i = 1, r = !0);
                                    for (var s = i; s < arguments.length; s++) {
                                        var a = arguments[s];
                                        if (a)
                                            for (var o in a) r && a[o] && a[o].constructor === Object ? t[o] && t[o].constructor !== Object ? t[o] = a[o] : (t[o] = t[o] || {}, n.extend(t[o], r, a[o])) : t[o] = a[o]
                                    }
                                    return t
                                }, n.clone = function(t, e) {
                                    return n.extend({}, e, t)
                                }, n.keys = function(t) {
                                    if (Object.keys) return Object.keys(t);
                                    var e = [];
                                    for (var i in t) e.push(i);
                                    return e
                                }, n.values = function(t) {
                                    var e = [];
                                    if (Object.keys) {
                                        for (var i = Object.keys(t), n = 0; n < i.length; n++) e.push(t[i[n]]);
                                        return e
                                    }
                                    for (var r in t) e.push(t[r]);
                                    return e
                                }, n.get = function(t, e, i, n) {
                                    e = e.split(".").slice(i, n);
                                    for (var r = 0; r < e.length; r += 1) t = t[e[r]];
                                    return t
                                }, n.set = function(t, e, i, r, s) {
                                    var a = e.split(".").slice(r, s);
                                    return n.get(t, e, 0, -1)[a[a.length - 1]] = i, i
                                }, n.shuffle = function(t) {
                                    for (var e = t.length - 1; e > 0; e--) {
                                        var i = Math.floor(n.random() * (e + 1)),
                                            r = t[e];
                                        t[e] = t[i], t[i] = r
                                    }
                                    return t
                                }, n.choose = function(t) {
                                    return t[Math.floor(n.random() * t.length)]
                                }, n.isElement = function(t) {
                                    return "undefined" != typeof HTMLElement ? t instanceof HTMLElement : !!(t && t.nodeType && t.nodeName)
                                }, n.isArray = function(t) {
                                    return "[object Array]" === Object.prototype.toString.call(t)
                                }, n.isFunction = function(t) {
                                    return "function" == typeof t
                                }, n.isPlainObject = function(t) {
                                    return "object" == typeof t && t.constructor === Object
                                }, n.isString = function(t) {
                                    return "[object String]" === toString.call(t)
                                }, n.clamp = function(t, e, i) {
                                    return t < e ? e : t > i ? i : t
                                }, n.sign = function(t) {
                                    return t < 0 ? -1 : 1
                                }, n.now = function() {
                                    if ("undefined" != typeof window && window.performance) {
                                        if (window.performance.now) return window.performance.now();
                                        if (window.performance.webkitNow) return window.performance.webkitNow()
                                    }
                                    return Date.now ? Date.now() : new Date - n._nowStartTime
                                }, n.random = function(e, i) {
                                    return i = void 0 !== i ? i : 1, (e = void 0 !== e ? e : 0) + t() * (i - e)
                                };
                                var t = function() {
                                    return n._seed = (9301 * n._seed + 49297) % 233280, n._seed / 233280
                                };
                                n.colorToNumber = function(t) {
                                    return 3 == (t = t.replace("#", "")).length && (t = t.charAt(0) + t.charAt(0) + t.charAt(1) + t.charAt(1) + t.charAt(2) + t.charAt(2)), parseInt(t, 16)
                                }, n.logLevel = 1, n.log = function() {
                                    console && n.logLevel > 0 && n.logLevel <= 3 && console.log.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)))
                                }, n.info = function() {
                                    console && n.logLevel > 0 && n.logLevel <= 2 && console.info.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)))
                                }, n.warn = function() {
                                    console && n.logLevel > 0 && n.logLevel <= 3 && console.warn.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)))
                                }, n.warnOnce = function() {
                                    var t = Array.prototype.slice.call(arguments).join(" ");
                                    n._warnedOnce[t] || (n.warn(t), n._warnedOnce[t] = !0)
                                }, n.deprecated = function(t, e, i) {
                                    t[e] = n.chain((function() {
                                        n.warnOnce("🔅 deprecated 🔅", i)
                                    }), t[e])
                                }, n.nextId = function() {
                                    return n._nextId++
                                }, n.indexOf = function(t, e) {
                                    if (t.indexOf) return t.indexOf(e);
                                    for (var i = 0; i < t.length; i++)
                                        if (t[i] === e) return i;
                                    return -1
                                }, n.map = function(t, e) {
                                    if (t.map) return t.map(e);
                                    for (var i = [], n = 0; n < t.length; n += 1) i.push(e(t[n]));
                                    return i
                                }, n.topologicalSort = function(t) {
                                    var e = [],
                                        i = [],
                                        r = [];
                                    for (var s in t) i[s] || r[s] || n._topologicalSort(s, i, r, t, e);
                                    return e
                                }, n._topologicalSort = function(t, e, i, r, s) {
                                    var a = r[t] || [];
                                    i[t] = !0;
                                    for (var o = 0; o < a.length; o += 1) {
                                        var h = a[o];
                                        i[h] || e[h] || n._topologicalSort(h, e, i, r, s)
                                    }
                                    i[t] = !1, e[t] = !0, s.push(t)
                                }, n.chain = function() {
                                    for (var t = [], e = 0; e < arguments.length; e += 1) {
                                        var i = arguments[e];
                                        i._chained ? t.push.apply(t, i._chained) : t.push(i)
                                    }
                                    var n = function() {
                                        for (var e, i = new Array(arguments.length), n = 0, r = arguments.length; n < r; n++) i[n] = arguments[n];
                                        for (n = 0; n < t.length; n += 1) {
                                            var s = t[n].apply(e, i);
                                            void 0 !== s && (e = s)
                                        }
                                        return e
                                    };
                                    return n._chained = t, n
                                }, n.chainPathBefore = function(t, e, i) {
                                    return n.set(t, e, n.chain(i, n.get(t, e)))
                                }, n.chainPathAfter = function(t, e, i) {
                                    return n.set(t, e, n.chain(n.get(t, e), i))
                                }, n.setDecomp = function(t) {
                                    n._decomp = t
                                }, n.getDecomp = function() {
                                    var t = n._decomp;
                                    try {
                                        t || "undefined" == typeof window || (t = window.decomp), t || void 0 === i.g || (t = i.g.decomp)
                                    } catch (e) {
                                        t = null
                                    }
                                    return t
                                }
                            }()
                    }, function(t, e) {
                        var i = {};
                        t.exports = i, i.create = function(t) {
                            var e = {
                                min: {
                                    x: 0,
                                    y: 0
                                },
                                max: {
                                    x: 0,
                                    y: 0
                                }
                            };
                            return t && i.update(e, t), e
                        }, i.update = function(t, e, i) {
                            t.min.x = 1 / 0, t.max.x = -1 / 0, t.min.y = 1 / 0, t.max.y = -1 / 0;
                            for (var n = 0; n < e.length; n++) {
                                var r = e[n];
                                r.x > t.max.x && (t.max.x = r.x), r.x < t.min.x && (t.min.x = r.x), r.y > t.max.y && (t.max.y = r.y), r.y < t.min.y && (t.min.y = r.y)
                            }
                            i && (i.x > 0 ? t.max.x += i.x : t.min.x += i.x, i.y > 0 ? t.max.y += i.y : t.min.y += i.y)
                        }, i.contains = function(t, e) {
                            return e.x >= t.min.x && e.x <= t.max.x && e.y >= t.min.y && e.y <= t.max.y
                        }, i.overlaps = function(t, e) {
                            return t.min.x <= e.max.x && t.max.x >= e.min.x && t.max.y >= e.min.y && t.min.y <= e.max.y
                        }, i.translate = function(t, e) {
                            t.min.x += e.x, t.max.x += e.x, t.min.y += e.y, t.max.y += e.y
                        }, i.shift = function(t, e) {
                            var i = t.max.x - t.min.x,
                                n = t.max.y - t.min.y;
                            t.min.x = e.x, t.max.x = e.x + i, t.min.y = e.y, t.max.y = e.y + n
                        }
                    }, function(t, e) {
                        var i = {};
                        t.exports = i, i.create = function(t, e) {
                            return {
                                x: t || 0,
                                y: e || 0
                            }
                        }, i.clone = function(t) {
                            return {
                                x: t.x,
                                y: t.y
                            }
                        }, i.magnitude = function(t) {
                            return Math.sqrt(t.x * t.x + t.y * t.y)
                        }, i.magnitudeSquared = function(t) {
                            return t.x * t.x + t.y * t.y
                        }, i.rotate = function(t, e, i) {
                            var n = Math.cos(e),
                                r = Math.sin(e);
                            i || (i = {});
                            var s = t.x * n - t.y * r;
                            return i.y = t.x * r + t.y * n, i.x = s, i
                        }, i.rotateAbout = function(t, e, i, n) {
                            var r = Math.cos(e),
                                s = Math.sin(e);
                            n || (n = {});
                            var a = i.x + ((t.x - i.x) * r - (t.y - i.y) * s);
                            return n.y = i.y + ((t.x - i.x) * s + (t.y - i.y) * r), n.x = a, n
                        }, i.normalise = function(t) {
                            var e = i.magnitude(t);
                            return 0 === e ? {
                                x: 0,
                                y: 0
                            } : {
                                x: t.x / e,
                                y: t.y / e
                            }
                        }, i.dot = function(t, e) {
                            return t.x * e.x + t.y * e.y
                        }, i.cross = function(t, e) {
                            return t.x * e.y - t.y * e.x
                        }, i.cross3 = function(t, e, i) {
                            return (e.x - t.x) * (i.y - t.y) - (e.y - t.y) * (i.x - t.x)
                        }, i.add = function(t, e, i) {
                            return i || (i = {}), i.x = t.x + e.x, i.y = t.y + e.y, i
                        }, i.sub = function(t, e, i) {
                            return i || (i = {}), i.x = t.x - e.x, i.y = t.y - e.y, i
                        }, i.mult = function(t, e) {
                            return {
                                x: t.x * e,
                                y: t.y * e
                            }
                        }, i.div = function(t, e) {
                            return {
                                x: t.x / e,
                                y: t.y / e
                            }
                        }, i.perp = function(t, e) {
                            return {
                                x: (e = !0 === e ? -1 : 1) * -t.y,
                                y: e * t.x
                            }
                        }, i.neg = function(t) {
                            return {
                                x: -t.x,
                                y: -t.y
                            }
                        }, i.angle = function(t, e) {
                            return Math.atan2(e.y - t.y, e.x - t.x)
                        }, i._temp = [i.create(), i.create(), i.create(), i.create(), i.create(), i.create()]
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(2),
                            s = i(0);
                        n.create = function(t, e) {
                            for (var i = [], n = 0; n < t.length; n++) {
                                var r = t[n],
                                    s = {
                                        x: r.x,
                                        y: r.y,
                                        index: n,
                                        body: e,
                                        isInternal: !1
                                    };
                                i.push(s)
                            }
                            return i
                        }, n.fromPath = function(t, e) {
                            var i = [];
                            return t.replace(/L?\s*([-\d.e]+)[\s,]*([-\d.e]+)*/gi, (function(t, e, n) {
                                i.push({
                                    x: parseFloat(e),
                                    y: parseFloat(n)
                                })
                            })), n.create(i, e)
                        }, n.centre = function(t) {
                            for (var e, i, s, a = n.area(t, !0), o = {
                                    x: 0,
                                    y: 0
                                }, h = 0; h < t.length; h++) s = (h + 1) % t.length, e = r.cross(t[h], t[s]), i = r.mult(r.add(t[h], t[s]), e), o = r.add(o, i);
                            return r.div(o, 6 * a)
                        }, n.mean = function(t) {
                            for (var e = {
                                    x: 0,
                                    y: 0
                                }, i = 0; i < t.length; i++) e.x += t[i].x, e.y += t[i].y;
                            return r.div(e, t.length)
                        }, n.area = function(t, e) {
                            for (var i = 0, n = t.length - 1, r = 0; r < t.length; r++) i += (t[n].x - t[r].x) * (t[n].y + t[r].y), n = r;
                            return e ? i / 2 : Math.abs(i) / 2
                        }, n.inertia = function(t, e) {
                            for (var i, n, s = 0, a = 0, o = t, h = 0; h < o.length; h++) n = (h + 1) % o.length, s += (i = Math.abs(r.cross(o[n], o[h]))) * (r.dot(o[n], o[n]) + r.dot(o[n], o[h]) + r.dot(o[h], o[h])), a += i;
                            return e / 6 * (s / a)
                        }, n.translate = function(t, e, i) {
                            var n;
                            if (i)
                                for (n = 0; n < t.length; n++) t[n].x += e.x * i, t[n].y += e.y * i;
                            else
                                for (n = 0; n < t.length; n++) t[n].x += e.x, t[n].y += e.y;
                            return t
                        }, n.rotate = function(t, e, i) {
                            if (0 !== e) {
                                for (var n = Math.cos(e), r = Math.sin(e), s = 0; s < t.length; s++) {
                                    var a = t[s],
                                        o = a.x - i.x,
                                        h = a.y - i.y;
                                    a.x = i.x + (o * n - h * r), a.y = i.y + (o * r + h * n)
                                }
                                return t
                            }
                        }, n.contains = function(t, e) {
                            for (var i = 0; i < t.length; i++) {
                                var n = t[i],
                                    r = t[(i + 1) % t.length];
                                if ((e.x - n.x) * (r.y - n.y) + (e.y - n.y) * (n.x - r.x) > 0) return !1
                            }
                            return !0
                        }, n.scale = function(t, e, i, s) {
                            if (1 === e && 1 === i) return t;
                            var a, o;
                            s = s || n.centre(t);
                            for (var h = 0; h < t.length; h++) a = t[h], o = r.sub(a, s), t[h].x = s.x + o.x * e, t[h].y = s.y + o.y * i;
                            return t
                        }, n.chamfer = function(t, e, i, n, a) {
                            e = "number" == typeof e ? [e] : e || [8], i = void 0 !== i ? i : -1, n = n || 2, a = a || 14;
                            for (var o = [], h = 0; h < t.length; h++) {
                                var l = t[h - 1 >= 0 ? h - 1 : t.length - 1],
                                    c = t[h],
                                    u = t[(h + 1) % t.length],
                                    d = e[h < e.length ? h : e.length - 1];
                                if (0 !== d) {
                                    var p = r.normalise({
                                            x: c.y - l.y,
                                            y: l.x - c.x
                                        }),
                                        f = r.normalise({
                                            x: u.y - c.y,
                                            y: c.x - u.x
                                        }),
                                        g = Math.sqrt(2 * Math.pow(d, 2)),
                                        m = r.mult(s.clone(p), d),
                                        v = r.normalise(r.mult(r.add(p, f), .5)),
                                        _ = r.sub(c, r.mult(v, g)),
                                        y = i; - 1 === i && (y = 1.75 * Math.pow(d, .32)), (y = s.clamp(y, n, a)) % 2 == 1 && (y += 1);
                                    for (var x = Math.acos(r.dot(p, f)) / y, b = 0; b < y; b++) o.push(r.add(r.rotate(m, x * b), _))
                                } else o.push(c)
                            }
                            return o
                        }, n.clockwiseSort = function(t) {
                            var e = n.mean(t);
                            return t.sort((function(t, i) {
                                return r.angle(e, t) - r.angle(e, i)
                            })), t
                        }, n.isConvex = function(t) {
                            var e, i, n, r, s = 0,
                                a = t.length;
                            if (a < 3) return null;
                            for (e = 0; e < a; e++)
                                if (n = (e + 2) % a, r = (t[i = (e + 1) % a].x - t[e].x) * (t[n].y - t[i].y), (r -= (t[i].y - t[e].y) * (t[n].x - t[i].x)) < 0 ? s |= 1 : r > 0 && (s |= 2), 3 === s) return !1;
                            return 0 !== s || null
                        }, n.hull = function(t) {
                            var e, i, n = [],
                                s = [];
                            for ((t = t.slice(0)).sort((function(t, e) {
                                    var i = t.x - e.x;
                                    return 0 !== i ? i : t.y - e.y
                                })), i = 0; i < t.length; i += 1) {
                                for (e = t[i]; s.length >= 2 && r.cross3(s[s.length - 2], s[s.length - 1], e) <= 0;) s.pop();
                                s.push(e)
                            }
                            for (i = t.length - 1; i >= 0; i -= 1) {
                                for (e = t[i]; n.length >= 2 && r.cross3(n[n.length - 2], n[n.length - 1], e) <= 0;) n.pop();
                                n.push(e)
                            }
                            return n.pop(), s.pop(), n.concat(s)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(0);
                        n.on = function(t, e, i) {
                            for (var n, r = e.split(" "), s = 0; s < r.length; s++) n = r[s], t.events = t.events || {}, t.events[n] = t.events[n] || [], t.events[n].push(i);
                            return i
                        }, n.off = function(t, e, i) {
                            if (e) {
                                "function" == typeof e && (i = e, e = r.keys(t.events).join(" "));
                                for (var n = e.split(" "), s = 0; s < n.length; s++) {
                                    var a = t.events[n[s]],
                                        o = [];
                                    if (i && a)
                                        for (var h = 0; h < a.length; h++) a[h] !== i && o.push(a[h]);
                                    t.events[n[s]] = o
                                }
                            } else t.events = {}
                        }, n.trigger = function(t, e, i) {
                            var n, s, a, o, h = t.events;
                            if (h && r.keys(h).length > 0) {
                                i || (i = {}), n = e.split(" ");
                                for (var l = 0; l < n.length; l++)
                                    if (a = h[s = n[l]]) {
                                        (o = r.clone(i, !1)).name = s, o.source = t;
                                        for (var c = 0; c < a.length; c++) a[c].apply(t, [o])
                                    }
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(4),
                            s = i(0),
                            a = i(1),
                            o = i(6);
                        n.create = function(t) {
                            return s.extend({
                                id: s.nextId(),
                                type: "composite",
                                parent: null,
                                isModified: !1,
                                bodies: [],
                                constraints: [],
                                composites: [],
                                label: "Composite",
                                plugin: {}
                            }, t)
                        }, n.setModified = function(t, e, i, r) {
                            if (t.isModified = e, i && t.parent && n.setModified(t.parent, e, i, r), r)
                                for (var s = 0; s < t.composites.length; s++) {
                                    var a = t.composites[s];
                                    n.setModified(a, e, i, r)
                                }
                        }, n.add = function(t, e) {
                            var i = [].concat(e);
                            r.trigger(t, "beforeAdd", {
                                object: e
                            });
                            for (var a = 0; a < i.length; a++) {
                                var o = i[a];
                                switch (o.type) {
                                    case "body":
                                        if (o.parent !== o) {
                                            s.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");
                                            break
                                        }
                                        n.addBody(t, o);
                                        break;
                                    case "constraint":
                                        n.addConstraint(t, o);
                                        break;
                                    case "composite":
                                        n.addComposite(t, o);
                                        break;
                                    case "mouseConstraint":
                                        n.addConstraint(t, o.constraint)
                                }
                            }
                            return r.trigger(t, "afterAdd", {
                                object: e
                            }), t
                        }, n.remove = function(t, e, i) {
                            var s = [].concat(e);
                            r.trigger(t, "beforeRemove", {
                                object: e
                            });
                            for (var a = 0; a < s.length; a++) {
                                var o = s[a];
                                switch (o.type) {
                                    case "body":
                                        n.removeBody(t, o, i);
                                        break;
                                    case "constraint":
                                        n.removeConstraint(t, o, i);
                                        break;
                                    case "composite":
                                        n.removeComposite(t, o, i);
                                        break;
                                    case "mouseConstraint":
                                        n.removeConstraint(t, o.constraint)
                                }
                            }
                            return r.trigger(t, "afterRemove", {
                                object: e
                            }), t
                        }, n.addComposite = function(t, e) {
                            return t.composites.push(e), e.parent = t, n.setModified(t, !0, !0, !1), t
                        }, n.removeComposite = function(t, e, i) {
                            var r = s.indexOf(t.composites, e);
                            if (-1 !== r && (n.removeCompositeAt(t, r), n.setModified(t, !0, !0, !1)), i)
                                for (var a = 0; a < t.composites.length; a++) n.removeComposite(t.composites[a], e, !0);
                            return t
                        }, n.removeCompositeAt = function(t, e) {
                            return t.composites.splice(e, 1), n.setModified(t, !0, !0, !1), t
                        }, n.addBody = function(t, e) {
                            return t.bodies.push(e), n.setModified(t, !0, !0, !1), t
                        }, n.removeBody = function(t, e, i) {
                            var r = s.indexOf(t.bodies, e);
                            if (-1 !== r && (n.removeBodyAt(t, r), n.setModified(t, !0, !0, !1)), i)
                                for (var a = 0; a < t.composites.length; a++) n.removeBody(t.composites[a], e, !0);
                            return t
                        }, n.removeBodyAt = function(t, e) {
                            return t.bodies.splice(e, 1), n.setModified(t, !0, !0, !1), t
                        }, n.addConstraint = function(t, e) {
                            return t.constraints.push(e), n.setModified(t, !0, !0, !1), t
                        }, n.removeConstraint = function(t, e, i) {
                            var r = s.indexOf(t.constraints, e);
                            if (-1 !== r && n.removeConstraintAt(t, r), i)
                                for (var a = 0; a < t.composites.length; a++) n.removeConstraint(t.composites[a], e, !0);
                            return t
                        }, n.removeConstraintAt = function(t, e) {
                            return t.constraints.splice(e, 1), n.setModified(t, !0, !0, !1), t
                        }, n.clear = function(t, e, i) {
                            if (i)
                                for (var r = 0; r < t.composites.length; r++) n.clear(t.composites[r], e, !0);
                            return e ? t.bodies = t.bodies.filter((function(t) {
                                return t.isStatic
                            })) : t.bodies.length = 0, t.constraints.length = 0, t.composites.length = 0, n.setModified(t, !0, !0, !1), t
                        }, n.allBodies = function(t) {
                            for (var e = [].concat(t.bodies), i = 0; i < t.composites.length; i++) e = e.concat(n.allBodies(t.composites[i]));
                            return e
                        }, n.allConstraints = function(t) {
                            for (var e = [].concat(t.constraints), i = 0; i < t.composites.length; i++) e = e.concat(n.allConstraints(t.composites[i]));
                            return e
                        }, n.allComposites = function(t) {
                            for (var e = [].concat(t.composites), i = 0; i < t.composites.length; i++) e = e.concat(n.allComposites(t.composites[i]));
                            return e
                        }, n.get = function(t, e, i) {
                            var r, s;
                            switch (i) {
                                case "body":
                                    r = n.allBodies(t);
                                    break;
                                case "constraint":
                                    r = n.allConstraints(t);
                                    break;
                                case "composite":
                                    r = n.allComposites(t).concat(t)
                            }
                            return r ? 0 === (s = r.filter((function(t) {
                                return t.id.toString() === e.toString()
                            }))).length ? null : s[0] : null
                        }, n.move = function(t, e, i) {
                            return n.remove(t, e), n.add(i, e), t
                        }, n.rebase = function(t) {
                            for (var e = n.allBodies(t).concat(n.allConstraints(t)).concat(n.allComposites(t)), i = 0; i < e.length; i++) e[i].id = s.nextId();
                            return n.setModified(t, !0, !0, !1), t
                        }, n.translate = function(t, e, i) {
                            for (var r = i ? n.allBodies(t) : t.bodies, s = 0; s < r.length; s++) o.translate(r[s], e);
                            return n.setModified(t, !0, !0, !1), t
                        }, n.rotate = function(t, e, i, r) {
                            for (var s = Math.cos(e), a = Math.sin(e), h = r ? n.allBodies(t) : t.bodies, l = 0; l < h.length; l++) {
                                var c = h[l],
                                    u = c.position.x - i.x,
                                    d = c.position.y - i.y;
                                o.setPosition(c, {
                                    x: i.x + (u * s - d * a),
                                    y: i.y + (u * a + d * s)
                                }), o.rotate(c, e)
                            }
                            return n.setModified(t, !0, !0, !1), t
                        }, n.scale = function(t, e, i, r, s) {
                            for (var a = s ? n.allBodies(t) : t.bodies, h = 0; h < a.length; h++) {
                                var l = a[h],
                                    c = l.position.x - r.x,
                                    u = l.position.y - r.y;
                                o.setPosition(l, {
                                    x: r.x + c * e,
                                    y: r.y + u * i
                                }), o.scale(l, e, i)
                            }
                            return n.setModified(t, !0, !0, !1), t
                        }, n.bounds = function(t) {
                            for (var e = n.allBodies(t), i = [], r = 0; r < e.length; r += 1) {
                                var s = e[r];
                                i.push(s.bounds.min, s.bounds.max)
                            }
                            return a.create(i)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(2),
                            a = i(7),
                            o = (i(16), i(0)),
                            h = i(1),
                            l = i(10);
                        ! function() {
                            n._inertiaScale = 4, n._nextCollidingGroupId = 1, n._nextNonCollidingGroupId = -1, n._nextCategory = 1, n.create = function(e) {
                                var i = {
                                        id: o.nextId(),
                                        type: "body",
                                        label: "Body",
                                        parts: [],
                                        plugin: {},
                                        angle: 0,
                                        vertices: r.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),
                                        position: {
                                            x: 0,
                                            y: 0
                                        },
                                        force: {
                                            x: 0,
                                            y: 0
                                        },
                                        torque: 0,
                                        positionImpulse: {
                                            x: 0,
                                            y: 0
                                        },
                                        constraintImpulse: {
                                            x: 0,
                                            y: 0,
                                            angle: 0
                                        },
                                        totalContacts: 0,
                                        speed: 0,
                                        angularSpeed: 0,
                                        velocity: {
                                            x: 0,
                                            y: 0
                                        },
                                        angularVelocity: 0,
                                        isSensor: !1,
                                        isStatic: !1,
                                        isSleeping: !1,
                                        motion: 0,
                                        sleepThreshold: 60,
                                        density: .001,
                                        restitution: 0,
                                        friction: .1,
                                        frictionStatic: .5,
                                        frictionAir: .01,
                                        collisionFilter: {
                                            category: 1,
                                            mask: 4294967295,
                                            group: 0
                                        },
                                        slop: .05,
                                        timeScale: 1,
                                        render: {
                                            visible: !0,
                                            opacity: 1,
                                            strokeStyle: null,
                                            fillStyle: null,
                                            lineWidth: null,
                                            sprite: {
                                                xScale: 1,
                                                yScale: 1,
                                                xOffset: 0,
                                                yOffset: 0
                                            }
                                        },
                                        events: null,
                                        bounds: null,
                                        chamfer: null,
                                        circleRadius: 0,
                                        positionPrev: null,
                                        anglePrev: 0,
                                        parent: null,
                                        axes: null,
                                        area: 0,
                                        mass: 0,
                                        inertia: 0,
                                        _original: null
                                    },
                                    n = o.extend(i, e);
                                return t(n, e), n
                            }, n.nextGroup = function(t) {
                                return t ? n._nextNonCollidingGroupId-- : n._nextCollidingGroupId++
                            }, n.nextCategory = function() {
                                return n._nextCategory = n._nextCategory << 1, n._nextCategory
                            };
                            var t = function(t, e) {
                                e = e || {}, n.set(t, {
                                    bounds: t.bounds || h.create(t.vertices),
                                    positionPrev: t.positionPrev || s.clone(t.position),
                                    anglePrev: t.anglePrev || t.angle,
                                    vertices: t.vertices,
                                    parts: t.parts || [t],
                                    isStatic: t.isStatic,
                                    isSleeping: t.isSleeping,
                                    parent: t.parent || t
                                }), r.rotate(t.vertices, t.angle, t.position), l.rotate(t.axes, t.angle), h.update(t.bounds, t.vertices, t.velocity), n.set(t, {
                                    axes: e.axes || t.axes,
                                    area: e.area || t.area,
                                    mass: e.mass || t.mass,
                                    inertia: e.inertia || t.inertia
                                });
                                var i = t.isStatic ? "#14151f" : o.choose(["#f19648", "#f5d259", "#f55a3c", "#063e7b", "#ececd1"]),
                                    a = t.isStatic ? "#555" : "#ccc",
                                    c = t.isStatic && null === t.render.fillStyle ? 1 : 0;
                                t.render.fillStyle = t.render.fillStyle || i, t.render.strokeStyle = t.render.strokeStyle || a, t.render.lineWidth = t.render.lineWidth || c, t.render.sprite.xOffset += -(t.bounds.min.x - t.position.x) / (t.bounds.max.x - t.bounds.min.x), t.render.sprite.yOffset += -(t.bounds.min.y - t.position.y) / (t.bounds.max.y - t.bounds.min.y)
                            };
                            n.set = function(t, e, i) {
                                var r;
                                for (r in "string" == typeof e && (r = e, (e = {})[r] = i), e)
                                    if (Object.prototype.hasOwnProperty.call(e, r)) switch (i = e[r], r) {
                                        case "isStatic":
                                            n.setStatic(t, i);
                                            break;
                                        case "isSleeping":
                                            a.set(t, i);
                                            break;
                                        case "mass":
                                            n.setMass(t, i);
                                            break;
                                        case "density":
                                            n.setDensity(t, i);
                                            break;
                                        case "inertia":
                                            n.setInertia(t, i);
                                            break;
                                        case "vertices":
                                            n.setVertices(t, i);
                                            break;
                                        case "position":
                                            n.setPosition(t, i);
                                            break;
                                        case "angle":
                                            n.setAngle(t, i);
                                            break;
                                        case "velocity":
                                            n.setVelocity(t, i);
                                            break;
                                        case "angularVelocity":
                                            n.setAngularVelocity(t, i);
                                            break;
                                        case "parts":
                                            n.setParts(t, i);
                                            break;
                                        case "centre":
                                            n.setCentre(t, i);
                                            break;
                                        default:
                                            t[r] = i
                                    }
                            }, n.setStatic = function(t, e) {
                                for (var i = 0; i < t.parts.length; i++) {
                                    var n = t.parts[i];
                                    n.isStatic = e, e ? (n._original = {
                                        restitution: n.restitution,
                                        friction: n.friction,
                                        mass: n.mass,
                                        inertia: n.inertia,
                                        density: n.density,
                                        inverseMass: n.inverseMass,
                                        inverseInertia: n.inverseInertia
                                    }, n.restitution = 0, n.friction = 1, n.mass = n.inertia = n.density = 1 / 0, n.inverseMass = n.inverseInertia = 0, n.positionPrev.x = n.position.x, n.positionPrev.y = n.position.y, n.anglePrev = n.angle, n.angularVelocity = 0, n.speed = 0, n.angularSpeed = 0, n.motion = 0) : n._original && (n.restitution = n._original.restitution, n.friction = n._original.friction, n.mass = n._original.mass, n.inertia = n._original.inertia, n.density = n._original.density, n.inverseMass = n._original.inverseMass, n.inverseInertia = n._original.inverseInertia, n._original = null)
                                }
                            }, n.setMass = function(t, e) {
                                var i = t.inertia / (t.mass / 6);
                                t.inertia = i * (e / 6), t.inverseInertia = 1 / t.inertia, t.mass = e, t.inverseMass = 1 / t.mass, t.density = t.mass / t.area
                            }, n.setDensity = function(t, e) {
                                n.setMass(t, e * t.area), t.density = e
                            }, n.setInertia = function(t, e) {
                                t.inertia = e, t.inverseInertia = 1 / t.inertia
                            }, n.setVertices = function(t, e) {
                                e[0].body === t ? t.vertices = e : t.vertices = r.create(e, t), t.axes = l.fromVertices(t.vertices), t.area = r.area(t.vertices), n.setMass(t, t.density * t.area);
                                var i = r.centre(t.vertices);
                                r.translate(t.vertices, i, -1), n.setInertia(t, n._inertiaScale * r.inertia(t.vertices, t.mass)), r.translate(t.vertices, t.position), h.update(t.bounds, t.vertices, t.velocity)
                            }, n.setParts = function(t, e, i) {
                                var s;
                                for (e = e.slice(0), t.parts.length = 0, t.parts.push(t), t.parent = t, s = 0; s < e.length; s++) {
                                    var a = e[s];
                                    a !== t && (a.parent = t, t.parts.push(a))
                                }
                                if (1 !== t.parts.length) {
                                    if (i = void 0 === i || i) {
                                        var o = [];
                                        for (s = 0; s < e.length; s++) o = o.concat(e[s].vertices);
                                        r.clockwiseSort(o);
                                        var h = r.hull(o),
                                            l = r.centre(h);
                                        n.setVertices(t, h), r.translate(t.vertices, l)
                                    }
                                    var c = n._totalProperties(t);
                                    t.area = c.area, t.parent = t, t.position.x = c.centre.x, t.position.y = c.centre.y, t.positionPrev.x = c.centre.x, t.positionPrev.y = c.centre.y, n.setMass(t, c.mass), n.setInertia(t, c.inertia), n.setPosition(t, c.centre)
                                }
                            }, n.setCentre = function(t, e, i) {
                                i ? (t.positionPrev.x += e.x, t.positionPrev.y += e.y, t.position.x += e.x, t.position.y += e.y) : (t.positionPrev.x = e.x - (t.position.x - t.positionPrev.x), t.positionPrev.y = e.y - (t.position.y - t.positionPrev.y), t.position.x = e.x, t.position.y = e.y)
                            }, n.setPosition = function(t, e) {
                                var i = s.sub(e, t.position);
                                t.positionPrev.x += i.x, t.positionPrev.y += i.y;
                                for (var n = 0; n < t.parts.length; n++) {
                                    var a = t.parts[n];
                                    a.position.x += i.x, a.position.y += i.y, r.translate(a.vertices, i), h.update(a.bounds, a.vertices, t.velocity)
                                }
                            }, n.setAngle = function(t, e) {
                                var i = e - t.angle;
                                t.anglePrev += i;
                                for (var n = 0; n < t.parts.length; n++) {
                                    var a = t.parts[n];
                                    a.angle += i, r.rotate(a.vertices, i, t.position), l.rotate(a.axes, i), h.update(a.bounds, a.vertices, t.velocity), n > 0 && s.rotateAbout(a.position, i, t.position, a.position)
                                }
                            }, n.setVelocity = function(t, e) {
                                t.positionPrev.x = t.position.x - e.x, t.positionPrev.y = t.position.y - e.y, t.velocity.x = e.x, t.velocity.y = e.y, t.speed = s.magnitude(t.velocity)
                            }, n.setAngularVelocity = function(t, e) {
                                t.anglePrev = t.angle - e, t.angularVelocity = e, t.angularSpeed = Math.abs(t.angularVelocity)
                            }, n.translate = function(t, e) {
                                n.setPosition(t, s.add(t.position, e))
                            }, n.rotate = function(t, e, i) {
                                if (i) {
                                    var r = Math.cos(e),
                                        s = Math.sin(e),
                                        a = t.position.x - i.x,
                                        o = t.position.y - i.y;
                                    n.setPosition(t, {
                                        x: i.x + (a * r - o * s),
                                        y: i.y + (a * s + o * r)
                                    }), n.setAngle(t, t.angle + e)
                                } else n.setAngle(t, t.angle + e)
                            }, n.scale = function(t, e, i, s) {
                                var a = 0,
                                    o = 0;
                                s = s || t.position;
                                for (var c = 0; c < t.parts.length; c++) {
                                    var u = t.parts[c];
                                    r.scale(u.vertices, e, i, s), u.axes = l.fromVertices(u.vertices), u.area = r.area(u.vertices), n.setMass(u, t.density * u.area), r.translate(u.vertices, {
                                        x: -u.position.x,
                                        y: -u.position.y
                                    }), n.setInertia(u, n._inertiaScale * r.inertia(u.vertices, u.mass)), r.translate(u.vertices, {
                                        x: u.position.x,
                                        y: u.position.y
                                    }), c > 0 && (a += u.area, o += u.inertia), u.position.x = s.x + (u.position.x - s.x) * e, u.position.y = s.y + (u.position.y - s.y) * i, h.update(u.bounds, u.vertices, t.velocity)
                                }
                                t.parts.length > 1 && (t.area = a, t.isStatic || (n.setMass(t, t.density * a), n.setInertia(t, o))), t.circleRadius && (e === i ? t.circleRadius *= e : t.circleRadius = null)
                            }, n.update = function(t, e, i, n) {
                                var a = Math.pow(e * i * t.timeScale, 2),
                                    o = 1 - t.frictionAir * i * t.timeScale,
                                    c = t.position.x - t.positionPrev.x,
                                    u = t.position.y - t.positionPrev.y;
                                t.velocity.x = c * o * n + t.force.x / t.mass * a, t.velocity.y = u * o * n + t.force.y / t.mass * a, t.positionPrev.x = t.position.x, t.positionPrev.y = t.position.y, t.position.x += t.velocity.x, t.position.y += t.velocity.y, t.angularVelocity = (t.angle - t.anglePrev) * o * n + t.torque / t.inertia * a, t.anglePrev = t.angle, t.angle += t.angularVelocity, t.speed = s.magnitude(t.velocity), t.angularSpeed = Math.abs(t.angularVelocity);
                                for (var d = 0; d < t.parts.length; d++) {
                                    var p = t.parts[d];
                                    r.translate(p.vertices, t.velocity), d > 0 && (p.position.x += t.velocity.x, p.position.y += t.velocity.y), 0 !== t.angularVelocity && (r.rotate(p.vertices, t.angularVelocity, t.position), l.rotate(p.axes, t.angularVelocity), d > 0 && s.rotateAbout(p.position, t.angularVelocity, t.position, p.position)), h.update(p.bounds, p.vertices, t.velocity)
                                }
                            }, n.applyForce = function(t, e, i) {
                                t.force.x += i.x, t.force.y += i.y;
                                var n = e.x - t.position.x,
                                    r = e.y - t.position.y;
                                t.torque += n * i.y - r * i.x
                            }, n._totalProperties = function(t) {
                                for (var e = {
                                        mass: 0,
                                        area: 0,
                                        inertia: 0,
                                        centre: {
                                            x: 0,
                                            y: 0
                                        }
                                    }, i = 1 === t.parts.length ? 0 : 1; i < t.parts.length; i++) {
                                    var n = t.parts[i],
                                        r = n.mass !== 1 / 0 ? n.mass : 1;
                                    e.mass += r, e.area += n.area, e.inertia += n.inertia, e.centre = s.add(e.centre, s.mult(n.position, r))
                                }
                                return e.centre = s.div(e.centre, e.mass), e
                            }
                        }()
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(4);
                        n._motionWakeThreshold = .18, n._motionSleepThreshold = .08, n._minBias = .9, n.update = function(t, e) {
                            for (var i = e * e * e, r = 0; r < t.length; r++) {
                                var s = t[r],
                                    a = s.speed * s.speed + s.angularSpeed * s.angularSpeed;
                                if (0 === s.force.x && 0 === s.force.y) {
                                    var o = Math.min(s.motion, a),
                                        h = Math.max(s.motion, a);
                                    s.motion = n._minBias * o + (1 - n._minBias) * h, s.sleepThreshold > 0 && s.motion < n._motionSleepThreshold * i ? (s.sleepCounter += 1, s.sleepCounter >= s.sleepThreshold && n.set(s, !0)) : s.sleepCounter > 0 && (s.sleepCounter -= 1)
                                } else n.set(s, !1)
                            }
                        }, n.afterCollisions = function(t, e) {
                            for (var i = e * e * e, r = 0; r < t.length; r++) {
                                var s = t[r];
                                if (s.isActive) {
                                    var a = s.collision,
                                        o = a.bodyA.parent,
                                        h = a.bodyB.parent;
                                    if (!(o.isSleeping && h.isSleeping || o.isStatic || h.isStatic) && (o.isSleeping || h.isSleeping)) {
                                        var l = o.isSleeping && !o.isStatic ? o : h,
                                            c = l === o ? h : o;
                                        !l.isStatic && c.motion > n._motionWakeThreshold * i && n.set(l, !1)
                                    }
                                }
                            }
                        }, n.set = function(t, e) {
                            var i = t.isSleeping;
                            e ? (t.isSleeping = !0, t.sleepCounter = t.sleepThreshold, t.positionImpulse.x = 0, t.positionImpulse.y = 0, t.positionPrev.x = t.position.x, t.positionPrev.y = t.position.y, t.anglePrev = t.angle, t.speed = 0, t.angularSpeed = 0, t.motion = 0, i || r.trigger(t, "sleepStart")) : (t.isSleeping = !1, t.sleepCounter = 0, i && r.trigger(t, "sleepEnd"))
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(2),
                            a = i(7),
                            o = i(1),
                            h = i(10),
                            l = i(0);
                        n._warming = .4, n._torqueDampen = 1, n._minLength = 1e-6, n.create = function(t) {
                            var e = t;
                            e.bodyA && !e.pointA && (e.pointA = {
                                x: 0,
                                y: 0
                            }), e.bodyB && !e.pointB && (e.pointB = {
                                x: 0,
                                y: 0
                            });
                            var i = e.bodyA ? s.add(e.bodyA.position, e.pointA) : e.pointA,
                                n = e.bodyB ? s.add(e.bodyB.position, e.pointB) : e.pointB,
                                r = s.magnitude(s.sub(i, n));
                            e.length = void 0 !== e.length ? e.length : r, e.id = e.id || l.nextId(), e.label = e.label || "Constraint", e.type = "constraint", e.stiffness = e.stiffness || (e.length > 0 ? 1 : .7), e.damping = e.damping || 0, e.angularStiffness = e.angularStiffness || 0, e.angleA = e.bodyA ? e.bodyA.angle : e.angleA, e.angleB = e.bodyB ? e.bodyB.angle : e.angleB, e.plugin = {};
                            var a = {
                                visible: !0,
                                lineWidth: 2,
                                strokeStyle: "#ffffff",
                                type: "line",
                                anchors: !0
                            };
                            return 0 === e.length && e.stiffness > .1 ? (a.type = "pin", a.anchors = !1) : e.stiffness < .9 && (a.type = "spring"), e.render = l.extend(a, e.render), e
                        }, n.preSolveAll = function(t) {
                            for (var e = 0; e < t.length; e += 1) {
                                var i = t[e],
                                    n = i.constraintImpulse;
                                i.isStatic || 0 === n.x && 0 === n.y && 0 === n.angle || (i.position.x += n.x, i.position.y += n.y, i.angle += n.angle)
                            }
                        }, n.solveAll = function(t, e) {
                            for (var i = 0; i < t.length; i += 1) {
                                var r = t[i],
                                    s = !r.bodyA || r.bodyA && r.bodyA.isStatic,
                                    a = !r.bodyB || r.bodyB && r.bodyB.isStatic;
                                (s || a) && n.solve(t[i], e)
                            }
                            for (i = 0; i < t.length; i += 1) s = !(r = t[i]).bodyA || r.bodyA && r.bodyA.isStatic, a = !r.bodyB || r.bodyB && r.bodyB.isStatic, s || a || n.solve(t[i], e)
                        }, n.solve = function(t, e) {
                            var i = t.bodyA,
                                r = t.bodyB,
                                a = t.pointA,
                                o = t.pointB;
                            if (i || r) {
                                i && !i.isStatic && (s.rotate(a, i.angle - t.angleA, a), t.angleA = i.angle), r && !r.isStatic && (s.rotate(o, r.angle - t.angleB, o), t.angleB = r.angle);
                                var h = a,
                                    l = o;
                                if (i && (h = s.add(i.position, a)), r && (l = s.add(r.position, o)), h && l) {
                                    var c = s.sub(h, l),
                                        u = s.magnitude(c);
                                    u < n._minLength && (u = n._minLength);
                                    var d, p, f, g, m, v = (u - t.length) / u,
                                        _ = t.stiffness < 1 ? t.stiffness * e : t.stiffness,
                                        y = s.mult(c, v * _),
                                        x = (i ? i.inverseMass : 0) + (r ? r.inverseMass : 0),
                                        b = x + ((i ? i.inverseInertia : 0) + (r ? r.inverseInertia : 0));
                                    if (t.damping) {
                                        var w = s.create();
                                        f = s.div(c, u), m = s.sub(r && s.sub(r.position, r.positionPrev) || w, i && s.sub(i.position, i.positionPrev) || w), g = s.dot(f, m)
                                    }
                                    i && !i.isStatic && (p = i.inverseMass / x, i.constraintImpulse.x -= y.x * p, i.constraintImpulse.y -= y.y * p, i.position.x -= y.x * p, i.position.y -= y.y * p, t.damping && (i.positionPrev.x -= t.damping * f.x * g * p, i.positionPrev.y -= t.damping * f.y * g * p), d = s.cross(a, y) / b * n._torqueDampen * i.inverseInertia * (1 - t.angularStiffness), i.constraintImpulse.angle -= d, i.angle -= d), r && !r.isStatic && (p = r.inverseMass / x, r.constraintImpulse.x += y.x * p, r.constraintImpulse.y += y.y * p, r.position.x += y.x * p, r.position.y += y.y * p, t.damping && (r.positionPrev.x += t.damping * f.x * g * p, r.positionPrev.y += t.damping * f.y * g * p), d = s.cross(o, y) / b * n._torqueDampen * r.inverseInertia * (1 - t.angularStiffness), r.constraintImpulse.angle += d, r.angle += d)
                                }
                            }
                        }, n.postSolveAll = function(t) {
                            for (var e = 0; e < t.length; e++) {
                                var i = t[e],
                                    l = i.constraintImpulse;
                                if (!(i.isStatic || 0 === l.x && 0 === l.y && 0 === l.angle)) {
                                    a.set(i, !1);
                                    for (var c = 0; c < i.parts.length; c++) {
                                        var u = i.parts[c];
                                        r.translate(u.vertices, l), c > 0 && (u.position.x += l.x, u.position.y += l.y), 0 !== l.angle && (r.rotate(u.vertices, l.angle, i.position), h.rotate(u.axes, l.angle), c > 0 && s.rotateAbout(u.position, l.angle, i.position, u.position)), o.update(u.bounds, u.vertices, i.velocity)
                                    }
                                    l.angle *= n._warming, l.x *= n._warming, l.y *= n._warming
                                }
                            }
                        }, n.pointAWorld = function(t) {
                            return {
                                x: (t.bodyA ? t.bodyA.position.x : 0) + t.pointA.x,
                                y: (t.bodyA ? t.bodyA.position.y : 0) + t.pointA.y
                            }
                        }, n.pointBWorld = function(t) {
                            return {
                                x: (t.bodyB ? t.bodyB.position.x : 0) + t.pointB.x,
                                y: (t.bodyB ? t.bodyB.position.y : 0) + t.pointB.y
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(17);
                        n.create = function(t, e) {
                            var i = t.bodyA,
                                r = t.bodyB,
                                s = t.parentA,
                                a = t.parentB,
                                o = {
                                    id: n.id(i, r),
                                    bodyA: i,
                                    bodyB: r,
                                    contacts: {},
                                    activeContacts: [],
                                    separation: 0,
                                    isActive: !0,
                                    confirmedActive: !0,
                                    isSensor: i.isSensor || r.isSensor,
                                    timeCreated: e,
                                    timeUpdated: e,
                                    inverseMass: s.inverseMass + a.inverseMass,
                                    friction: Math.min(s.friction, a.friction),
                                    frictionStatic: Math.max(s.frictionStatic, a.frictionStatic),
                                    restitution: Math.max(s.restitution, a.restitution),
                                    slop: Math.max(s.slop, a.slop)
                                };
                            return n.update(o, t, e), o
                        }, n.update = function(t, e, i) {
                            var s = t.contacts,
                                a = e.supports,
                                o = t.activeContacts,
                                h = e.parentA,
                                l = e.parentB;
                            if (t.collision = e, t.inverseMass = h.inverseMass + l.inverseMass, t.friction = Math.min(h.friction, l.friction), t.frictionStatic = Math.max(h.frictionStatic, l.frictionStatic), t.restitution = Math.max(h.restitution, l.restitution), t.slop = Math.max(h.slop, l.slop), o.length = 0, e.collided) {
                                for (var c = 0; c < a.length; c++) {
                                    var u = a[c],
                                        d = r.id(u),
                                        p = s[d];
                                    p ? o.push(p) : o.push(s[d] = r.create(u))
                                }
                                t.separation = e.depth, n.setActive(t, !0, i)
                            } else !0 === t.isActive && n.setActive(t, !1, i)
                        }, n.setActive = function(t, e, i) {
                            e ? (t.isActive = !0, t.timeUpdated = i) : (t.isActive = !1, t.activeContacts.length = 0)
                        }, n.id = function(t, e) {
                            return t.id < e.id ? "A" + t.id + "B" + e.id : "A" + e.id + "B" + t.id
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(2),
                            s = i(0);
                        n.fromVertices = function(t) {
                            for (var e = {}, i = 0; i < t.length; i++) {
                                var n = (i + 1) % t.length,
                                    a = r.normalise({
                                        x: t[n].y - t[i].y,
                                        y: t[i].x - t[n].x
                                    }),
                                    o = 0 === a.y ? 1 / 0 : a.x / a.y;
                                e[o = o.toFixed(3).toString()] = a
                            }
                            return s.values(e)
                        }, n.rotate = function(t, e) {
                            if (0 !== e)
                                for (var i = Math.cos(e), n = Math.sin(e), r = 0; r < t.length; r++) {
                                    var s, a = t[r];
                                    s = a.x * i - a.y * n, a.y = a.x * n + a.y * i, a.x = s
                                }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(0),
                            a = i(6),
                            o = i(1),
                            h = i(2);
                        n.rectangle = function(t, e, i, n, o) {
                            o = o || {};
                            var h = {
                                label: "Rectangle Body",
                                position: {
                                    x: t,
                                    y: e
                                },
                                vertices: r.fromPath("L 0 0 L " + i + " 0 L " + i + " " + n + " L 0 " + n)
                            };
                            if (o.chamfer) {
                                var l = o.chamfer;
                                h.vertices = r.chamfer(h.vertices, l.radius, l.quality, l.qualityMin, l.qualityMax), delete o.chamfer
                            }
                            return a.create(s.extend({}, h, o))
                        }, n.trapezoid = function(t, e, i, n, o, h) {
                            h = h || {};
                            var l, c = i * (o *= .5),
                                u = c + (1 - 2 * o) * i,
                                d = u + c;
                            l = o < .5 ? "L 0 0 L " + c + " " + -n + " L " + u + " " + -n + " L " + d + " 0" : "L 0 0 L " + u + " " + -n + " L " + d + " 0";
                            var p = {
                                label: "Trapezoid Body",
                                position: {
                                    x: t,
                                    y: e
                                },
                                vertices: r.fromPath(l)
                            };
                            if (h.chamfer) {
                                var f = h.chamfer;
                                p.vertices = r.chamfer(p.vertices, f.radius, f.quality, f.qualityMin, f.qualityMax), delete h.chamfer
                            }
                            return a.create(s.extend({}, p, h))
                        }, n.circle = function(t, e, i, r, a) {
                            r = r || {};
                            var o = {
                                label: "Circle Body",
                                circleRadius: i
                            };
                            a = a || 25;
                            var h = Math.ceil(Math.max(10, Math.min(a, i)));
                            return h % 2 == 1 && (h += 1), n.polygon(t, e, h, i, s.extend({}, o, r))
                        }, n.polygon = function(t, e, i, o, h) {
                            if (h = h || {}, i < 3) return n.circle(t, e, o, h);
                            for (var l = 2 * Math.PI / i, c = "", u = .5 * l, d = 0; d < i; d += 1) {
                                var p = u + d * l,
                                    f = Math.cos(p) * o,
                                    g = Math.sin(p) * o;
                                c += "L " + f.toFixed(3) + " " + g.toFixed(3) + " "
                            }
                            var m = {
                                label: "Polygon Body",
                                position: {
                                    x: t,
                                    y: e
                                },
                                vertices: r.fromPath(c)
                            };
                            if (h.chamfer) {
                                var v = h.chamfer;
                                m.vertices = r.chamfer(m.vertices, v.radius, v.quality, v.qualityMin, v.qualityMax), delete h.chamfer
                            }
                            return a.create(s.extend({}, m, h))
                        }, n.fromVertices = function(t, e, i, n, l, c, u, d) {
                            var p, f, g, m, v, _, y, x, b, w, S = s.getDecomp();
                            for (p = Boolean(S && S.quickDecomp), n = n || {}, g = [], l = void 0 !== l && l, c = void 0 !== c ? c : .01, u = void 0 !== u ? u : 10, d = void 0 !== d ? d : .01, s.isArray(i[0]) || (i = [i]), b = 0; b < i.length; b += 1)
                                if (v = i[b], !(m = r.isConvex(v)) && !p && s.warnOnce("Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices."), m || !p) v = m ? r.clockwiseSort(v) : r.hull(v), g.push({
                                    position: {
                                        x: t,
                                        y: e
                                    },
                                    vertices: v
                                });
                                else {
                                    var C = v.map((function(t) {
                                        return [t.x, t.y]
                                    }));
                                    S.makeCCW(C), !1 !== c && S.removeCollinearPoints(C, c), !1 !== d && S.removeDuplicatePoints && S.removeDuplicatePoints(C, d);
                                    var k = S.quickDecomp(C);
                                    for (_ = 0; _ < k.length; _++) {
                                        var A = k[_].map((function(t) {
                                            return {
                                                x: t[0],
                                                y: t[1]
                                            }
                                        }));
                                        u > 0 && r.area(A) < u || g.push({
                                            position: r.centre(A),
                                            vertices: A
                                        })
                                    }
                                }
                            for (_ = 0; _ < g.length; _++) g[_] = a.create(s.extend(g[_], n));
                            if (l)
                                for (_ = 0; _ < g.length; _++) {
                                    var P = g[_];
                                    for (y = _ + 1; y < g.length; y++) {
                                        var M = g[y];
                                        if (o.overlaps(P.bounds, M.bounds)) {
                                            var T = P.vertices,
                                                E = M.vertices;
                                            for (x = 0; x < P.vertices.length; x++)
                                                for (w = 0; w < M.vertices.length; w++) {
                                                    var I = h.magnitudeSquared(h.sub(T[(x + 1) % T.length], E[w])),
                                                        O = h.magnitudeSquared(h.sub(T[x], E[(w + 1) % E.length]));
                                                    I < 5 && O < 5 && (T[x].isInternal = !0, E[w].isInternal = !0)
                                                }
                                        }
                                    }
                                }
                            return g.length > 1 ? (f = a.create(s.extend({
                                parts: g.slice(0)
                            }, n)), a.setPosition(f, {
                                x: t,
                                y: e
                            }), f) : g[0]
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(0);
                        n.create = function(t) {
                            var e = {};
                            return t || r.log("Mouse.create: element was undefined, defaulting to document.body", "warn"), e.element = t || document.body, e.absolute = {
                                x: 0,
                                y: 0
                            }, e.position = {
                                x: 0,
                                y: 0
                            }, e.mousedownPosition = {
                                x: 0,
                                y: 0
                            }, e.mouseupPosition = {
                                x: 0,
                                y: 0
                            }, e.offset = {
                                x: 0,
                                y: 0
                            }, e.scale = {
                                x: 1,
                                y: 1
                            }, e.wheelDelta = 0, e.button = -1, e.pixelRatio = parseInt(e.element.getAttribute("data-pixel-ratio"), 10) || 1, e.sourceEvents = {
                                mousemove: null,
                                mousedown: null,
                                mouseup: null,
                                mousewheel: null
                            }, e.mousemove = function(t) {
                                var i = n._getRelativeMousePosition(t, e.element, e.pixelRatio);
                                t.changedTouches && (e.button = 0, t.preventDefault()), e.absolute.x = i.x, e.absolute.y = i.y, e.position.x = e.absolute.x * e.scale.x + e.offset.x, e.position.y = e.absolute.y * e.scale.y + e.offset.y, e.sourceEvents.mousemove = t
                            }, e.mousedown = function(t) {
                                var i = n._getRelativeMousePosition(t, e.element, e.pixelRatio);
                                t.changedTouches ? (e.button = 0, t.preventDefault()) : e.button = t.button, e.absolute.x = i.x, e.absolute.y = i.y, e.position.x = e.absolute.x * e.scale.x + e.offset.x, e.position.y = e.absolute.y * e.scale.y + e.offset.y, e.mousedownPosition.x = e.position.x, e.mousedownPosition.y = e.position.y, e.sourceEvents.mousedown = t
                            }, e.mouseup = function(t) {
                                var i = n._getRelativeMousePosition(t, e.element, e.pixelRatio);
                                t.changedTouches && t.preventDefault(), e.button = -1, e.absolute.x = i.x, e.absolute.y = i.y, e.position.x = e.absolute.x * e.scale.x + e.offset.x, e.position.y = e.absolute.y * e.scale.y + e.offset.y, e.mouseupPosition.x = e.position.x, e.mouseupPosition.y = e.position.y, e.sourceEvents.mouseup = t
                            }, e.mousewheel = function(t) {
                                e.wheelDelta = Math.max(-1, Math.min(1, t.wheelDelta || -t.detail)), t.preventDefault()
                            }, n.setElement(e, e.element), e
                        }, n.setElement = function(t, e) {
                            t.element = e, e.addEventListener("mousemove", t.mousemove), e.addEventListener("mousedown", t.mousedown), e.addEventListener("mouseup", t.mouseup), e.addEventListener("mousewheel", t.mousewheel), e.addEventListener("DOMMouseScroll", t.mousewheel), e.addEventListener("touchmove", t.mousemove), e.addEventListener("touchstart", t.mousedown), e.addEventListener("touchend", t.mouseup)
                        }, n.clearSourceEvents = function(t) {
                            t.sourceEvents.mousemove = null, t.sourceEvents.mousedown = null, t.sourceEvents.mouseup = null, t.sourceEvents.mousewheel = null, t.wheelDelta = 0
                        }, n.setOffset = function(t, e) {
                            t.offset.x = e.x, t.offset.y = e.y, t.position.x = t.absolute.x * t.scale.x + t.offset.x, t.position.y = t.absolute.y * t.scale.y + t.offset.y
                        }, n.setScale = function(t, e) {
                            t.scale.x = e.x, t.scale.y = e.y, t.position.x = t.absolute.x * t.scale.x + t.offset.x, t.position.y = t.absolute.y * t.scale.y + t.offset.y
                        }, n._getRelativeMousePosition = function(t, e, i) {
                            var n, r, s = e.getBoundingClientRect(),
                                a = document.documentElement || document.body.parentNode || document.body,
                                o = void 0 !== window.pageXOffset ? window.pageXOffset : a.scrollLeft,
                                h = void 0 !== window.pageYOffset ? window.pageYOffset : a.scrollTop,
                                l = t.changedTouches;
                            return l ? (n = l[0].pageX - s.left - o, r = l[0].pageY - s.top - h) : (n = t.pageX - s.left - o, r = t.pageY - s.top - h), {
                                x: n / (e.clientWidth / (e.width || e.clientWidth) * i),
                                y: r / (e.clientHeight / (e.height || e.clientHeight) * i)
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(14),
                            s = i(9),
                            a = i(1);
                        n.collisions = function(t, e) {
                            for (var i = [], o = e.pairs.table, h = 0; h < t.length; h++) {
                                var l = t[h][0],
                                    c = t[h][1];
                                if ((!l.isStatic && !l.isSleeping || !c.isStatic && !c.isSleeping) && n.canCollide(l.collisionFilter, c.collisionFilter) && a.overlaps(l.bounds, c.bounds))
                                    for (var u = l.parts.length > 1 ? 1 : 0; u < l.parts.length; u++)
                                        for (var d = l.parts[u], p = c.parts.length > 1 ? 1 : 0; p < c.parts.length; p++) {
                                            var f = c.parts[p];
                                            if (d === l && f === c || a.overlaps(d.bounds, f.bounds)) {
                                                var g, m = o[s.id(d, f)];
                                                g = m && m.isActive ? m.collision : null;
                                                var v = r.collides(d, f, g);
                                                v.collided && i.push(v)
                                            }
                                        }
                            }
                            return i
                        }, n.canCollide = function(t, e) {
                            return t.group === e.group && 0 !== t.group ? t.group > 0 : 0 != (t.mask & e.category) && 0 != (e.mask & t.category)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(2);
                        n.collides = function(t, e, i) {
                            var a, o, h, l, c = !1;
                            if (i) {
                                var u = t.parent,
                                    d = e.parent,
                                    p = u.speed * u.speed + u.angularSpeed * u.angularSpeed + d.speed * d.speed + d.angularSpeed * d.angularSpeed;
                                c = i && i.collided && p < .2, l = i
                            } else l = {
                                collided: !1,
                                bodyA: t,
                                bodyB: e
                            };
                            if (i && c) {
                                var f = l.axisBody,
                                    g = f === t ? e : t,
                                    m = [f.axes[i.axisNumber]];
                                if (h = n._overlapAxes(f.vertices, g.vertices, m), l.reused = !0, h.overlap <= 0) return l.collided = !1, l
                            } else {
                                if ((a = n._overlapAxes(t.vertices, e.vertices, t.axes)).overlap <= 0) return l.collided = !1, l;
                                if ((o = n._overlapAxes(e.vertices, t.vertices, e.axes)).overlap <= 0) return l.collided = !1, l;
                                a.overlap < o.overlap ? (h = a, l.axisBody = t) : (h = o, l.axisBody = e), l.axisNumber = h.axisNumber
                            }
                            l.bodyA = t.id < e.id ? t : e, l.bodyB = t.id < e.id ? e : t, l.collided = !0, l.depth = h.overlap, l.parentA = l.bodyA.parent, l.parentB = l.bodyB.parent, t = l.bodyA, e = l.bodyB, s.dot(h.axis, s.sub(e.position, t.position)) < 0 ? l.normal = {
                                x: h.axis.x,
                                y: h.axis.y
                            } : l.normal = {
                                x: -h.axis.x,
                                y: -h.axis.y
                            }, l.tangent = s.perp(l.normal), l.penetration = l.penetration || {}, l.penetration.x = l.normal.x * l.depth, l.penetration.y = l.normal.y * l.depth;
                            var v = n._findSupports(t, e, l.normal),
                                _ = [];
                            if (r.contains(t.vertices, v[0]) && _.push(v[0]), r.contains(t.vertices, v[1]) && _.push(v[1]), _.length < 2) {
                                var y = n._findSupports(e, t, s.neg(l.normal));
                                r.contains(e.vertices, y[0]) && _.push(y[0]), _.length < 2 && r.contains(e.vertices, y[1]) && _.push(y[1])
                            }
                            return _.length < 1 && (_ = [v[0]]), l.supports = _, l
                        }, n._overlapAxes = function(t, e, i) {
                            for (var r, a, o = s._temp[0], h = s._temp[1], l = {
                                    overlap: Number.MAX_VALUE
                                }, c = 0; c < i.length; c++) {
                                if (a = i[c], n._projectToAxis(o, t, a), n._projectToAxis(h, e, a), (r = Math.min(o.max - h.min, h.max - o.min)) <= 0) return l.overlap = r, l;
                                r < l.overlap && (l.overlap = r, l.axis = a, l.axisNumber = c)
                            }
                            return l
                        }, n._projectToAxis = function(t, e, i) {
                            for (var n = s.dot(e[0], i), r = n, a = 1; a < e.length; a += 1) {
                                var o = s.dot(e[a], i);
                                o > r ? r = o : o < n && (n = o)
                            }
                            t.min = n, t.max = r
                        }, n._findSupports = function(t, e, i) {
                            for (var n, r, a, o, h = Number.MAX_VALUE, l = s._temp[0], c = e.vertices, u = t.position, d = 0; d < c.length; d++) r = c[d], l.x = r.x - u.x, l.y = r.y - u.y, (n = -s.dot(i, l)) < h && (h = n, a = r);
                            return r = c[a.index - 1 >= 0 ? a.index - 1 : c.length - 1], l.x = r.x - u.x, l.y = r.y - u.y, h = -s.dot(i, l), o = r, r = c[(a.index + 1) % c.length], l.x = r.x - u.x, l.y = r.y - u.y, (n = -s.dot(i, l)) < h && (o = r), [a, o]
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(0);
                        n._registry = {}, n.register = function(t) {
                            if (n.isPlugin(t) || r.warn("Plugin.register:", n.toString(t), "does not implement all required fields."), t.name in n._registry) {
                                var e = n._registry[t.name],
                                    i = n.versionParse(t.version).number,
                                    s = n.versionParse(e.version).number;
                                i > s ? (r.warn("Plugin.register:", n.toString(e), "was upgraded to", n.toString(t)), n._registry[t.name] = t) : i < s ? r.warn("Plugin.register:", n.toString(e), "can not be downgraded to", n.toString(t)) : t !== e && r.warn("Plugin.register:", n.toString(t), "is already registered to different plugin object")
                            } else n._registry[t.name] = t;
                            return t
                        }, n.resolve = function(t) {
                            return n._registry[n.dependencyParse(t).name]
                        }, n.toString = function(t) {
                            return "string" == typeof t ? t : (t.name || "anonymous") + "@" + (t.version || t.range || "0.0.0")
                        }, n.isPlugin = function(t) {
                            return t && t.name && t.version && t.install
                        }, n.isUsed = function(t, e) {
                            return t.used.indexOf(e) > -1
                        }, n.isFor = function(t, e) {
                            var i = t.for && n.dependencyParse(t.for);
                            return !t.for || e.name === i.name && n.versionSatisfies(e.version, i.range)
                        }, n.use = function(t, e) {
                            if (t.uses = (t.uses || []).concat(e || []), 0 !== t.uses.length) {
                                for (var i = n.dependencies(t), s = r.topologicalSort(i), a = [], o = 0; o < s.length; o += 1)
                                    if (s[o] !== t.name) {
                                        var h = n.resolve(s[o]);
                                        h ? n.isUsed(t, h.name) || (n.isFor(h, t) || (r.warn("Plugin.use:", n.toString(h), "is for", h.for, "but installed on", n.toString(t) + "."), h._warned = !0), h.install ? h.install(t) : (r.warn("Plugin.use:", n.toString(h), "does not specify an install function."), h._warned = !0), h._warned ? (a.push("🔶 " + n.toString(h)), delete h._warned) : a.push("✅ " + n.toString(h)), t.used.push(h.name)) : a.push("❌ " + s[o])
                                    }
                                a.length > 0 && r.info(a.join("  "))
                            } else r.warn("Plugin.use:", n.toString(t), "does not specify any dependencies to install.")
                        }, n.dependencies = function(t, e) {
                            var i = n.dependencyParse(t),
                                s = i.name;
                            if (!(s in (e = e || {}))) {
                                t = n.resolve(t) || t, e[s] = r.map(t.uses || [], (function(e) {
                                    n.isPlugin(e) && n.register(e);
                                    var s = n.dependencyParse(e),
                                        a = n.resolve(e);
                                    return a && !n.versionSatisfies(a.version, s.range) ? (r.warn("Plugin.dependencies:", n.toString(a), "does not satisfy", n.toString(s), "used by", n.toString(i) + "."), a._warned = !0, t._warned = !0) : a || (r.warn("Plugin.dependencies:", n.toString(e), "used by", n.toString(i), "could not be resolved."), t._warned = !0), s.name
                                }));
                                for (var a = 0; a < e[s].length; a += 1) n.dependencies(e[s][a], e);
                                return e
                            }
                        }, n.dependencyParse = function(t) {
                            return r.isString(t) ? (/^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-]+)?))?$/.test(t) || r.warn("Plugin.dependencyParse:", t, "is not a valid dependency string."), {
                                name: t.split("@")[0],
                                range: t.split("@")[1] || "*"
                            }) : {
                                name: t.name,
                                range: t.range || t.version
                            }
                        }, n.versionParse = function(t) {
                            var e = /^(\*)|(\^|~|>=|>)?\s*((\d+)\.(\d+)\.(\d+))(-[0-9A-Za-z-]+)?$/;
                            e.test(t) || r.warn("Plugin.versionParse:", t, "is not a valid version or range.");
                            var i = e.exec(t),
                                n = Number(i[4]),
                                s = Number(i[5]),
                                a = Number(i[6]);
                            return {
                                isRange: Boolean(i[1] || i[2]),
                                version: i[3],
                                range: t,
                                operator: i[1] || i[2] || "",
                                major: n,
                                minor: s,
                                patch: a,
                                parts: [n, s, a],
                                prerelease: i[7],
                                number: 1e8 * n + 1e4 * s + a
                            }
                        }, n.versionSatisfies = function(t, e) {
                            e = e || "*";
                            var i = n.versionParse(e),
                                r = n.versionParse(t);
                            if (i.isRange) {
                                if ("*" === i.operator || "*" === t) return !0;
                                if (">" === i.operator) return r.number > i.number;
                                if (">=" === i.operator) return r.number >= i.number;
                                if ("~" === i.operator) return r.major === i.major && r.minor === i.minor && r.patch >= i.patch;
                                if ("^" === i.operator) return i.major > 0 ? r.major === i.major && r.number >= i.number : i.minor > 0 ? r.minor === i.minor && r.patch >= i.patch : r.patch === i.patch
                            }
                            return t === e || "*" === t
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(0),
                            s = i(5),
                            a = i(1),
                            o = i(4),
                            h = i(2),
                            l = i(12);
                        ! function() {
                            var t, e;
                            "undefined" != typeof window && (t = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(t) {
                                window.setTimeout((function() {
                                    t(r.now())
                                }), 1e3 / 60)
                            }, e = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame), n._goodFps = 30, n._goodDelta = 1e3 / 60, n.create = function(t) {
                                var e = {
                                        controller: n,
                                        engine: null,
                                        element: null,
                                        canvas: null,
                                        mouse: null,
                                        frameRequestId: null,
                                        timing: {
                                            historySize: 60,
                                            delta: 0,
                                            deltaHistory: [],
                                            lastTime: 0,
                                            lastTimestamp: 0,
                                            lastElapsed: 0,
                                            timestampElapsed: 0,
                                            timestampElapsedHistory: [],
                                            engineDeltaHistory: [],
                                            engineElapsedHistory: [],
                                            elapsedHistory: []
                                        },
                                        options: {
                                            width: 800,
                                            height: 600,
                                            pixelRatio: 1,
                                            background: "#14151f",
                                            wireframeBackground: "#14151f",
                                            hasBounds: !!t.bounds,
                                            enabled: !0,
                                            wireframes: !0,
                                            showSleeping: !0,
                                            showDebug: !1,
                                            showStats: !1,
                                            showPerformance: !1,
                                            showBroadphase: !1,
                                            showBounds: !1,
                                            showVelocity: !1,
                                            showCollisions: !1,
                                            showSeparations: !1,
                                            showAxes: !1,
                                            showPositions: !1,
                                            showAngleIndicator: !1,
                                            showIds: !1,
                                            showVertexNumbers: !1,
                                            showConvexHulls: !1,
                                            showInternalEdges: !1,
                                            showMousePosition: !1
                                        }
                                    },
                                    i = r.extend(e, t);
                                return i.canvas && (i.canvas.width = i.options.width || i.canvas.width, i.canvas.height = i.options.height || i.canvas.height), i.mouse = t.mouse, i.engine = t.engine, i.canvas = i.canvas || u(i.options.width, i.options.height), i.context = i.canvas.getContext("2d"), i.textures = {}, i.bounds = i.bounds || {
                                    min: {
                                        x: 0,
                                        y: 0
                                    },
                                    max: {
                                        x: i.canvas.width,
                                        y: i.canvas.height
                                    }
                                }, 1 !== i.options.pixelRatio && n.setPixelRatio(i, i.options.pixelRatio), r.isElement(i.element) ? i.element.appendChild(i.canvas) : i.canvas.parentNode || r.log("Render.create: options.element was undefined, render.canvas was created but not appended", "warn"), i
                            }, n.run = function(e) {
                                ! function r(s) {
                                    e.frameRequestId = t(r), i(e, s), n.world(e, s), (e.options.showStats || e.options.showDebug) && n.stats(e, e.context, s), (e.options.showPerformance || e.options.showDebug) && n.performance(e, e.context, s)
                                }()
                            }, n.stop = function(t) {
                                e(t.frameRequestId)
                            }, n.setPixelRatio = function(t, e) {
                                var i = t.options,
                                    n = t.canvas;
                                "auto" === e && (e = d(n)), i.pixelRatio = e, n.setAttribute("data-pixel-ratio", e), n.width = i.width * e, n.height = i.height * e, n.style.width = i.width + "px", n.style.height = i.height + "px"
                            }, n.lookAt = function(t, e, i, n) {
                                n = void 0 === n || n, e = r.isArray(e) ? e : [e], i = i || {
                                    x: 0,
                                    y: 0
                                };
                                for (var s = {
                                        min: {
                                            x: 1 / 0,
                                            y: 1 / 0
                                        },
                                        max: {
                                            x: -1 / 0,
                                            y: -1 / 0
                                        }
                                    }, a = 0; a < e.length; a += 1) {
                                    var o = e[a],
                                        h = o.bounds ? o.bounds.min : o.min || o.position || o,
                                        c = o.bounds ? o.bounds.max : o.max || o.position || o;
                                    h && c && (h.x < s.min.x && (s.min.x = h.x), c.x > s.max.x && (s.max.x = c.x), h.y < s.min.y && (s.min.y = h.y), c.y > s.max.y && (s.max.y = c.y))
                                }
                                var u = s.max.x - s.min.x + 2 * i.x,
                                    d = s.max.y - s.min.y + 2 * i.y,
                                    p = t.canvas.height,
                                    f = t.canvas.width / p,
                                    g = u / d,
                                    m = 1,
                                    v = 1;
                                g > f ? v = g / f : m = f / g, t.options.hasBounds = !0, t.bounds.min.x = s.min.x, t.bounds.max.x = s.min.x + u * m, t.bounds.min.y = s.min.y, t.bounds.max.y = s.min.y + d * v, n && (t.bounds.min.x += .5 * u - u * m * .5, t.bounds.max.x += .5 * u - u * m * .5, t.bounds.min.y += .5 * d - d * v * .5, t.bounds.max.y += .5 * d - d * v * .5), t.bounds.min.x -= i.x, t.bounds.max.x -= i.x, t.bounds.min.y -= i.y, t.bounds.max.y -= i.y, t.mouse && (l.setScale(t.mouse, {
                                    x: (t.bounds.max.x - t.bounds.min.x) / t.canvas.width,
                                    y: (t.bounds.max.y - t.bounds.min.y) / t.canvas.height
                                }), l.setOffset(t.mouse, t.bounds.min))
                            }, n.startViewTransform = function(t) {
                                var e = t.bounds.max.x - t.bounds.min.x,
                                    i = t.bounds.max.y - t.bounds.min.y,
                                    n = e / t.options.width,
                                    r = i / t.options.height;
                                t.context.setTransform(t.options.pixelRatio / n, 0, 0, t.options.pixelRatio / r, 0, 0), t.context.translate(-t.bounds.min.x, -t.bounds.min.y)
                            }, n.endViewTransform = function(t) {
                                t.context.setTransform(t.options.pixelRatio, 0, 0, t.options.pixelRatio, 0, 0)
                            }, n.world = function(t, e) {
                                var i, c = r.now(),
                                    u = t.engine,
                                    d = u.world,
                                    p = t.canvas,
                                    g = t.context,
                                    m = t.options,
                                    v = t.timing,
                                    _ = s.allBodies(d),
                                    y = s.allConstraints(d),
                                    x = m.wireframes ? m.wireframeBackground : m.background,
                                    b = [],
                                    w = [],
                                    S = {
                                        timestamp: u.timing.timestamp
                                    };
                                if (o.trigger(t, "beforeRender", S), t.currentBackground !== x && f(t, x), g.globalCompositeOperation = "source-in", g.fillStyle = "transparent", g.fillRect(0, 0, p.width, p.height), g.globalCompositeOperation = "source-over", m.hasBounds) {
                                    for (i = 0; i < _.length; i++) {
                                        var C = _[i];
                                        a.overlaps(C.bounds, t.bounds) && b.push(C)
                                    }
                                    for (i = 0; i < y.length; i++) {
                                        var k = y[i],
                                            A = k.bodyA,
                                            P = k.bodyB,
                                            M = k.pointA,
                                            T = k.pointB;
                                        A && (M = h.add(A.position, k.pointA)), P && (T = h.add(P.position, k.pointB)), M && T && (a.contains(t.bounds, M) || a.contains(t.bounds, T)) && w.push(k)
                                    }
                                    n.startViewTransform(t), t.mouse && (l.setScale(t.mouse, {
                                        x: (t.bounds.max.x - t.bounds.min.x) / t.options.width,
                                        y: (t.bounds.max.y - t.bounds.min.y) / t.options.height
                                    }), l.setOffset(t.mouse, t.bounds.min))
                                } else w = y, b = _, 1 !== t.options.pixelRatio && t.context.setTransform(t.options.pixelRatio, 0, 0, t.options.pixelRatio, 0, 0);
                                !m.wireframes || u.enableSleeping && m.showSleeping ? n.bodies(t, b, g) : (m.showConvexHulls && n.bodyConvexHulls(t, b, g), n.bodyWireframes(t, b, g)), m.showBounds && n.bodyBounds(t, b, g), (m.showAxes || m.showAngleIndicator) && n.bodyAxes(t, b, g), m.showPositions && n.bodyPositions(t, b, g), m.showVelocity && n.bodyVelocity(t, b, g), m.showIds && n.bodyIds(t, b, g), m.showSeparations && n.separations(t, u.pairs.list, g), m.showCollisions && n.collisions(t, u.pairs.list, g), m.showVertexNumbers && n.vertexNumbers(t, b, g), m.showMousePosition && n.mousePosition(t, t.mouse, g), n.constraints(w, g), m.showBroadphase && n.grid(t, u.grid, g), m.hasBounds && n.endViewTransform(t), o.trigger(t, "afterRender", S), v.lastElapsed = r.now() - c
                            }, n.stats = function(t, e, i) {
                                for (var n = t.engine, r = n.world, a = s.allBodies(r), o = 0, h = 0, l = 0; l < a.length; l += 1) o += a[l].parts.length;
                                var c = {
                                    Part: o,
                                    Body: a.length,
                                    Cons: s.allConstraints(r).length,
                                    Comp: s.allComposites(r).length,
                                    Pair: n.pairs.list.length
                                };
                                for (var u in e.fillStyle = "#0e0f19", e.fillRect(h, 0, 302.5, 44), e.font = "12px Arial", e.textBaseline = "top", e.textAlign = "right", c) {
                                    var d = c[u];
                                    e.fillStyle = "#aaa", e.fillText(u, h + 55, 8), e.fillStyle = "#eee", e.fillText(d, h + 55, 26), h += 55
                                }
                            }, n.performance = function(t, e) {
                                var i = t.engine,
                                    r = t.timing,
                                    s = r.deltaHistory,
                                    a = r.elapsedHistory,
                                    o = r.timestampElapsedHistory,
                                    h = r.engineDeltaHistory,
                                    l = r.engineElapsedHistory,
                                    u = i.timing.lastDelta,
                                    d = c(s),
                                    p = c(a),
                                    f = c(h),
                                    g = c(l),
                                    m = c(o) / d || 0,
                                    v = 1e3 / d || 0,
                                    _ = 60;
                                e.fillStyle = "#0e0f19", e.fillRect(0, 50, 370, 34), n.status(e, 10, 69, _, 4, s.length, Math.round(v) + " fps", v / n._goodFps, (function(t) {
                                    return s[t] / d - 1
                                })), n.status(e, 82, 69, _, 4, h.length, u.toFixed(2) + " dt", n._goodDelta / u, (function(t) {
                                    return h[t] / f - 1
                                })), n.status(e, 154, 69, _, 4, l.length, g.toFixed(2) + " ut", 1 - g / n._goodFps, (function(t) {
                                    return l[t] / g - 1
                                })), n.status(e, 226, 69, _, 4, a.length, p.toFixed(2) + " rt", 1 - p / n._goodFps, (function(t) {
                                    return a[t] / p - 1
                                })), n.status(e, 298, 69, _, 4, o.length, m.toFixed(2) + " x", m * m * m, (function(t) {
                                    return (o[t] / s[t] / m || 0) - 1
                                }))
                            }, n.status = function(t, e, i, n, s, a, o, h, l) {
                                t.strokeStyle = "#888", t.fillStyle = "#444", t.lineWidth = 1, t.fillRect(e, i + 7, n, 1), t.beginPath(), t.moveTo(e, i + 7 - s * r.clamp(.4 * l(0), -2, 2));
                                for (var c = 0; c < n; c += 1) t.lineTo(e + c, i + 7 - (c < a ? s * r.clamp(.4 * l(c), -2, 2) : 0));
                                t.stroke(), t.fillStyle = "hsl(" + r.clamp(25 + 95 * h, 0, 120) + ",100%,60%)", t.fillRect(e, i - 7, 4, 4), t.font = "12px Arial", t.textBaseline = "middle", t.textAlign = "right", t.fillStyle = "#eee", t.fillText(o, e + n, i - 5)
                            }, n.constraints = function(t, e) {
                                for (var i = e, n = 0; n < t.length; n++) {
                                    var s = t[n];
                                    if (s.render.visible && s.pointA && s.pointB) {
                                        var a, o, l = s.bodyA,
                                            c = s.bodyB;
                                        if (a = l ? h.add(l.position, s.pointA) : s.pointA, "pin" === s.render.type) i.beginPath(), i.arc(a.x, a.y, 3, 0, 2 * Math.PI), i.closePath();
                                        else {
                                            if (o = c ? h.add(c.position, s.pointB) : s.pointB, i.beginPath(), i.moveTo(a.x, a.y), "spring" === s.render.type)
                                                for (var u, d = h.sub(o, a), p = h.perp(h.normalise(d)), f = Math.ceil(r.clamp(s.length / 5, 12, 20)), g = 1; g < f; g += 1) u = g % 2 == 0 ? 1 : -1, i.lineTo(a.x + d.x * (g / f) + p.x * u * 4, a.y + d.y * (g / f) + p.y * u * 4);
                                            i.lineTo(o.x, o.y)
                                        }
                                        s.render.lineWidth && (i.lineWidth = s.render.lineWidth, i.strokeStyle = s.render.strokeStyle, i.stroke()), s.render.anchors && (i.fillStyle = s.render.strokeStyle, i.beginPath(), i.arc(a.x, a.y, 3, 0, 2 * Math.PI), i.arc(o.x, o.y, 3, 0, 2 * Math.PI), i.closePath(), i.fill())
                                    }
                                }
                            }, n.bodies = function(t, e, i) {
                                var n, r, s, a, o = i,
                                    h = (t.engine, t.options),
                                    l = h.showInternalEdges || !h.wireframes;
                                for (s = 0; s < e.length; s++)
                                    if ((n = e[s]).render.visible)
                                        for (a = n.parts.length > 1 ? 1 : 0; a < n.parts.length; a++)
                                            if ((r = n.parts[a]).render.visible) {
                                                if (h.showSleeping && n.isSleeping ? o.globalAlpha = .5 * r.render.opacity : 1 !== r.render.opacity && (o.globalAlpha = r.render.opacity), r.render.sprite && r.render.sprite.texture && !h.wireframes) {
                                                    var c = r.render.sprite,
                                                        u = p(t, c.texture);
                                                    o.translate(r.position.x, r.position.y), o.rotate(r.angle), o.drawImage(u, u.width * -c.xOffset * c.xScale, u.height * -c.yOffset * c.yScale, u.width * c.xScale, u.height * c.yScale), o.rotate(-r.angle), o.translate(-r.position.x, -r.position.y)
                                                } else {
                                                    if (r.circleRadius) o.beginPath(), o.arc(r.position.x, r.position.y, r.circleRadius, 0, 2 * Math.PI);
                                                    else {
                                                        o.beginPath(), o.moveTo(r.vertices[0].x, r.vertices[0].y);
                                                        for (var d = 1; d < r.vertices.length; d++) !r.vertices[d - 1].isInternal || l ? o.lineTo(r.vertices[d].x, r.vertices[d].y) : o.moveTo(r.vertices[d].x, r.vertices[d].y), r.vertices[d].isInternal && !l && o.moveTo(r.vertices[(d + 1) % r.vertices.length].x, r.vertices[(d + 1) % r.vertices.length].y);
                                                        o.lineTo(r.vertices[0].x, r.vertices[0].y), o.closePath()
                                                    }
                                                    h.wireframes ? (o.lineWidth = 1, o.strokeStyle = "#bbb", o.stroke()) : (o.fillStyle = r.render.fillStyle, r.render.lineWidth && (o.lineWidth = r.render.lineWidth, o.strokeStyle = r.render.strokeStyle, o.stroke()), o.fill())
                                                }
                                                o.globalAlpha = 1
                                            }
                            }, n.bodyWireframes = function(t, e, i) {
                                var n, r, s, a, o, h = i,
                                    l = t.options.showInternalEdges;
                                for (h.beginPath(), s = 0; s < e.length; s++)
                                    if ((n = e[s]).render.visible)
                                        for (o = n.parts.length > 1 ? 1 : 0; o < n.parts.length; o++) {
                                            for (r = n.parts[o], h.moveTo(r.vertices[0].x, r.vertices[0].y), a = 1; a < r.vertices.length; a++) !r.vertices[a - 1].isInternal || l ? h.lineTo(r.vertices[a].x, r.vertices[a].y) : h.moveTo(r.vertices[a].x, r.vertices[a].y), r.vertices[a].isInternal && !l && h.moveTo(r.vertices[(a + 1) % r.vertices.length].x, r.vertices[(a + 1) % r.vertices.length].y);
                                            h.lineTo(r.vertices[0].x, r.vertices[0].y)
                                        }
                                h.lineWidth = 1, h.strokeStyle = "#bbb", h.stroke()
                            }, n.bodyConvexHulls = function(t, e, i) {
                                var n, r, s, a = i;
                                for (a.beginPath(), r = 0; r < e.length; r++)
                                    if ((n = e[r]).render.visible && 1 !== n.parts.length) {
                                        for (a.moveTo(n.vertices[0].x, n.vertices[0].y), s = 1; s < n.vertices.length; s++) a.lineTo(n.vertices[s].x, n.vertices[s].y);
                                        a.lineTo(n.vertices[0].x, n.vertices[0].y)
                                    }
                                a.lineWidth = 1, a.strokeStyle = "rgba(255,255,255,0.2)", a.stroke()
                            }, n.vertexNumbers = function(t, e, i) {
                                var n, r, s, a = i;
                                for (n = 0; n < e.length; n++) {
                                    var o = e[n].parts;
                                    for (s = o.length > 1 ? 1 : 0; s < o.length; s++) {
                                        var h = o[s];
                                        for (r = 0; r < h.vertices.length; r++) a.fillStyle = "rgba(255,255,255,0.2)", a.fillText(n + "_" + r, h.position.x + .8 * (h.vertices[r].x - h.position.x), h.position.y + .8 * (h.vertices[r].y - h.position.y))
                                    }
                                }
                            }, n.mousePosition = function(t, e, i) {
                                var n = i;
                                n.fillStyle = "rgba(255,255,255,0.8)", n.fillText(e.position.x + "  " + e.position.y, e.position.x + 5, e.position.y - 5)
                            }, n.bodyBounds = function(t, e, i) {
                                var n = i,
                                    r = (t.engine, t.options);
                                n.beginPath();
                                for (var s = 0; s < e.length; s++)
                                    if (e[s].render.visible)
                                        for (var a = e[s].parts, o = a.length > 1 ? 1 : 0; o < a.length; o++) {
                                            var h = a[o];
                                            n.rect(h.bounds.min.x, h.bounds.min.y, h.bounds.max.x - h.bounds.min.x, h.bounds.max.y - h.bounds.min.y)
                                        }
                                r.wireframes ? n.strokeStyle = "rgba(255,255,255,0.08)" : n.strokeStyle = "rgba(0,0,0,0.1)", n.lineWidth = 1, n.stroke()
                            }, n.bodyAxes = function(t, e, i) {
                                var n, r, s, a, o = i,
                                    h = (t.engine, t.options);
                                for (o.beginPath(), r = 0; r < e.length; r++) {
                                    var l = e[r],
                                        c = l.parts;
                                    if (l.render.visible)
                                        if (h.showAxes)
                                            for (s = c.length > 1 ? 1 : 0; s < c.length; s++)
                                                for (n = c[s], a = 0; a < n.axes.length; a++) {
                                                    var u = n.axes[a];
                                                    o.moveTo(n.position.x, n.position.y), o.lineTo(n.position.x + 20 * u.x, n.position.y + 20 * u.y)
                                                } else
                                                    for (s = c.length > 1 ? 1 : 0; s < c.length; s++)
                                                        for (n = c[s], a = 0; a < n.axes.length; a++) o.moveTo(n.position.x, n.position.y), o.lineTo((n.vertices[0].x + n.vertices[n.vertices.length - 1].x) / 2, (n.vertices[0].y + n.vertices[n.vertices.length - 1].y) / 2)
                                }
                                h.wireframes ? (o.strokeStyle = "indianred", o.lineWidth = 1) : (o.strokeStyle = "rgba(255, 255, 255, 0.4)", o.globalCompositeOperation = "overlay", o.lineWidth = 2), o.stroke(), o.globalCompositeOperation = "source-over"
                            }, n.bodyPositions = function(t, e, i) {
                                var n, r, s, a, o = i,
                                    h = (t.engine, t.options);
                                for (o.beginPath(), s = 0; s < e.length; s++)
                                    if ((n = e[s]).render.visible)
                                        for (a = 0; a < n.parts.length; a++) r = n.parts[a], o.arc(r.position.x, r.position.y, 3, 0, 2 * Math.PI, !1), o.closePath();
                                for (h.wireframes ? o.fillStyle = "indianred" : o.fillStyle = "rgba(0,0,0,0.5)", o.fill(), o.beginPath(), s = 0; s < e.length; s++)(n = e[s]).render.visible && (o.arc(n.positionPrev.x, n.positionPrev.y, 2, 0, 2 * Math.PI, !1), o.closePath());
                                o.fillStyle = "rgba(255,165,0,0.8)", o.fill()
                            }, n.bodyVelocity = function(t, e, i) {
                                var n = i;
                                n.beginPath();
                                for (var r = 0; r < e.length; r++) {
                                    var s = e[r];
                                    s.render.visible && (n.moveTo(s.position.x, s.position.y), n.lineTo(s.position.x + 2 * (s.position.x - s.positionPrev.x), s.position.y + 2 * (s.position.y - s.positionPrev.y)))
                                }
                                n.lineWidth = 3, n.strokeStyle = "cornflowerblue", n.stroke()
                            }, n.bodyIds = function(t, e, i) {
                                var n, r, s = i;
                                for (n = 0; n < e.length; n++)
                                    if (e[n].render.visible) {
                                        var a = e[n].parts;
                                        for (r = a.length > 1 ? 1 : 0; r < a.length; r++) {
                                            var o = a[r];
                                            s.font = "12px Arial", s.fillStyle = "rgba(255,255,255,0.5)", s.fillText(o.id, o.position.x + 10, o.position.y - 10)
                                        }
                                    }
                            }, n.collisions = function(t, e, i) {
                                var n, r, s, a, o = i,
                                    h = t.options;
                                for (o.beginPath(), s = 0; s < e.length; s++)
                                    if ((n = e[s]).isActive)
                                        for (r = n.collision, a = 0; a < n.activeContacts.length; a++) {
                                            var l = n.activeContacts[a].vertex;
                                            o.rect(l.x - 1.5, l.y - 1.5, 3.5, 3.5)
                                        }
                                for (h.wireframes ? o.fillStyle = "rgba(255,255,255,0.7)" : o.fillStyle = "orange", o.fill(), o.beginPath(), s = 0; s < e.length; s++)
                                    if ((n = e[s]).isActive && (r = n.collision, n.activeContacts.length > 0)) {
                                        var c = n.activeContacts[0].vertex.x,
                                            u = n.activeContacts[0].vertex.y;
                                        2 === n.activeContacts.length && (c = (n.activeContacts[0].vertex.x + n.activeContacts[1].vertex.x) / 2, u = (n.activeContacts[0].vertex.y + n.activeContacts[1].vertex.y) / 2), r.bodyB === r.supports[0].body || !0 === r.bodyA.isStatic ? o.moveTo(c - 8 * r.normal.x, u - 8 * r.normal.y) : o.moveTo(c + 8 * r.normal.x, u + 8 * r.normal.y), o.lineTo(c, u)
                                    }
                                h.wireframes ? o.strokeStyle = "rgba(255,165,0,0.7)" : o.strokeStyle = "orange", o.lineWidth = 1, o.stroke()
                            }, n.separations = function(t, e, i) {
                                var n, r, s, a, o, h = i,
                                    l = t.options;
                                for (h.beginPath(), o = 0; o < e.length; o++)
                                    if ((n = e[o]).isActive) {
                                        s = (r = n.collision).bodyA;
                                        var c = 1;
                                        (a = r.bodyB).isStatic || s.isStatic || (c = .5), a.isStatic && (c = 0), h.moveTo(a.position.x, a.position.y), h.lineTo(a.position.x - r.penetration.x * c, a.position.y - r.penetration.y * c), c = 1, a.isStatic || s.isStatic || (c = .5), s.isStatic && (c = 0), h.moveTo(s.position.x, s.position.y), h.lineTo(s.position.x + r.penetration.x * c, s.position.y + r.penetration.y * c)
                                    }
                                l.wireframes ? h.strokeStyle = "rgba(255,165,0,0.5)" : h.strokeStyle = "orange", h.stroke()
                            }, n.grid = function(t, e, i) {
                                var n = i;
                                t.options.wireframes ? n.strokeStyle = "rgba(255,180,0,0.1)" : n.strokeStyle = "rgba(255,180,0,0.5)", n.beginPath();
                                for (var s = r.keys(e.buckets), a = 0; a < s.length; a++) {
                                    var o = s[a];
                                    if (!(e.buckets[o].length < 2)) {
                                        var h = o.split(/C|R/);
                                        n.rect(.5 + parseInt(h[1], 10) * e.bucketWidth, .5 + parseInt(h[2], 10) * e.bucketHeight, e.bucketWidth, e.bucketHeight)
                                    }
                                }
                                n.lineWidth = 1, n.stroke()
                            }, n.inspector = function(t, e) {
                                t.engine;
                                var i, n = t.selected,
                                    r = t.render,
                                    s = r.options;
                                if (s.hasBounds) {
                                    var a = r.bounds.max.x - r.bounds.min.x,
                                        o = r.bounds.max.y - r.bounds.min.y,
                                        h = a / r.options.width,
                                        l = o / r.options.height;
                                    e.scale(1 / h, 1 / l), e.translate(-r.bounds.min.x, -r.bounds.min.y)
                                }
                                for (var c = 0; c < n.length; c++) {
                                    var u = n[c].data;
                                    switch (e.translate(.5, .5), e.lineWidth = 1, e.strokeStyle = "rgba(255,165,0,0.9)", e.setLineDash([1, 2]), u.type) {
                                        case "body":
                                            i = u.bounds, e.beginPath(), e.rect(Math.floor(i.min.x - 3), Math.floor(i.min.y - 3), Math.floor(i.max.x - i.min.x + 6), Math.floor(i.max.y - i.min.y + 6)), e.closePath(), e.stroke();
                                            break;
                                        case "constraint":
                                            var d = u.pointA;
                                            u.bodyA && (d = u.pointB), e.beginPath(), e.arc(d.x, d.y, 10, 0, 2 * Math.PI), e.closePath(), e.stroke()
                                    }
                                    e.setLineDash([]), e.translate(-.5, -.5)
                                }
                                null !== t.selectStart && (e.translate(.5, .5), e.lineWidth = 1, e.strokeStyle = "rgba(255,165,0,0.6)", e.fillStyle = "rgba(255,165,0,0.1)", i = t.selectBounds, e.beginPath(), e.rect(Math.floor(i.min.x), Math.floor(i.min.y), Math.floor(i.max.x - i.min.x), Math.floor(i.max.y - i.min.y)), e.closePath(), e.stroke(), e.fill(), e.translate(-.5, -.5)), s.hasBounds && e.setTransform(1, 0, 0, 1, 0, 0)
                            };
                            var i = function(t, e) {
                                    var i = t.engine,
                                        r = t.timing,
                                        s = r.historySize,
                                        a = i.timing.timestamp;
                                    r.delta = e - r.lastTime || n._goodDelta, r.lastTime = e, r.timestampElapsed = a - r.lastTimestamp || 0, r.lastTimestamp = a, r.deltaHistory.unshift(r.delta), r.deltaHistory.length = Math.min(r.deltaHistory.length, s), r.engineDeltaHistory.unshift(i.timing.lastDelta), r.engineDeltaHistory.length = Math.min(r.engineDeltaHistory.length, s), r.timestampElapsedHistory.unshift(r.timestampElapsed), r.timestampElapsedHistory.length = Math.min(r.timestampElapsedHistory.length, s), r.engineElapsedHistory.unshift(i.timing.lastElapsed), r.engineElapsedHistory.length = Math.min(r.engineElapsedHistory.length, s), r.elapsedHistory.unshift(r.lastElapsed), r.elapsedHistory.length = Math.min(r.elapsedHistory.length, s)
                                },
                                c = function(t) {
                                    for (var e = 0, i = 0; i < t.length; i += 1) e += t[i];
                                    return e / t.length || 0
                                },
                                u = function(t, e) {
                                    var i = document.createElement("canvas");
                                    return i.width = t, i.height = e, i.oncontextmenu = function() {
                                        return !1
                                    }, i.onselectstart = function() {
                                        return !1
                                    }, i
                                },
                                d = function(t) {
                                    var e = t.getContext("2d");
                                    return (window.devicePixelRatio || 1) / (e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1)
                                },
                                p = function(t, e) {
                                    var i = t.textures[e];
                                    return i || ((i = t.textures[e] = new Image).src = e, i)
                                },
                                f = function(t, e) {
                                    var i = e;
                                    /(jpg|gif|png)$/.test(e) && (i = "url(" + e + ")"), t.canvas.style.background = i, t.canvas.style.backgroundSize = "contain", t.currentBackground = e
                                }
                        }()
                    }, function(t, e) {
                        var i = {};
                        t.exports = i, i.create = function(t) {
                            return {
                                id: i.id(t),
                                vertex: t,
                                normalImpulse: 0,
                                tangentImpulse: 0
                            }
                        }, i.id = function(t) {
                            return t.body.id + "_" + t.index
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(7),
                            s = i(19),
                            a = i(13),
                            o = i(20),
                            h = i(21),
                            l = i(4),
                            c = i(5),
                            u = i(8),
                            d = i(0),
                            p = i(6);
                        n.create = function(t) {
                            t = t || {};
                            var e = d.extend({
                                positionIterations: 6,
                                velocityIterations: 4,
                                constraintIterations: 2,
                                enableSleeping: !1,
                                events: [],
                                plugin: {},
                                grid: null,
                                gravity: {
                                    x: 0,
                                    y: 1,
                                    scale: .001
                                },
                                timing: {
                                    timestamp: 0,
                                    timeScale: 1,
                                    lastDelta: 0,
                                    lastElapsed: 0
                                }
                            }, t);
                            return e.world = t.world || c.create({
                                label: "World"
                            }), e.grid = h.create(t.grid || t.broadphase), e.pairs = o.create(), e.world.gravity = e.gravity, e.broadphase = e.grid, e.metrics = {}, e
                        }, n.update = function(t, e, i) {
                            var p = d.now();
                            e = e || 1e3 / 60, i = i || 1;
                            var f, g, m = t.world,
                                v = t.timing,
                                _ = t.grid;
                            v.timestamp += e * v.timeScale, v.lastDelta = e * v.timeScale;
                            var y = {
                                timestamp: v.timestamp
                            };
                            l.trigger(t, "beforeUpdate", y);
                            var x = c.allBodies(m),
                                b = c.allConstraints(m);
                            for (t.enableSleeping && r.update(x, v.timeScale), n._bodiesApplyGravity(x, t.gravity), n._bodiesUpdate(x, e, v.timeScale, i, m.bounds), u.preSolveAll(x), g = 0; g < t.constraintIterations; g++) u.solveAll(b, v.timeScale);
                            u.postSolveAll(x), m.isModified && h.clear(_), h.update(_, x, t, m.isModified), f = _.pairsList, m.isModified && c.setModified(m, !1, !1, !0);
                            var w = a.collisions(f, t),
                                S = t.pairs,
                                C = v.timestamp;
                            for (o.update(S, w, C), o.removeOld(S, C), t.enableSleeping && r.afterCollisions(S.list, v.timeScale), S.collisionStart.length > 0 && l.trigger(t, "collisionStart", {
                                    pairs: S.collisionStart
                                }), s.preSolvePosition(S.list), g = 0; g < t.positionIterations; g++) s.solvePosition(S.list, v.timeScale);
                            for (s.postSolvePosition(x), u.preSolveAll(x), g = 0; g < t.constraintIterations; g++) u.solveAll(b, v.timeScale);
                            for (u.postSolveAll(x), s.preSolveVelocity(S.list), g = 0; g < t.velocityIterations; g++) s.solveVelocity(S.list, v.timeScale);
                            return S.collisionActive.length > 0 && l.trigger(t, "collisionActive", {
                                pairs: S.collisionActive
                            }), S.collisionEnd.length > 0 && l.trigger(t, "collisionEnd", {
                                pairs: S.collisionEnd
                            }), n._bodiesClearForces(x), l.trigger(t, "afterUpdate", y), t.timing.lastElapsed = d.now() - p, t
                        }, n.merge = function(t, e) {
                            if (d.extend(t, e), e.world) {
                                t.world = e.world, n.clear(t);
                                for (var i = c.allBodies(t.world), s = 0; s < i.length; s++) {
                                    var a = i[s];
                                    r.set(a, !1), a.id = d.nextId()
                                }
                            }
                        }, n.clear = function(t) {
                            var e = t.world,
                                i = c.allBodies(e);
                            o.clear(t.pairs), h.clear(t.grid), h.update(t.grid, i, t, !0)
                        }, n._bodiesClearForces = function(t) {
                            for (var e = 0; e < t.length; e++) {
                                var i = t[e];
                                i.force.x = 0, i.force.y = 0, i.torque = 0
                            }
                        }, n._bodiesApplyGravity = function(t, e) {
                            var i = void 0 !== e.scale ? e.scale : .001;
                            if ((0 !== e.x || 0 !== e.y) && 0 !== i)
                                for (var n = 0; n < t.length; n++) {
                                    var r = t[n];
                                    r.isStatic || r.isSleeping || (r.force.y += r.mass * e.y * i, r.force.x += r.mass * e.x * i)
                                }
                        }, n._bodiesUpdate = function(t, e, i, n, r) {
                            for (var s = 0; s < t.length; s++) {
                                var a = t[s];
                                a.isStatic || a.isSleeping || p.update(a, e, i, n)
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(2),
                            a = i(0),
                            o = i(1);
                        n._restingThresh = 4, n._restingThreshTangent = 6, n._positionDampen = .9, n._positionWarming = .8, n._frictionNormalMultiplier = 5, n.preSolvePosition = function(t) {
                            var e, i, n;
                            for (e = 0; e < t.length; e++)(i = t[e]).isActive && (n = i.activeContacts.length, i.collision.parentA.totalContacts += n, i.collision.parentB.totalContacts += n)
                        }, n.solvePosition = function(t, e) {
                            var i, r, a, o, h, l, c, u, d, p = s._temp[0],
                                f = s._temp[1],
                                g = s._temp[2],
                                m = s._temp[3];
                            for (i = 0; i < t.length; i++)(r = t[i]).isActive && !r.isSensor && (o = (a = r.collision).parentA, h = a.parentB, l = a.normal, c = s.sub(s.add(h.positionImpulse, h.position, p), s.add(o.positionImpulse, s.sub(h.position, a.penetration, f), g), m), r.separation = s.dot(l, c));
                            for (i = 0; i < t.length; i++)(r = t[i]).isActive && !r.isSensor && (o = (a = r.collision).parentA, h = a.parentB, l = a.normal, d = (r.separation - r.slop) * e, (o.isStatic || h.isStatic) && (d *= 2), o.isStatic || o.isSleeping || (u = n._positionDampen / o.totalContacts, o.positionImpulse.x += l.x * d * u, o.positionImpulse.y += l.y * d * u), h.isStatic || h.isSleeping || (u = n._positionDampen / h.totalContacts, h.positionImpulse.x -= l.x * d * u, h.positionImpulse.y -= l.y * d * u))
                        }, n.postSolvePosition = function(t) {
                            for (var e = 0; e < t.length; e++) {
                                var i = t[e];
                                if (i.totalContacts = 0, 0 !== i.positionImpulse.x || 0 !== i.positionImpulse.y) {
                                    for (var a = 0; a < i.parts.length; a++) {
                                        var h = i.parts[a];
                                        r.translate(h.vertices, i.positionImpulse), o.update(h.bounds, h.vertices, i.velocity), h.position.x += i.positionImpulse.x, h.position.y += i.positionImpulse.y
                                    }
                                    i.positionPrev.x += i.positionImpulse.x, i.positionPrev.y += i.positionImpulse.y, s.dot(i.positionImpulse, i.velocity) < 0 ? (i.positionImpulse.x = 0, i.positionImpulse.y = 0) : (i.positionImpulse.x *= n._positionWarming, i.positionImpulse.y *= n._positionWarming)
                                }
                            }
                        }, n.preSolveVelocity = function(t) {
                            var e, i, n, r, a, o, h, l, c, u, d, p, f, g, m = s._temp[0],
                                v = s._temp[1];
                            for (e = 0; e < t.length; e++)
                                if ((n = t[e]).isActive && !n.isSensor)
                                    for (r = n.activeContacts, o = (a = n.collision).parentA, h = a.parentB, l = a.normal, c = a.tangent, i = 0; i < r.length; i++) d = (u = r[i]).vertex, p = u.normalImpulse, f = u.tangentImpulse, 0 === p && 0 === f || (m.x = l.x * p + c.x * f, m.y = l.y * p + c.y * f, o.isStatic || o.isSleeping || (g = s.sub(d, o.position, v), o.positionPrev.x += m.x * o.inverseMass, o.positionPrev.y += m.y * o.inverseMass, o.anglePrev += s.cross(g, m) * o.inverseInertia), h.isStatic || h.isSleeping || (g = s.sub(d, h.position, v), h.positionPrev.x -= m.x * h.inverseMass, h.positionPrev.y -= m.y * h.inverseMass, h.anglePrev -= s.cross(g, m) * h.inverseInertia))
                        }, n.solveVelocity = function(t, e) {
                            for (var i = e * e, r = s._temp[0], o = s._temp[1], h = s._temp[2], l = s._temp[3], c = s._temp[4], u = s._temp[5], d = 0; d < t.length; d++) {
                                var p = t[d];
                                if (p.isActive && !p.isSensor) {
                                    var f = p.collision,
                                        g = f.parentA,
                                        m = f.parentB,
                                        v = f.normal,
                                        _ = f.tangent,
                                        y = p.activeContacts,
                                        x = 1 / y.length;
                                    g.velocity.x = g.position.x - g.positionPrev.x, g.velocity.y = g.position.y - g.positionPrev.y, m.velocity.x = m.position.x - m.positionPrev.x, m.velocity.y = m.position.y - m.positionPrev.y, g.angularVelocity = g.angle - g.anglePrev, m.angularVelocity = m.angle - m.anglePrev;
                                    for (var b = 0; b < y.length; b++) {
                                        var w = y[b],
                                            S = w.vertex,
                                            C = s.sub(S, g.position, o),
                                            k = s.sub(S, m.position, h),
                                            A = s.add(g.velocity, s.mult(s.perp(C), g.angularVelocity), l),
                                            P = s.add(m.velocity, s.mult(s.perp(k), m.angularVelocity), c),
                                            M = s.sub(A, P, u),
                                            T = s.dot(v, M),
                                            E = s.dot(_, M),
                                            I = Math.abs(E),
                                            O = a.sign(E),
                                            L = (1 + p.restitution) * T,
                                            D = a.clamp(p.separation + T, 0, 1) * n._frictionNormalMultiplier,
                                            B = E,
                                            R = 1 / 0;
                                        I > p.friction * p.frictionStatic * D * i && (R = I, B = a.clamp(p.friction * O * i, -R, R));
                                        var z = s.cross(C, v),
                                            N = s.cross(k, v),
                                            V = x / (g.inverseMass + m.inverseMass + g.inverseInertia * z * z + m.inverseInertia * N * N);
                                        if (L *= V, B *= V, T < 0 && T * T > n._restingThresh * i) w.normalImpulse = 0;
                                        else {
                                            var F = w.normalImpulse;
                                            w.normalImpulse = Math.min(w.normalImpulse + L, 0), L = w.normalImpulse - F
                                        }
                                        if (E * E > n._restingThreshTangent * i) w.tangentImpulse = 0;
                                        else {
                                            var j = w.tangentImpulse;
                                            w.tangentImpulse = a.clamp(w.tangentImpulse + B, -R, R), B = w.tangentImpulse - j
                                        }
                                        r.x = v.x * L + _.x * B, r.y = v.y * L + _.y * B, g.isStatic || g.isSleeping || (g.positionPrev.x += r.x * g.inverseMass, g.positionPrev.y += r.y * g.inverseMass, g.anglePrev += s.cross(C, r) * g.inverseInertia), m.isStatic || m.isSleeping || (m.positionPrev.x -= r.x * m.inverseMass, m.positionPrev.y -= r.y * m.inverseMass, m.anglePrev -= s.cross(k, r) * m.inverseInertia)
                                    }
                                }
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(9),
                            s = i(0);
                        n._pairMaxIdleLife = 1e3, n.create = function(t) {
                            return s.extend({
                                table: {},
                                list: [],
                                collisionStart: [],
                                collisionActive: [],
                                collisionEnd: []
                            }, t)
                        }, n.update = function(t, e, i) {
                            var n, s, a, o, h = t.list,
                                l = t.table,
                                c = t.collisionStart,
                                u = t.collisionEnd,
                                d = t.collisionActive;
                            for (c.length = 0, u.length = 0, d.length = 0, o = 0; o < h.length; o++) h[o].confirmedActive = !1;
                            for (o = 0; o < e.length; o++)(n = e[o]).collided && ((a = l[s = r.id(n.bodyA, n.bodyB)]) ? (a.isActive ? d.push(a) : c.push(a), r.update(a, n, i), a.confirmedActive = !0) : (a = r.create(n, i), l[s] = a, c.push(a), h.push(a)));
                            for (o = 0; o < h.length; o++)(a = h[o]).isActive && !a.confirmedActive && (r.setActive(a, !1, i), u.push(a))
                        }, n.removeOld = function(t, e) {
                            var i, r, s, a, o = t.list,
                                h = t.table,
                                l = [];
                            for (a = 0; a < o.length; a++)(r = (i = o[a]).collision).bodyA.isSleeping || r.bodyB.isSleeping ? i.timeUpdated = e : e - i.timeUpdated > n._pairMaxIdleLife && l.push(a);
                            for (a = 0; a < l.length; a++) delete h[(i = o[s = l[a] - a]).id], o.splice(s, 1)
                        }, n.clear = function(t) {
                            return t.table = {}, t.list.length = 0, t.collisionStart.length = 0, t.collisionActive.length = 0, t.collisionEnd.length = 0, t
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(9),
                            s = i(0);
                        n.create = function(t) {
                            return s.extend({
                                buckets: {},
                                pairs: {},
                                pairsList: [],
                                bucketWidth: 48,
                                bucketHeight: 48
                            }, t)
                        }, n.update = function(t, e, i, r) {
                            var s, a, o, h, l, c = i.world,
                                u = t.buckets,
                                d = !1;
                            for (s = 0; s < e.length; s++) {
                                var p = e[s];
                                if ((!p.isSleeping || r) && (!c.bounds || !(p.bounds.max.x < c.bounds.min.x || p.bounds.min.x > c.bounds.max.x || p.bounds.max.y < c.bounds.min.y || p.bounds.min.y > c.bounds.max.y))) {
                                    var f = n._getRegion(t, p);
                                    if (!p.region || f.id !== p.region.id || r) {
                                        p.region && !r || (p.region = f);
                                        var g = n._regionUnion(f, p.region);
                                        for (a = g.startCol; a <= g.endCol; a++)
                                            for (o = g.startRow; o <= g.endRow; o++) {
                                                h = u[l = n._getBucketId(a, o)];
                                                var m = a >= f.startCol && a <= f.endCol && o >= f.startRow && o <= f.endRow,
                                                    v = a >= p.region.startCol && a <= p.region.endCol && o >= p.region.startRow && o <= p.region.endRow;
                                                !m && v && v && h && n._bucketRemoveBody(t, h, p), (p.region === f || m && !v || r) && (h || (h = n._createBucket(u, l)), n._bucketAddBody(t, h, p))
                                            }
                                        p.region = f, d = !0
                                    }
                                }
                            }
                            d && (t.pairsList = n._createActivePairsList(t))
                        }, n.clear = function(t) {
                            t.buckets = {}, t.pairs = {}, t.pairsList = []
                        }, n._regionUnion = function(t, e) {
                            var i = Math.min(t.startCol, e.startCol),
                                r = Math.max(t.endCol, e.endCol),
                                s = Math.min(t.startRow, e.startRow),
                                a = Math.max(t.endRow, e.endRow);
                            return n._createRegion(i, r, s, a)
                        }, n._getRegion = function(t, e) {
                            var i = e.bounds,
                                r = Math.floor(i.min.x / t.bucketWidth),
                                s = Math.floor(i.max.x / t.bucketWidth),
                                a = Math.floor(i.min.y / t.bucketHeight),
                                o = Math.floor(i.max.y / t.bucketHeight);
                            return n._createRegion(r, s, a, o)
                        }, n._createRegion = function(t, e, i, n) {
                            return {
                                id: t + "," + e + "," + i + "," + n,
                                startCol: t,
                                endCol: e,
                                startRow: i,
                                endRow: n
                            }
                        }, n._getBucketId = function(t, e) {
                            return "C" + t + "R" + e
                        }, n._createBucket = function(t, e) {
                            return t[e] = []
                        }, n._bucketAddBody = function(t, e, i) {
                            for (var n = 0; n < e.length; n++) {
                                var s = e[n];
                                if (!(i.id === s.id || i.isStatic && s.isStatic)) {
                                    var a = r.id(i, s),
                                        o = t.pairs[a];
                                    o ? o[2] += 1 : t.pairs[a] = [i, s, 1]
                                }
                            }
                            e.push(i)
                        }, n._bucketRemoveBody = function(t, e, i) {
                            e.splice(s.indexOf(e, i), 1);
                            for (var n = 0; n < e.length; n++) {
                                var a = e[n],
                                    o = r.id(i, a),
                                    h = t.pairs[o];
                                h && (h[2] -= 1)
                            }
                        }, n._createActivePairsList = function(t) {
                            var e, i, n = [];
                            e = s.keys(t.pairs);
                            for (var r = 0; r < e.length; r++)(i = t.pairs[e[r]])[2] > 0 ? n.push(i) : delete t.pairs[e[r]];
                            return n
                        }
                    }, function(t, e, i) {
                        var n = t.exports = i(23);
                        n.Axes = i(10), n.Bodies = i(11), n.Body = i(6), n.Bounds = i(1), n.Common = i(0), n.Composite = i(5), n.Composites = i(24), n.Constraint = i(8), n.Contact = i(17), n.Detector = i(13), n.Engine = i(18), n.Events = i(4), n.Grid = i(21), n.Mouse = i(12), n.MouseConstraint = i(25), n.Pair = i(9), n.Pairs = i(20), n.Plugin = i(15), n.Query = i(26), n.Render = i(16), n.Resolver = i(19), n.Runner = i(27), n.SAT = i(14), n.Sleeping = i(7), n.Svg = i(28), n.Vector = i(2), n.Vertices = i(3), n.World = i(29), n.Engine.run = n.Runner.run, n.Common.deprecated(n.Engine, "run", "Engine.run ➤ use Matter.Runner.run(engine) instead")
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(15),
                            s = i(0);
                        n.name = "matter-js", n.version = "0.17.1", n.uses = [], n.used = [], n.use = function() {
                            r.use(n, Array.prototype.slice.call(arguments))
                        }, n.before = function(t, e) {
                            return t = t.replace(/^Matter./, ""), s.chainPathBefore(n, t, e)
                        }, n.after = function(t, e) {
                            return t = t.replace(/^Matter./, ""), s.chainPathAfter(n, t, e)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(5),
                            s = i(8),
                            a = i(0),
                            o = i(6),
                            h = i(11),
                            l = a.deprecated;
                        n.stack = function(t, e, i, n, s, a, h) {
                            for (var l, c = r.create({
                                    label: "Stack"
                                }), u = t, d = e, p = 0, f = 0; f < n; f++) {
                                for (var g = 0, m = 0; m < i; m++) {
                                    var v = h(u, d, m, f, l, p);
                                    if (v) {
                                        var _ = v.bounds.max.y - v.bounds.min.y,
                                            y = v.bounds.max.x - v.bounds.min.x;
                                        _ > g && (g = _), o.translate(v, {
                                            x: .5 * y,
                                            y: .5 * _
                                        }), u = v.bounds.max.x + s, r.addBody(c, v), l = v, p += 1
                                    } else u += s
                                }
                                d += g + a, u = t
                            }
                            return c
                        }, n.chain = function(t, e, i, n, o, h) {
                            for (var l = t.bodies, c = 1; c < l.length; c++) {
                                var u = l[c - 1],
                                    d = l[c],
                                    p = u.bounds.max.y - u.bounds.min.y,
                                    f = u.bounds.max.x - u.bounds.min.x,
                                    g = d.bounds.max.y - d.bounds.min.y,
                                    m = {
                                        bodyA: u,
                                        pointA: {
                                            x: f * e,
                                            y: p * i
                                        },
                                        bodyB: d,
                                        pointB: {
                                            x: (d.bounds.max.x - d.bounds.min.x) * n,
                                            y: g * o
                                        }
                                    },
                                    v = a.extend(m, h);
                                r.addConstraint(t, s.create(v))
                            }
                            return t.label += " Chain", t
                        }, n.mesh = function(t, e, i, n, o) {
                            var h, l, c, u, d, p = t.bodies;
                            for (h = 0; h < i; h++) {
                                for (l = 1; l < e; l++) c = p[l - 1 + h * e], u = p[l + h * e], r.addConstraint(t, s.create(a.extend({
                                    bodyA: c,
                                    bodyB: u
                                }, o)));
                                if (h > 0)
                                    for (l = 0; l < e; l++) c = p[l + (h - 1) * e], u = p[l + h * e], r.addConstraint(t, s.create(a.extend({
                                        bodyA: c,
                                        bodyB: u
                                    }, o))), n && l > 0 && (d = p[l - 1 + (h - 1) * e], r.addConstraint(t, s.create(a.extend({
                                        bodyA: d,
                                        bodyB: u
                                    }, o)))), n && l < e - 1 && (d = p[l + 1 + (h - 1) * e], r.addConstraint(t, s.create(a.extend({
                                        bodyA: d,
                                        bodyB: u
                                    }, o))))
                            }
                            return t.label += " Mesh", t
                        }, n.pyramid = function(t, e, i, r, s, a, h) {
                            return n.stack(t, e, i, r, s, a, (function(e, n, a, l, c, u) {
                                var d = Math.min(r, Math.ceil(i / 2)),
                                    p = c ? c.bounds.max.x - c.bounds.min.x : 0;
                                if (!(l > d || a < (l = d - l) || a > i - 1 - l)) return 1 === u && o.translate(c, {
                                    x: (a + (i % 2 == 1 ? 1 : -1)) * p,
                                    y: 0
                                }), h(t + (c ? a * p : 0) + a * s, n, a, l, c, u)
                            }))
                        }, n.newtonsCradle = function(t, e, i, n, a) {
                            for (var o = r.create({
                                    label: "Newtons Cradle"
                                }), l = 0; l < i; l++) {
                                var c = h.circle(t + l * (1.9 * n), e + a, n, {
                                        inertia: 1 / 0,
                                        restitution: 1,
                                        friction: 0,
                                        frictionAir: 1e-4,
                                        slop: 1
                                    }),
                                    u = s.create({
                                        pointA: {
                                            x: t + l * (1.9 * n),
                                            y: e
                                        },
                                        bodyB: c
                                    });
                                r.addBody(o, c), r.addConstraint(o, u)
                            }
                            return o
                        }, l(n, "newtonsCradle", "Composites.newtonsCradle ➤ moved to newtonsCradle example"), n.car = function(t, e, i, n, a) {
                            var l = o.nextGroup(!0),
                                c = .5 * -i + 20,
                                u = .5 * i - 20,
                                d = r.create({
                                    label: "Car"
                                }),
                                p = h.rectangle(t, e, i, n, {
                                    collisionFilter: {
                                        group: l
                                    },
                                    chamfer: {
                                        radius: .5 * n
                                    },
                                    density: 2e-4
                                }),
                                f = h.circle(t + c, e + 0, a, {
                                    collisionFilter: {
                                        group: l
                                    },
                                    friction: .8
                                }),
                                g = h.circle(t + u, e + 0, a, {
                                    collisionFilter: {
                                        group: l
                                    },
                                    friction: .8
                                }),
                                m = s.create({
                                    bodyB: p,
                                    pointB: {
                                        x: c,
                                        y: 0
                                    },
                                    bodyA: f,
                                    stiffness: 1,
                                    length: 0
                                }),
                                v = s.create({
                                    bodyB: p,
                                    pointB: {
                                        x: u,
                                        y: 0
                                    },
                                    bodyA: g,
                                    stiffness: 1,
                                    length: 0
                                });
                            return r.addBody(d, p), r.addBody(d, f), r.addBody(d, g), r.addConstraint(d, m), r.addConstraint(d, v), d
                        }, l(n, "car", "Composites.car ➤ moved to car example"), n.softBody = function(t, e, i, r, s, o, l, c, u, d) {
                            u = a.extend({
                                inertia: 1 / 0
                            }, u), d = a.extend({
                                stiffness: .2,
                                render: {
                                    type: "line",
                                    anchors: !1
                                }
                            }, d);
                            var p = n.stack(t, e, i, r, s, o, (function(t, e) {
                                return h.circle(t, e, c, u)
                            }));
                            return n.mesh(p, i, r, l, d), p.label = "Soft Body", p
                        }, l(n, "softBody", "Composites.softBody ➤ moved to softBody and cloth examples")
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(3),
                            s = i(7),
                            a = i(12),
                            o = i(4),
                            h = i(13),
                            l = i(8),
                            c = i(5),
                            u = i(0),
                            d = i(1);
                        n.create = function(t, e) {
                            var i = (t ? t.mouse : null) || (e ? e.mouse : null);
                            i || (t && t.render && t.render.canvas ? i = a.create(t.render.canvas) : e && e.element ? i = a.create(e.element) : (i = a.create(), u.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected")));
                            var r = {
                                    type: "mouseConstraint",
                                    mouse: i,
                                    element: null,
                                    body: null,
                                    constraint: l.create({
                                        label: "Mouse Constraint",
                                        pointA: i.position,
                                        pointB: {
                                            x: 0,
                                            y: 0
                                        },
                                        length: .01,
                                        stiffness: .1,
                                        angularStiffness: 1,
                                        render: {
                                            strokeStyle: "#90EE90",
                                            lineWidth: 3
                                        }
                                    }),
                                    collisionFilter: {
                                        category: 1,
                                        mask: 4294967295,
                                        group: 0
                                    }
                                },
                                s = u.extend(r, e);
                            return o.on(t, "beforeUpdate", (function() {
                                var e = c.allBodies(t.world);
                                n.update(s, e), n._triggerEvents(s)
                            })), s
                        }, n.update = function(t, e) {
                            var i = t.mouse,
                                n = t.constraint,
                                a = t.body;
                            if (0 === i.button) {
                                if (n.bodyB) s.set(n.bodyB, !1), n.pointA = i.position;
                                else
                                    for (var l = 0; l < e.length; l++)
                                        if (a = e[l], d.contains(a.bounds, i.position) && h.canCollide(a.collisionFilter, t.collisionFilter))
                                            for (var c = a.parts.length > 1 ? 1 : 0; c < a.parts.length; c++) {
                                                var u = a.parts[c];
                                                if (r.contains(u.vertices, i.position)) {
                                                    n.pointA = i.position, n.bodyB = t.body = a, n.pointB = {
                                                        x: i.position.x - a.position.x,
                                                        y: i.position.y - a.position.y
                                                    }, n.angleB = a.angle, s.set(a, !1), o.trigger(t, "startdrag", {
                                                        mouse: i,
                                                        body: a
                                                    });
                                                    break
                                                }
                                            }
                            } else n.bodyB = t.body = null, n.pointB = null, a && o.trigger(t, "enddrag", {
                                mouse: i,
                                body: a
                            })
                        }, n._triggerEvents = function(t) {
                            var e = t.mouse,
                                i = e.sourceEvents;
                            i.mousemove && o.trigger(t, "mousemove", {
                                mouse: e
                            }), i.mousedown && o.trigger(t, "mousedown", {
                                mouse: e
                            }), i.mouseup && o.trigger(t, "mouseup", {
                                mouse: e
                            }), a.clearSourceEvents(e)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(2),
                            s = i(14),
                            a = i(1),
                            o = i(11),
                            h = i(3);
                        n.collides = function(t, e) {
                            for (var i = [], n = 0; n < e.length; n++) {
                                var r = e[n];
                                if (a.overlaps(r.bounds, t.bounds))
                                    for (var o = 1 === r.parts.length ? 0 : 1; o < r.parts.length; o++) {
                                        var h = r.parts[o];
                                        if (a.overlaps(h.bounds, t.bounds)) {
                                            var l = s.collides(h, t);
                                            if (l.collided) {
                                                i.push(l);
                                                break
                                            }
                                        }
                                    }
                            }
                            return i
                        }, n.ray = function(t, e, i, s) {
                            s = s || 1e-100;
                            for (var a = r.angle(e, i), h = r.magnitude(r.sub(e, i)), l = .5 * (i.x + e.x), c = .5 * (i.y + e.y), u = o.rectangle(l, c, h, s, {
                                    angle: a
                                }), d = n.collides(u, t), p = 0; p < d.length; p += 1) {
                                var f = d[p];
                                f.body = f.bodyB = f.bodyA
                            }
                            return d
                        }, n.region = function(t, e, i) {
                            for (var n = [], r = 0; r < t.length; r++) {
                                var s = t[r],
                                    o = a.overlaps(s.bounds, e);
                                (o && !i || !o && i) && n.push(s)
                            }
                            return n
                        }, n.point = function(t, e) {
                            for (var i = [], n = 0; n < t.length; n++) {
                                var r = t[n];
                                if (a.contains(r.bounds, e))
                                    for (var s = 1 === r.parts.length ? 0 : 1; s < r.parts.length; s++) {
                                        var o = r.parts[s];
                                        if (a.contains(o.bounds, e) && h.contains(o.vertices, e)) {
                                            i.push(r);
                                            break
                                        }
                                    }
                            }
                            return i
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r, s, a, o = i(4),
                            h = i(18),
                            l = i(0);
                        "undefined" != typeof window && (r = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame, s = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame), r || (r = function(t) {
                            a = setTimeout((function() {
                                t(l.now())
                            }), 1e3 / 60)
                        }, s = function() {
                            clearTimeout(a)
                        }), n.create = function(t) {
                            var e = l.extend({
                                fps: 60,
                                correction: 1,
                                deltaSampleSize: 60,
                                counterTimestamp: 0,
                                frameCounter: 0,
                                deltaHistory: [],
                                timePrev: null,
                                timeScalePrev: 1,
                                frameRequestId: null,
                                isFixed: !1,
                                enabled: !0
                            }, t);
                            return e.delta = e.delta || 1e3 / e.fps, e.deltaMin = e.deltaMin || 1e3 / e.fps, e.deltaMax = e.deltaMax || 1e3 / (.5 * e.fps), e.fps = 1e3 / e.delta, e
                        }, n.run = function(t, e) {
                            return void 0 !== t.positionIterations && (e = t, t = n.create()),
                                function i(s) {
                                    t.frameRequestId = r(i), s && t.enabled && n.tick(t, e, s)
                                }(), t
                        }, n.tick = function(t, e, i) {
                            var n, r = e.timing,
                                s = 1,
                                a = {
                                    timestamp: r.timestamp
                                };
                            o.trigger(t, "beforeTick", a), t.isFixed ? n = t.delta : (n = i - t.timePrev || t.delta, t.timePrev = i, t.deltaHistory.push(n), t.deltaHistory = t.deltaHistory.slice(-t.deltaSampleSize), s = (n = (n = (n = Math.min.apply(null, t.deltaHistory)) < t.deltaMin ? t.deltaMin : n) > t.deltaMax ? t.deltaMax : n) / t.delta, t.delta = n), 0 !== t.timeScalePrev && (s *= r.timeScale / t.timeScalePrev), 0 === r.timeScale && (s = 0), t.timeScalePrev = r.timeScale, t.correction = s, t.frameCounter += 1, i - t.counterTimestamp >= 1e3 && (t.fps = t.frameCounter * ((i - t.counterTimestamp) / 1e3), t.counterTimestamp = i, t.frameCounter = 0), o.trigger(t, "tick", a), o.trigger(t, "beforeUpdate", a), h.update(e, n, s), o.trigger(t, "afterUpdate", a), o.trigger(t, "afterTick", a)
                        }, n.stop = function(t) {
                            s(t.frameRequestId)
                        }, n.start = function(t, e) {
                            n.run(t, e)
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n, i(1);
                        var r = i(0);
                        n.pathToVertices = function(t, e) {
                            "undefined" == typeof window || "SVGPathSeg" in window || r.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");
                            var i, s, a, o, h, l, c, u, d, p, f, g = [],
                                m = 0,
                                v = 0,
                                _ = 0;
                            e = e || 15;
                            var y = function(t, e, i) {
                                    var n = i % 2 == 1 && i > 1;
                                    if (!d || t != d.x || e != d.y) {
                                        d && n ? (p = d.x, f = d.y) : (p = 0, f = 0);
                                        var r = {
                                            x: p + t,
                                            y: f + e
                                        };
                                        !n && d || (d = r), g.push(r), v = p + t, _ = f + e
                                    }
                                },
                                x = function(t) {
                                    var e = t.pathSegTypeAsLetter.toUpperCase();
                                    if ("Z" !== e) {
                                        switch (e) {
                                            case "M":
                                            case "L":
                                            case "T":
                                            case "C":
                                            case "S":
                                            case "Q":
                                                v = t.x, _ = t.y;
                                                break;
                                            case "H":
                                                v = t.x;
                                                break;
                                            case "V":
                                                _ = t.y
                                        }
                                        y(v, _, t.pathSegType)
                                    }
                                };
                            for (n._svgPathToAbsolute(t), a = t.getTotalLength(), l = [], i = 0; i < t.pathSegList.numberOfItems; i += 1) l.push(t.pathSegList.getItem(i));
                            for (c = l.concat(); m < a;) {
                                if ((h = l[t.getPathSegAtLength(m)]) != u) {
                                    for (; c.length && c[0] != h;) x(c.shift());
                                    u = h
                                }
                                switch (h.pathSegTypeAsLetter.toUpperCase()) {
                                    case "C":
                                    case "T":
                                    case "S":
                                    case "Q":
                                    case "A":
                                        o = t.getPointAtLength(m), y(o.x, o.y, 0)
                                }
                                m += e
                            }
                            for (i = 0, s = c.length; i < s; ++i) x(c[i]);
                            return g
                        }, n._svgPathToAbsolute = function(t) {
                            for (var e, i, n, r, s, a, o = t.pathSegList, h = 0, l = 0, c = o.numberOfItems, u = 0; u < c; ++u) {
                                var d = o.getItem(u),
                                    p = d.pathSegTypeAsLetter;
                                if (/[MLHVCSQTA]/.test(p)) "x" in d && (h = d.x), "y" in d && (l = d.y);
                                else switch ("x1" in d && (n = h + d.x1), "x2" in d && (s = h + d.x2), "y1" in d && (r = l + d.y1), "y2" in d && (a = l + d.y2), "x" in d && (h += d.x), "y" in d && (l += d.y), p) {
                                    case "m":
                                        o.replaceItem(t.createSVGPathSegMovetoAbs(h, l), u);
                                        break;
                                    case "l":
                                        o.replaceItem(t.createSVGPathSegLinetoAbs(h, l), u);
                                        break;
                                    case "h":
                                        o.replaceItem(t.createSVGPathSegLinetoHorizontalAbs(h), u);
                                        break;
                                    case "v":
                                        o.replaceItem(t.createSVGPathSegLinetoVerticalAbs(l), u);
                                        break;
                                    case "c":
                                        o.replaceItem(t.createSVGPathSegCurvetoCubicAbs(h, l, n, r, s, a), u);
                                        break;
                                    case "s":
                                        o.replaceItem(t.createSVGPathSegCurvetoCubicSmoothAbs(h, l, s, a), u);
                                        break;
                                    case "q":
                                        o.replaceItem(t.createSVGPathSegCurvetoQuadraticAbs(h, l, n, r), u);
                                        break;
                                    case "t":
                                        o.replaceItem(t.createSVGPathSegCurvetoQuadraticSmoothAbs(h, l), u);
                                        break;
                                    case "a":
                                        o.replaceItem(t.createSVGPathSegArcAbs(h, l, d.r1, d.r2, d.angle, d.largeArcFlag, d.sweepFlag), u);
                                        break;
                                    case "z":
                                    case "Z":
                                        h = e, l = i
                                }
                                "M" != p && "m" != p || (e = h, i = l)
                            }
                        }
                    }, function(t, e, i) {
                        var n = {};
                        t.exports = n;
                        var r = i(5);
                        i(0), n.create = r.create, n.add = r.add, n.remove = r.remove, n.clear = r.clear, n.addComposite = r.addComposite, n.addBody = r.addBody, n.addConstraint = r.addConstraint
                    }])
                }, t.exports = n()
            },
            267: function(t, e, i) {
                var n, r, s;
                (function(a, o) {
                    var h = (a = a || i(158)).window,
                        l = a.document,
                        c = new function() {
                            var t = /^(statics|enumerable|beans|preserve)$/,
                                e = [],
                                i = e.slice,
                                n = Object.create,
                                r = Object.getOwnPropertyDescriptor,
                                s = Object.defineProperty,
                                a = e.forEach || function(t, e) {
                                    for (var i = 0, n = this.length; i < n; i++) t.call(e, this[i], i, this)
                                },
                                h = function(t, e) {
                                    for (var i in this) this.hasOwnProperty(i) && t.call(e, this[i], i, this)
                                },
                                l = Object.assign || function(t) {
                                    for (var e = 1, i = arguments.length; e < i; e++) {
                                        var n = arguments[e];
                                        for (var r in n) n.hasOwnProperty(r) && (t[r] = n[r])
                                    }
                                    return t
                                },
                                c = function(t, e, i) {
                                    if (t) {
                                        var n = r(t, "length");
                                        (n && "number" == typeof n.value ? a : h).call(t, e, i = i || t)
                                    }
                                    return i
                                };

                            function u(e, i, n, a, o) {
                                var h = {};

                                function l(t, l) {
                                    "string" == typeof(l = l || (l = r(i, t)) && (l.get ? l : l.value)) && "#" === l[0] && (l = e[l.substring(1)] || l);
                                    var c, u = "function" == typeof l,
                                        p = l,
                                        f = o || u && !l.base ? l && l.get ? t in e : e[t] : null;
                                    o && f || (u && f && (l.base = f), u && !1 !== a && (c = t.match(/^([gs]et|is)(([A-Z])(.*))$/)) && (h[c[3].toLowerCase() + c[4]] = c[2]), p && !u && p.get && "function" == typeof p.get && d.isPlainObject(p) || (p = {
                                        value: p,
                                        writable: !0
                                    }), (r(e, t) || {
                                        configurable: !0
                                    }).configurable && (p.configurable = !0, p.enumerable = null != n ? n : !c), s(e, t, p))
                                }
                                if (i) {
                                    for (var c in i) i.hasOwnProperty(c) && !t.test(c) && l(c);
                                    for (var c in h) {
                                        var u = h[c],
                                            p = e["set" + u],
                                            f = e["get" + u] || p && e["is" + u];
                                        !f || !0 !== a && 0 !== f.length || l(c, {
                                            get: f,
                                            set: p
                                        })
                                    }
                                }
                                return e
                            }

                            function d() {
                                for (var t = 0, e = arguments.length; t < e; t++) {
                                    var i = arguments[t];
                                    i && l(this, i)
                                }
                                return this
                            }
                            return u(d, {
                                inject: function(t) {
                                    if (t) {
                                        var e = !0 === t.statics ? t : t.statics,
                                            i = t.beans,
                                            n = t.preserve;
                                        e !== t && u(this.prototype, t, t.enumerable, i, n), u(this, e, null, i, n)
                                    }
                                    for (var r = 1, s = arguments.length; r < s; r++) this.inject(arguments[r]);
                                    return this
                                },
                                extend: function() {
                                    for (var t, e, i, r = this, a = 0, o = arguments.length; a < o && (!t || !e); a++) i = arguments[a], t = t || i.initialize, e = e || i.prototype;
                                    return e = (t = t || function() {
                                        r.apply(this, arguments)
                                    }).prototype = e || n(this.prototype), s(e, "constructor", {
                                        value: t,
                                        writable: !0,
                                        configurable: !0
                                    }), u(t, this), arguments.length && this.inject.apply(t, arguments), t.base = r, t
                                }
                            }).inject({
                                enumerable: !1,
                                initialize: d,
                                set: d,
                                inject: function() {
                                    for (var t = 0, e = arguments.length; t < e; t++) {
                                        var i = arguments[t];
                                        i && u(this, i, i.enumerable, i.beans, i.preserve)
                                    }
                                    return this
                                },
                                extend: function() {
                                    var t = n(this);
                                    return t.inject.apply(t, arguments)
                                },
                                each: function(t, e) {
                                    return c(this, t, e)
                                },
                                clone: function() {
                                    return new this.constructor(this)
                                },
                                statics: {
                                    set: l,
                                    each: c,
                                    create: n,
                                    define: s,
                                    describe: r,
                                    clone: function(t) {
                                        return l(new t.constructor, t)
                                    },
                                    isPlainObject: function(t) {
                                        var e = null != t && t.constructor;
                                        return e && (e === Object || e === d || "Object" === e.name)
                                    },
                                    pick: function(t, e) {
                                        return t !== o ? t : e
                                    },
                                    slice: function(t, e, n) {
                                        return i.call(t, e, n)
                                    }
                                }
                            })
                        };
                    t.exports = c, c.inject({
                        enumerable: !1,
                        toString: function() {
                            return null != this._id ? (this._class || "Object") + (this._name ? " '" + this._name + "'" : " @" + this._id) : "{ " + c.each(this, (function(t, e) {
                                if (!/^_/.test(e)) {
                                    var i = typeof t;
                                    this.push(e + ": " + ("number" === i ? g.instance.number(t) : "string" === i ? "'" + t + "'" : t))
                                }
                            }), []).join(", ") + " }"
                        },
                        getClassName: function() {
                            return this._class || ""
                        },
                        importJSON: function(t) {
                            return c.importJSON(t, this)
                        },
                        exportJSON: function(t) {
                            return c.exportJSON(this, t)
                        },
                        toJSON: function() {
                            return c.serialize(this)
                        },
                        set: function(t, e) {
                            return t && c.filter(this, t, e, this._prioritize), this
                        }
                    }, {
                        beans: !1,
                        statics: {
                            exports: {},
                            extend: function t() {
                                var e = t.base.apply(this, arguments),
                                    i = e.prototype._class;
                                return i && !c.exports[i] && (c.exports[i] = e), e
                            },
                            equals: function(t, e) {
                                if (t === e) return !0;
                                if (t && t.equals) return t.equals(e);
                                if (e && e.equals) return e.equals(t);
                                if (t && e && "object" == typeof t && "object" == typeof e) {
                                    if (Array.isArray(t) && Array.isArray(e)) {
                                        if ((i = t.length) !== e.length) return !1;
                                        for (; i--;)
                                            if (!c.equals(t[i], e[i])) return !1
                                    } else {
                                        var i, n = Object.keys(t);
                                        if ((i = n.length) !== Object.keys(e).length) return !1;
                                        for (; i--;) {
                                            var r = n[i];
                                            if (!e.hasOwnProperty(r) || !c.equals(t[r], e[r])) return !1
                                        }
                                    }
                                    return !0
                                }
                                return !1
                            },
                            read: function(t, e, i, n) {
                                if (this === c) {
                                    var r = this.peek(t, e);
                                    return t.__index++, r
                                }
                                var s = this.prototype,
                                    a = s._readIndex,
                                    h = e || a && t.__index || 0,
                                    l = t.length,
                                    u = t[h];
                                if (n = n || l - h, u instanceof this || i && i.readNull && null == u && n <= 1) return a && (t.__index = h + 1), u && i && i.clone ? u.clone() : u;
                                if (u = c.create(s), a && (u.__read = !0), u = u.initialize.apply(u, h > 0 || h + n < l ? c.slice(t, h, h + n) : t) || u, a) {
                                    t.__index = h + u.__read;
                                    var d = u.__filtered;
                                    d && (t.__filtered = d, u.__filtered = o), u.__read = o
                                }
                                return u
                            },
                            peek: function(t, e) {
                                return t[t.__index = e || t.__index || 0]
                            },
                            remain: function(t) {
                                return t.length - (t.__index || 0)
                            },
                            readList: function(t, e, i, n) {
                                for (var r, s = [], a = e || 0, o = n ? a + n : t.length, h = a; h < o; h++) s.push(Array.isArray(r = t[h]) ? this.read(r, 0, i) : this.read(t, h, i, 1));
                                return s
                            },
                            readNamed: function(t, e, i, n, r) {
                                var s = this.getNamed(t, e),
                                    a = s !== o;
                                if (a) {
                                    var h = t.__filtered;
                                    if (!h) {
                                        var l = this.getSource(t);
                                        (h = t.__filtered = c.create(l)).__unfiltered = l
                                    }
                                    h[e] = o
                                }
                                return this.read(a ? [s] : t, i, n, r)
                            },
                            readSupported: function(t, e) {
                                var i = this.getSource(t),
                                    n = this,
                                    r = !1;
                                return i && Object.keys(i).forEach((function(i) {
                                    if (i in e) {
                                        var s = n.readNamed(t, i);
                                        s !== o && (e[i] = s), r = !0
                                    }
                                })), r
                            },
                            getSource: function(t) {
                                var e = t.__source;
                                if (e === o) {
                                    var i = 1 === t.length && t[0];
                                    e = t.__source = i && c.isPlainObject(i) ? i : null
                                }
                                return e
                            },
                            getNamed: function(t, e) {
                                var i = this.getSource(t);
                                if (i) return e ? i[e] : t.__filtered || i
                            },
                            hasNamed: function(t, e) {
                                return !!this.getNamed(t, e)
                            },
                            filter: function(t, e, i, n) {
                                var r;

                                function s(n) {
                                    if (!(i && n in i || r && n in r)) {
                                        var s = e[n];
                                        s !== o && (t[n] = s)
                                    }
                                }
                                if (n) {
                                    for (var a, h = {}, l = 0, c = n.length; l < c; l++)(a = n[l]) in e && (s(a), h[a] = !0);
                                    r = h
                                }
                                return Object.keys(e.__unfiltered || e).forEach(s), t
                            },
                            isPlainValue: function(t, e) {
                                return c.isPlainObject(t) || Array.isArray(t) || e && "string" == typeof t
                            },
                            serialize: function(t, e, i, n) {
                                e = e || {};
                                var r, s = !n;
                                if (s && (e.formatter = new g(e.precision), n = {
                                        length: 0,
                                        definitions: {},
                                        references: {},
                                        add: function(t, e) {
                                            var i = "#" + t._id,
                                                n = this.references[i];
                                            if (!n) {
                                                this.length++;
                                                var r = e.call(t),
                                                    s = t._class;
                                                s && r[0] !== s && r.unshift(s), this.definitions[i] = r, n = this.references[i] = [i]
                                            }
                                            return n
                                        }
                                    }), t && t._serialize) {
                                    r = t._serialize(e, n);
                                    var a = t._class;
                                    !a || t._compactSerialize || !s && i || r[0] === a || r.unshift(a)
                                } else if (Array.isArray(t)) {
                                    r = [];
                                    for (var o = 0, h = t.length; o < h; o++) r[o] = c.serialize(t[o], e, i, n)
                                } else if (c.isPlainObject(t)) {
                                    r = {};
                                    var l = Object.keys(t);
                                    for (o = 0, h = l.length; o < h; o++) {
                                        var u = l[o];
                                        r[u] = c.serialize(t[u], e, i, n)
                                    }
                                } else r = "number" == typeof t ? e.formatter.number(t, e.precision) : t;
                                return s && n.length > 0 ? [
                                    ["dictionary", n.definitions], r
                                ] : r
                            },
                            deserialize: function(t, e, i, n, r) {
                                var s = t,
                                    a = !i,
                                    o = a && t && t.length && "dictionary" === t[0][0];
                                if (i = i || {}, Array.isArray(t)) {
                                    var h = t[0],
                                        l = "dictionary" === h;
                                    if (1 == t.length && /^#/.test(h)) return i.dictionary[h];
                                    s = [];
                                    for (var u = (h = c.exports[h]) ? 1 : 0, d = t.length; u < d; u++) s.push(c.deserialize(t[u], e, i, l, o));
                                    if (h) {
                                        var p = s;
                                        s = e ? e(h, p, a || r) : new h(p)
                                    }
                                } else if (c.isPlainObject(t))
                                    for (var f in s = {}, n && (i.dictionary = s), t) s[f] = c.deserialize(t[f], e, i);
                                return o ? s[1] : s
                            },
                            exportJSON: function(t, e) {
                                var i = c.serialize(t, e);
                                return e && 0 == e.asString ? i : JSON.stringify(i)
                            },
                            importJSON: function(t, e) {
                                return c.deserialize("string" == typeof t ? JSON.parse(t) : t, (function(t, i, n) {
                                    var r = n && e && e.constructor === t,
                                        s = r ? e : c.create(t.prototype);
                                    if (1 === i.length && s instanceof P && (r || !(s instanceof T))) {
                                        var a = i[0];
                                        c.isPlainObject(a) && (a.insert = !1, r && (i = i.concat([{
                                            insert: !0
                                        }])))
                                    }
                                    return (r ? s.set : t).apply(s, i), r && (e = null), s
                                }))
                            },
                            push: function(t, e) {
                                var i = e.length;
                                if (i < 4096) t.push.apply(t, e);
                                else {
                                    var n = t.length;
                                    t.length += i;
                                    for (var r = 0; r < i; r++) t[n + r] = e[r]
                                }
                                return t
                            },
                            splice: function(t, e, i, n) {
                                var r = e && e.length,
                                    s = i === o;
                                (i = s ? t.length : i) > t.length && (i = t.length);
                                for (var a = 0; a < r; a++) e[a]._index = i + a;
                                if (s) return c.push(t, e), [];
                                var h = [i, n];
                                e && c.push(h, e);
                                for (var l = t.splice.apply(t, h), u = (a = 0, l.length); a < u; a++) l[a]._index = o;
                                for (a = i + r, u = t.length; a < u; a++) t[a]._index = a;
                                return l
                            },
                            capitalize: function(t) {
                                return t.replace(/\b[a-z]/g, (function(t) {
                                    return t.toUpperCase()
                                }))
                            },
                            camelize: function(t) {
                                return t.replace(/-(.)/g, (function(t, e) {
                                    return e.toUpperCase()
                                }))
                            },
                            hyphenate: function(t) {
                                return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
                            }
                        }
                    });
                    var u = {
                            on: function(t, e) {
                                if ("string" != typeof t) c.each(t, (function(t, e) {
                                    this.on(e, t)
                                }), this);
                                else {
                                    var i = this._eventTypes,
                                        n = i && i[t],
                                        r = this._callbacks = this._callbacks || {}; - 1 === (r = r[t] = r[t] || []).indexOf(e) && (r.push(e), n && n.install && 1 === r.length && n.install.call(this, t))
                                }
                                return this
                            },
                            off: function(t, e) {
                                if ("string" == typeof t) {
                                    var i, n = this._eventTypes,
                                        r = n && n[t],
                                        s = this._callbacks && this._callbacks[t];
                                    return s && (!e || -1 !== (i = s.indexOf(e)) && 1 === s.length ? (r && r.uninstall && r.uninstall.call(this, t), delete this._callbacks[t]) : -1 !== i && s.splice(i, 1)), this
                                }
                                c.each(t, (function(t, e) {
                                    this.off(e, t)
                                }), this)
                            },
                            once: function(t, e) {
                                return this.on(t, (function i() {
                                    e.apply(this, arguments), this.off(t, i)
                                }))
                            },
                            emit: function(t, e) {
                                var i = this._callbacks && this._callbacks[t];
                                if (!i) return !1;
                                var n = c.slice(arguments, 1),
                                    r = e && e.target && !e.currentTarget;
                                i = i.slice(), r && (e.currentTarget = this);
                                for (var s = 0, a = i.length; s < a; s++)
                                    if (0 == i[s].apply(this, n)) {
                                        e && e.stop && e.stop();
                                        break
                                    }
                                return r && delete e.currentTarget, !0
                            },
                            responds: function(t) {
                                return !(!this._callbacks || !this._callbacks[t])
                            },
                            attach: "#on",
                            detach: "#off",
                            fire: "#emit",
                            _installEvents: function(t) {
                                var e = this._eventTypes,
                                    i = this._callbacks,
                                    n = t ? "install" : "uninstall";
                                if (e)
                                    for (var r in i)
                                        if (i[r].length > 0) {
                                            var s = e[r],
                                                a = s && s[n];
                                            a && a.call(this, r)
                                        }
                            },
                            statics: {
                                inject: function t(e) {
                                    var i = e._events;
                                    if (i) {
                                        var n = {};
                                        c.each(i, (function(t, i) {
                                            var r = "string" == typeof t,
                                                s = r ? t : i,
                                                a = c.capitalize(s),
                                                o = s.substring(2).toLowerCase();
                                            n[o] = r ? {} : t, s = "_" + s, e["get" + a] = function() {
                                                return this[s]
                                            }, e["set" + a] = function(t) {
                                                var e = this[s];
                                                e && this.off(o, e), t && this.on(o, t), this[s] = t
                                            }
                                        })), e._eventTypes = n
                                    }
                                    return t.base.apply(this, arguments)
                                }
                            }
                        },
                        d = c.extend({
                            _class: "PaperScope",
                            initialize: function t() {
                                dt = this, this.settings = new c({
                                    applyMatrix: !0,
                                    insertItems: !0,
                                    handleSize: 4,
                                    hitTolerance: 0
                                }), this.project = null, this.projects = [], this.tools = [], this._id = t._id++, t._scopes[this._id] = this;
                                var e = t.prototype;
                                if (!this.support) {
                                    var i = ht.getContext(1, 1) || {};
                                    e.support = {
                                        nativeDash: "setLineDash" in i || "mozDash" in i,
                                        nativeBlendModes: lt.nativeModes
                                    }, ht.release(i)
                                }
                                if (!this.agent) {
                                    var n = a.navigator.userAgent.toLowerCase(),
                                        r = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(n) || [])[0],
                                        s = "darwin" === r ? "mac" : r,
                                        o = e.agent = e.browser = {
                                            platform: s
                                        };
                                    s && (o[s] = !0), n.replace(/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\/?\s*([.\d]+)(?:.*version\/([.\d]+))?(?:.*rv\:v?([.\d]+))?/g, (function(t, e, i, n, r) {
                                        if (!o.chrome) {
                                            var s = "opera" === e ? n : /^(node|trident)$/.test(e) ? r : i;
                                            o.version = s, o.versionNumber = parseFloat(s), e = {
                                                trident: "msie",
                                                jsdom: "node"
                                            }[e] || e, o.name = e, o[e] = !0
                                        }
                                    })), o.chrome && delete o.webkit, o.atom && delete o.chrome
                                }
                            },
                            version: "0.12.15",
                            getView: function() {
                                var t = this.project;
                                return t && t._view
                            },
                            getPaper: function() {
                                return this
                            },
                            execute: function(t, e) {
                                var i = dt.PaperScript.execute(t, this, e);
                                return K.updateFocus(), i
                            },
                            install: function(t) {
                                var e = this;
                                for (var i in c.each(["project", "view", "tool"], (function(i) {
                                        c.define(t, i, {
                                            configurable: !0,
                                            get: function() {
                                                return e[i]
                                            }
                                        })
                                    })), this) !/^_/.test(i) && this[i] && (t[i] = this[i])
                            },
                            setup: function(t) {
                                return dt = this, this.project = new A(t), this
                            },
                            createCanvas: function(t, e) {
                                return ht.getCanvas(t, e)
                            },
                            activate: function() {
                                dt = this
                            },
                            clear: function() {
                                for (var t = this.projects, e = this.tools, i = t.length - 1; i >= 0; i--) t[i].remove();
                                for (i = e.length - 1; i >= 0; i--) e[i].remove()
                            },
                            remove: function() {
                                this.clear(), delete d._scopes[this._id]
                            },
                            statics: new function() {
                                function t(t) {
                                    return t += "Attribute",
                                        function(e, i) {
                                            return e[t](i) || e[t]("data-paper-" + i)
                                        }
                                }
                                return {
                                    _scopes: {},
                                    _id: 0,
                                    get: function(t) {
                                        return this._scopes[t] || null
                                    },
                                    getAttribute: t("get"),
                                    hasAttribute: t("has")
                                }
                            }
                        }),
                        p = c.extend(u, {
                            initialize: function(t) {
                                this._scope = dt, this._index = this._scope[this._list].push(this) - 1, !t && this._scope[this._reference] || this.activate()
                            },
                            activate: function() {
                                if (!this._scope) return !1;
                                var t = this._scope[this._reference];
                                return t && t !== this && t.emit("deactivate"), this._scope[this._reference] = this, this.emit("activate", t), !0
                            },
                            isActive: function() {
                                return this._scope[this._reference] === this
                            },
                            remove: function() {
                                return null != this._index && (c.splice(this._scope[this._list], null, this._index, 1), this._scope[this._reference] == this && (this._scope[this._reference] = null), this._scope = null, !0)
                            },
                            getView: function() {
                                return this._scope.getView()
                            }
                        }),
                        f = {
                            findItemBoundsCollisions: function(t, e, i) {
                                function n(t) {
                                    for (var e = new Array(t.length), i = 0; i < t.length; i++) {
                                        var n = t[i].getBounds();
                                        e[i] = [n.left, n.top, n.right, n.bottom]
                                    }
                                    return e
                                }
                                var r = n(t),
                                    s = e && e !== t ? n(e) : r;
                                return this.findBoundsCollisions(r, s, i || 0)
                            },
                            findCurveBoundsCollisions: function(t, e, i, n) {
                                function r(t) {
                                    for (var e = Math.min, i = Math.max, n = new Array(t.length), r = 0; r < t.length; r++) {
                                        var s = t[r];
                                        n[r] = [e(s[0], s[2], s[4], s[6]), e(s[1], s[3], s[5], s[7]), i(s[0], s[2], s[4], s[6]), i(s[1], s[3], s[5], s[7])]
                                    }
                                    return n
                                }
                                var s = r(t),
                                    a = e && e !== t ? r(e) : s;
                                if (n) {
                                    for (var o = this.findBoundsCollisions(s, a, i || 0, !1, !0), h = this.findBoundsCollisions(s, a, i || 0, !0, !0), l = [], c = 0, u = o.length; c < u; c++) l[c] = {
                                        hor: o[c],
                                        ver: h[c]
                                    };
                                    return l
                                }
                                return this.findBoundsCollisions(s, a, i || 0)
                            },
                            findBoundsCollisions: function(t, e, i, n, r) {
                                var s = !e || t === e,
                                    a = s ? t : t.concat(e),
                                    o = t.length,
                                    h = a.length;

                                function l(t, e, i) {
                                    for (var n = 0, r = t.length; n < r;) {
                                        var s = r + n >>> 1;
                                        a[t[s]][e] < i ? n = s + 1 : r = s
                                    }
                                    return n - 1
                                }
                                for (var c = n ? 1 : 0, u = c + 2, d = n ? 0 : 1, p = d + 2, f = new Array(h), g = 0; g < h; g++) f[g] = g;
                                f.sort((function(t, e) {
                                    return a[t][c] - a[e][c]
                                }));
                                var m = [],
                                    v = new Array(o);
                                for (g = 0; g < h; g++) {
                                    var _ = f[g],
                                        y = a[_],
                                        x = s ? _ : _ - o,
                                        b = _ < o,
                                        w = s || !b,
                                        S = b ? [] : null;
                                    if (m.length) {
                                        var C = l(m, u, y[c] - i) + 1;
                                        if (m.splice(0, C), s && r) {
                                            S = S.concat(m);
                                            for (var k = 0; k < m.length; k++) {
                                                v[M = m[k]].push(x)
                                            }
                                        } else {
                                            var A = y[p],
                                                P = y[d];
                                            for (k = 0; k < m.length; k++) {
                                                var M = m[k],
                                                    T = a[M],
                                                    E = M < o,
                                                    I = s || M >= o;
                                                (r || (b && I || w && E) && A >= T[d] - i && P <= T[p] + i) && (b && I && S.push(s ? M : M - o), w && E && v[M].push(x))
                                            }
                                        }
                                    }
                                    if (b && (t === e && S.push(_), v[_] = S), m.length) {
                                        var O = l(m, u, y[u]);
                                        m.splice(O + 1, 0, _)
                                    } else m.push(_)
                                }
                                for (g = 0; g < v.length; g++) {
                                    var L = v[g];
                                    L && L.sort((function(t, e) {
                                        return t - e
                                    }))
                                }
                                return v
                            }
                        },
                        g = c.extend({
                            initialize: function(t) {
                                this.precision = c.pick(t, 5), this.multiplier = Math.pow(10, this.precision)
                            },
                            number: function(t) {
                                return this.precision < 16 ? Math.round(t * this.multiplier) / this.multiplier : t
                            },
                            pair: function(t, e, i) {
                                return this.number(t) + (i || ",") + this.number(e)
                            },
                            point: function(t, e) {
                                return this.number(t.x) + (e || ",") + this.number(t.y)
                            },
                            size: function(t, e) {
                                return this.number(t.width) + (e || ",") + this.number(t.height)
                            },
                            rectangle: function(t, e) {
                                return this.point(t, e) + (e || ",") + this.size(t, e)
                            }
                        });
                    g.instance = new g;
                    var m = new function() {
                            var t = [
                                    [.5773502691896257],
                                    [0, .7745966692414834],
                                    [.33998104358485626, .8611363115940526],
                                    [0, .5384693101056831, .906179845938664],
                                    [.2386191860831969, .6612093864662645, .932469514203152],
                                    [0, .4058451513773972, .7415311855993945, .9491079123427585],
                                    [.1834346424956498, .525532409916329, .7966664774136267, .9602898564975363],
                                    [0, .3242534234038089, .6133714327005904, .8360311073266358, .9681602395076261],
                                    [.14887433898163122, .4333953941292472, .6794095682990244, .8650633666889845, .9739065285171717],
                                    [0, .26954315595234496, .5190961292068118, .7301520055740494, .8870625997680953, .978228658146057],
                                    [.1252334085114689, .3678314989981802, .5873179542866175, .7699026741943047, .9041172563704749, .9815606342467192],
                                    [0, .2304583159551348, .44849275103644687, .6423493394403402, .8015780907333099, .9175983992229779, .9841830547185881],
                                    [.10805494870734367, .31911236892788974, .5152486363581541, .6872929048116855, .827201315069765, .9284348836635735, .9862838086968123],
                                    [0, .20119409399743451, .3941513470775634, .5709721726085388, .7244177313601701, .8482065834104272, .937273392400706, .9879925180204854],
                                    [.09501250983763744, .2816035507792589, .45801677765722737, .6178762444026438, .755404408355003, .8656312023878318, .9445750230732326, .9894009349916499]
                                ],
                                e = [
                                    [1],
                                    [.8888888888888888, .5555555555555556],
                                    [.6521451548625461, .34785484513745385],
                                    [.5688888888888889, .47862867049936647, .23692688505618908],
                                    [.46791393457269104, .3607615730481386, .17132449237917036],
                                    [.4179591836734694, .3818300505051189, .27970539148927664, .1294849661688697],
                                    [.362683783378362, .31370664587788727, .22238103445337448, .10122853629037626],
                                    [.3302393550012598, .31234707704000286, .26061069640293544, .1806481606948574, .08127438836157441],
                                    [.29552422471475287, .26926671930999635, .21908636251598204, .1494513491505806, .06667134430868814],
                                    [.2729250867779006, .26280454451024665, .23319376459199048, .18629021092773426, .1255803694649046, .05566856711617366],
                                    [.24914704581340277, .2334925365383548, .20316742672306592, .16007832854334622, .10693932599531843, .04717533638651183],
                                    [.2325515532308739, .22628318026289723, .2078160475368885, .17814598076194574, .13887351021978725, .09212149983772845, .04048400476531588],
                                    [.2152638534631578, .2051984637212956, .18553839747793782, .15720316715819355, .12151857068790319, .08015808715976021, .03511946033175186],
                                    [.2025782419255613, .19843148532711158, .1861610000155622, .16626920581699392, .13957067792615432, .10715922046717194, .07036604748810812, .03075324199611727],
                                    [.1894506104550685, .18260341504492358, .16915651939500254, .14959598881657674, .12462897125553388, .09515851168249279, .062253523938647894, .027152459411754096]
                                ],
                                i = Math.abs,
                                n = Math.sqrt,
                                r = Math.pow,
                                s = Math.log2 || function(t) {
                                    return Math.log(t) * Math.LOG2E
                                },
                                a = 1e-12,
                                o = 112e-18;

                            function h(t, e, i) {
                                return t < e ? e : t > i ? i : t
                            }

                            function l(t, e, n) {
                                function r(t) {
                                    var e = 134217729 * t,
                                        i = t - e + e;
                                    return [i, t - i]
                                }
                                var s = e * e - t * n,
                                    a = e * e + t * n;
                                if (3 * i(s) < a) {
                                    var o = r(t),
                                        h = r(e),
                                        l = r(n),
                                        c = e * e,
                                        u = t * n;
                                    s = c - u + (h[0] * h[0] - c + 2 * h[0] * h[1] + h[1] * h[1] - (o[0] * l[0] - u + o[0] * l[1] + o[1] * l[0] + o[1] * l[1]))
                                }
                                return s
                            }

                            function c() {
                                var t = Math.max.apply(Math, arguments);
                                return t && (t < 1e-8 || t > 1e8) ? r(2, -Math.round(s(t))) : 0
                            }
                            return {
                                EPSILON: a,
                                MACHINE_EPSILON: o,
                                CURVETIME_EPSILON: 1e-8,
                                GEOMETRIC_EPSILON: 1e-7,
                                TRIGONOMETRIC_EPSILON: 1e-8,
                                KAPPA: 4 * (n(2) - 1) / 3,
                                isZero: function(t) {
                                    return t >= -1e-12 && t <= a
                                },
                                isMachineZero: function(t) {
                                    return t >= -112e-18 && t <= o
                                },
                                clamp: h,
                                integrate: function(i, n, r, s) {
                                    for (var a = t[s - 2], o = e[s - 2], h = .5 * (r - n), l = h + n, c = 0, u = s + 1 >> 1, d = 1 & s ? o[c++] * i(l) : 0; c < u;) {
                                        var p = h * a[c];
                                        d += o[c++] * (i(l + p) + i(l - p))
                                    }
                                    return h * d
                                },
                                findRoot: function(t, e, n, r, s, a, o) {
                                    for (var l = 0; l < a; l++) {
                                        var c = t(n),
                                            u = c / e(n),
                                            d = n - u;
                                        if (i(u) < o) {
                                            n = d;
                                            break
                                        }
                                        c > 0 ? (s = n, n = d <= r ? .5 * (r + s) : d) : (r = n, n = d >= s ? .5 * (r + s) : d)
                                    }
                                    return h(n, r, s)
                                },
                                solveQuadratic: function(t, e, r, s, u, d) {
                                    var p, f = 1 / 0;
                                    if (i(t) < a) {
                                        if (i(e) < a) return i(r) < a ? -1 : 0;
                                        p = -r / e
                                    } else {
                                        var g = l(t, e *= -.5, r);
                                        if (g && i(g) < o) {
                                            var m = c(i(t), i(e), i(r));
                                            m && (g = l(t *= m, e *= m, r *= m))
                                        }
                                        if (g >= -112e-18) {
                                            var v = g < 0 ? 0 : n(g),
                                                _ = e + (e < 0 ? -v : v);
                                            0 === _ ? f = -(p = r / t) : (p = _ / t, f = r / _)
                                        }
                                    }
                                    var y = 0,
                                        x = null == u,
                                        b = u - a,
                                        w = d + a;
                                    return isFinite(p) && (x || p > b && p < w) && (s[y++] = x ? p : h(p, u, d)), f !== p && isFinite(f) && (x || f > b && f < w) && (s[y++] = x ? f : h(f, u, d)), y
                                },
                                solveCubic: function(t, e, s, l, u, d, p) {
                                    var f, g, v, _, y, x = c(i(t), i(e), i(s), i(l));

                                    function b(i) {
                                        var n = t * (f = i);
                                        _ = (n + (g = n + e)) * f + (v = g * f + s), y = v * f + l
                                    }
                                    if (x && (t *= x, e *= x, s *= x, l *= x), i(t) < a) t = e, g = s, v = l, f = 1 / 0;
                                    else if (i(l) < a) g = e, v = s, f = 0;
                                    else {
                                        b(-e / t / 3);
                                        var w = y / t,
                                            S = r(i(w), 1 / 3),
                                            C = w < 0 ? -1 : 1,
                                            k = -_ / t,
                                            A = k > 0 ? 1.324717957244746 * Math.max(S, n(k)) : S,
                                            P = f - C * A;
                                        if (P !== f) {
                                            do {
                                                b(P), P = 0 === _ ? f : f - y / _ / (1 + o)
                                            } while (C * P > C * f);
                                            i(t) * f * f > i(l / f) && (g = ((v = -l / f) - s) / f)
                                        }
                                    }
                                    var M = m.solveQuadratic(t, g, v, u, d, p),
                                        T = null == d;
                                    return isFinite(f) && (0 === M || M > 0 && f !== u[0] && f !== u[1]) && (T || f > d - a && f < p + a) && (u[M++] = T ? f : h(f, d, p)), M
                                }
                            }
                        },
                        v = {
                            _id: 1,
                            _pools: {},
                            get: function(t) {
                                if (t) {
                                    var e = this._pools[t];
                                    return e || (e = this._pools[t] = {
                                        _id: 1
                                    }), e._id++
                                }
                                return this._id++
                            }
                        },
                        _ = c.extend({
                            _class: "Point",
                            _readIndex: !0,
                            initialize: function(t, e) {
                                var i = typeof t,
                                    n = this.__read,
                                    r = 0;
                                if ("number" === i) {
                                    var s = "number" == typeof e;
                                    this._set(t, s ? e : t), n && (r = s ? 2 : 1)
                                } else if ("undefined" === i || null === t) this._set(0, 0), n && (r = null === t ? 1 : 0);
                                else {
                                    var a = "string" === i ? t.split(/[\s,]+/) || [] : t;
                                    r = 1, Array.isArray(a) ? this._set(+a[0], +(a.length > 1 ? a[1] : a[0])) : "x" in a ? this._set(a.x || 0, a.y || 0) : "width" in a ? this._set(a.width || 0, a.height || 0) : "angle" in a ? (this._set(a.length || 0, 0), this.setAngle(a.angle || 0)) : (this._set(0, 0), r = 0)
                                }
                                return n && (this.__read = r), this
                            },
                            set: "#initialize",
                            _set: function(t, e) {
                                return this.x = t, this.y = e, this
                            },
                            equals: function(t) {
                                return this === t || t && (this.x === t.x && this.y === t.y || Array.isArray(t) && this.x === t[0] && this.y === t[1]) || !1
                            },
                            clone: function() {
                                return new _(this.x, this.y)
                            },
                            toString: function() {
                                var t = g.instance;
                                return "{ x: " + t.number(this.x) + ", y: " + t.number(this.y) + " }"
                            },
                            _serialize: function(t) {
                                var e = t.formatter;
                                return [e.number(this.x), e.number(this.y)]
                            },
                            getLength: function() {
                                return Math.sqrt(this.x * this.x + this.y * this.y)
                            },
                            setLength: function(t) {
                                if (this.isZero()) {
                                    var e = this._angle || 0;
                                    this._set(Math.cos(e) * t, Math.sin(e) * t)
                                } else {
                                    var i = t / this.getLength();
                                    m.isZero(i) && this.getAngle(), this._set(this.x * i, this.y * i)
                                }
                            },
                            getAngle: function() {
                                return 180 * this.getAngleInRadians.apply(this, arguments) / Math.PI
                            },
                            setAngle: function(t) {
                                this.setAngleInRadians.call(this, t * Math.PI / 180)
                            },
                            getAngleInDegrees: "#getAngle",
                            setAngleInDegrees: "#setAngle",
                            getAngleInRadians: function() {
                                if (arguments.length) {
                                    var t = _.read(arguments),
                                        e = this.getLength() * t.getLength();
                                    if (m.isZero(e)) return NaN;
                                    var i = this.dot(t) / e;
                                    return Math.acos(i < -1 ? -1 : i > 1 ? 1 : i)
                                }
                                return this.isZero() ? this._angle || 0 : this._angle = Math.atan2(this.y, this.x)
                            },
                            setAngleInRadians: function(t) {
                                if (this._angle = t, !this.isZero()) {
                                    var e = this.getLength();
                                    this._set(Math.cos(t) * e, Math.sin(t) * e)
                                }
                            },
                            getQuadrant: function() {
                                return this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3
                            }
                        }, {
                            beans: !1,
                            getDirectedAngle: function() {
                                var t = _.read(arguments);
                                return 180 * Math.atan2(this.cross(t), this.dot(t)) / Math.PI
                            },
                            getDistance: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = e.x - this.x,
                                    n = e.y - this.y,
                                    r = i * i + n * n,
                                    s = c.read(t);
                                return s ? r : Math.sqrt(r)
                            },
                            normalize: function(t) {
                                t === o && (t = 1);
                                var e = this.getLength(),
                                    i = 0 !== e ? t / e : 0,
                                    n = new _(this.x * i, this.y * i);
                                return i >= 0 && (n._angle = this._angle), n
                            },
                            rotate: function(t, e) {
                                if (0 === t) return this.clone();
                                t = t * Math.PI / 180;
                                var i = e ? this.subtract(e) : this,
                                    n = Math.sin(t),
                                    r = Math.cos(t);
                                return i = new _(i.x * r - i.y * n, i.x * n + i.y * r), e ? i.add(e) : i
                            },
                            transform: function(t) {
                                return t ? t._transformPoint(this) : this
                            },
                            add: function() {
                                var t = _.read(arguments);
                                return new _(this.x + t.x, this.y + t.y)
                            },
                            subtract: function() {
                                var t = _.read(arguments);
                                return new _(this.x - t.x, this.y - t.y)
                            },
                            multiply: function() {
                                var t = _.read(arguments);
                                return new _(this.x * t.x, this.y * t.y)
                            },
                            divide: function() {
                                var t = _.read(arguments);
                                return new _(this.x / t.x, this.y / t.y)
                            },
                            modulo: function() {
                                var t = _.read(arguments);
                                return new _(this.x % t.x, this.y % t.y)
                            },
                            negate: function() {
                                return new _(-this.x, -this.y)
                            },
                            isInside: function() {
                                return w.read(arguments).contains(this)
                            },
                            isClose: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = c.read(t);
                                return this.getDistance(e) <= i
                            },
                            isCollinear: function() {
                                var t = _.read(arguments);
                                return _.isCollinear(this.x, this.y, t.x, t.y)
                            },
                            isColinear: "#isCollinear",
                            isOrthogonal: function() {
                                var t = _.read(arguments);
                                return _.isOrthogonal(this.x, this.y, t.x, t.y)
                            },
                            isZero: function() {
                                var t = m.isZero;
                                return t(this.x) && t(this.y)
                            },
                            isNaN: function() {
                                return isNaN(this.x) || isNaN(this.y)
                            },
                            isInQuadrant: function(t) {
                                return this.x * (t > 1 && t < 4 ? -1 : 1) >= 0 && this.y * (t > 2 ? -1 : 1) >= 0
                            },
                            dot: function() {
                                var t = _.read(arguments);
                                return this.x * t.x + this.y * t.y
                            },
                            cross: function() {
                                var t = _.read(arguments);
                                return this.x * t.y - this.y * t.x
                            },
                            project: function() {
                                var t = _.read(arguments),
                                    e = t.isZero() ? 0 : this.dot(t) / t.dot(t);
                                return new _(t.x * e, t.y * e)
                            },
                            statics: {
                                min: function() {
                                    var t = arguments,
                                        e = _.read(t),
                                        i = _.read(t);
                                    return new _(Math.min(e.x, i.x), Math.min(e.y, i.y))
                                },
                                max: function() {
                                    var t = arguments,
                                        e = _.read(t),
                                        i = _.read(t);
                                    return new _(Math.max(e.x, i.x), Math.max(e.y, i.y))
                                },
                                random: function() {
                                    return new _(Math.random(), Math.random())
                                },
                                isCollinear: function(t, e, i, n) {
                                    return Math.abs(t * n - e * i) <= 1e-8 * Math.sqrt((t * t + e * e) * (i * i + n * n))
                                },
                                isOrthogonal: function(t, e, i, n) {
                                    return Math.abs(t * i + e * n) <= 1e-8 * Math.sqrt((t * t + e * e) * (i * i + n * n))
                                }
                            }
                        }, c.each(["round", "ceil", "floor", "abs"], (function(t) {
                            var e = Math[t];
                            this[t] = function() {
                                return new _(e(this.x), e(this.y))
                            }
                        }), {})),
                        y = _.extend({
                            initialize: function(t, e, i, n) {
                                this._x = t, this._y = e, this._owner = i, this._setter = n
                            },
                            _set: function(t, e, i) {
                                return this._x = t, this._y = e, i || this._owner[this._setter](this), this
                            },
                            getX: function() {
                                return this._x
                            },
                            setX: function(t) {
                                this._x = t, this._owner[this._setter](this)
                            },
                            getY: function() {
                                return this._y
                            },
                            setY: function(t) {
                                this._y = t, this._owner[this._setter](this)
                            },
                            isSelected: function() {
                                return !!(this._owner._selection & this._getSelection())
                            },
                            setSelected: function(t) {
                                this._owner._changeSelection(this._getSelection(), t)
                            },
                            _getSelection: function() {
                                return "setPosition" === this._setter ? 4 : 0
                            }
                        }),
                        x = c.extend({
                            _class: "Size",
                            _readIndex: !0,
                            initialize: function(t, e) {
                                var i = typeof t,
                                    n = this.__read,
                                    r = 0;
                                if ("number" === i) {
                                    var s = "number" == typeof e;
                                    this._set(t, s ? e : t), n && (r = s ? 2 : 1)
                                } else if ("undefined" === i || null === t) this._set(0, 0), n && (r = null === t ? 1 : 0);
                                else {
                                    var a = "string" === i ? t.split(/[\s,]+/) || [] : t;
                                    r = 1, Array.isArray(a) ? this._set(+a[0], +(a.length > 1 ? a[1] : a[0])) : "width" in a ? this._set(a.width || 0, a.height || 0) : "x" in a ? this._set(a.x || 0, a.y || 0) : (this._set(0, 0), r = 0)
                                }
                                return n && (this.__read = r), this
                            },
                            set: "#initialize",
                            _set: function(t, e) {
                                return this.width = t, this.height = e, this
                            },
                            equals: function(t) {
                                return t === this || t && (this.width === t.width && this.height === t.height || Array.isArray(t) && this.width === t[0] && this.height === t[1]) || !1
                            },
                            clone: function() {
                                return new x(this.width, this.height)
                            },
                            toString: function() {
                                var t = g.instance;
                                return "{ width: " + t.number(this.width) + ", height: " + t.number(this.height) + " }"
                            },
                            _serialize: function(t) {
                                var e = t.formatter;
                                return [e.number(this.width), e.number(this.height)]
                            },
                            add: function() {
                                var t = x.read(arguments);
                                return new x(this.width + t.width, this.height + t.height)
                            },
                            subtract: function() {
                                var t = x.read(arguments);
                                return new x(this.width - t.width, this.height - t.height)
                            },
                            multiply: function() {
                                var t = x.read(arguments);
                                return new x(this.width * t.width, this.height * t.height)
                            },
                            divide: function() {
                                var t = x.read(arguments);
                                return new x(this.width / t.width, this.height / t.height)
                            },
                            modulo: function() {
                                var t = x.read(arguments);
                                return new x(this.width % t.width, this.height % t.height)
                            },
                            negate: function() {
                                return new x(-this.width, -this.height)
                            },
                            isZero: function() {
                                var t = m.isZero;
                                return t(this.width) && t(this.height)
                            },
                            isNaN: function() {
                                return isNaN(this.width) || isNaN(this.height)
                            },
                            statics: {
                                min: function(t, e) {
                                    return new x(Math.min(t.width, e.width), Math.min(t.height, e.height))
                                },
                                max: function(t, e) {
                                    return new x(Math.max(t.width, e.width), Math.max(t.height, e.height))
                                },
                                random: function() {
                                    return new x(Math.random(), Math.random())
                                }
                            }
                        }, c.each(["round", "ceil", "floor", "abs"], (function(t) {
                            var e = Math[t];
                            this[t] = function() {
                                return new x(e(this.width), e(this.height))
                            }
                        }), {})),
                        b = x.extend({
                            initialize: function(t, e, i, n) {
                                this._width = t, this._height = e, this._owner = i, this._setter = n
                            },
                            _set: function(t, e, i) {
                                return this._width = t, this._height = e, i || this._owner[this._setter](this), this
                            },
                            getWidth: function() {
                                return this._width
                            },
                            setWidth: function(t) {
                                this._width = t, this._owner[this._setter](this)
                            },
                            getHeight: function() {
                                return this._height
                            },
                            setHeight: function(t) {
                                this._height = t, this._owner[this._setter](this)
                            }
                        }),
                        w = c.extend({
                            _class: "Rectangle",
                            _readIndex: !0,
                            beans: !0,
                            initialize: function(t, e, i, n) {
                                var r, s = arguments,
                                    a = typeof t;
                                if ("number" === a ? (this._set(t, e, i, n), r = 4) : "undefined" === a || null === t ? (this._set(0, 0, 0, 0), r = null === t ? 1 : 0) : 1 === s.length && (Array.isArray(t) ? (this._set.apply(this, t), r = 1) : t.x !== o || t.width !== o ? (this._set(t.x || 0, t.y || 0, t.width || 0, t.height || 0), r = 1) : t.from === o && t.to === o && (this._set(0, 0, 0, 0), c.readSupported(s, this) && (r = 1))), r === o) {
                                    var h, l, u = _.readNamed(s, "from"),
                                        d = c.peek(s),
                                        p = u.x,
                                        f = u.y;
                                    if (d && d.x !== o || c.hasNamed(s, "to")) {
                                        var g = _.readNamed(s, "to");
                                        h = g.x - p, l = g.y - f, h < 0 && (p = g.x, h = -h), l < 0 && (f = g.y, l = -l)
                                    } else {
                                        var m = x.read(s);
                                        h = m.width, l = m.height
                                    }
                                    this._set(p, f, h, l), r = s.__index
                                }
                                var v = s.__filtered;
                                return v && (this.__filtered = v), this.__read && (this.__read = r), this
                            },
                            set: "#initialize",
                            _set: function(t, e, i, n) {
                                return this.x = t, this.y = e, this.width = i, this.height = n, this
                            },
                            clone: function() {
                                return new w(this.x, this.y, this.width, this.height)
                            },
                            equals: function(t) {
                                var e = c.isPlainValue(t) ? w.read(arguments) : t;
                                return e === this || e && this.x === e.x && this.y === e.y && this.width === e.width && this.height === e.height || !1
                            },
                            toString: function() {
                                var t = g.instance;
                                return "{ x: " + t.number(this.x) + ", y: " + t.number(this.y) + ", width: " + t.number(this.width) + ", height: " + t.number(this.height) + " }"
                            },
                            _serialize: function(t) {
                                var e = t.formatter;
                                return [e.number(this.x), e.number(this.y), e.number(this.width), e.number(this.height)]
                            },
                            getPoint: function(t) {
                                return new(t ? _ : y)(this.x, this.y, this, "setPoint")
                            },
                            setPoint: function() {
                                var t = _.read(arguments);
                                this.x = t.x, this.y = t.y
                            },
                            getSize: function(t) {
                                return new(t ? x : b)(this.width, this.height, this, "setSize")
                            },
                            _fw: 1,
                            _fh: 1,
                            setSize: function() {
                                var t = x.read(arguments),
                                    e = this._sx,
                                    i = this._sy,
                                    n = t.width,
                                    r = t.height;
                                e && (this.x += (this.width - n) * e), i && (this.y += (this.height - r) * i), this.width = n, this.height = r, this._fw = this._fh = 1
                            },
                            getLeft: function() {
                                return this.x
                            },
                            setLeft: function(t) {
                                if (!this._fw) {
                                    var e = t - this.x;
                                    this.width -= .5 === this._sx ? 2 * e : e
                                }
                                this.x = t, this._sx = this._fw = 0
                            },
                            getTop: function() {
                                return this.y
                            },
                            setTop: function(t) {
                                if (!this._fh) {
                                    var e = t - this.y;
                                    this.height -= .5 === this._sy ? 2 * e : e
                                }
                                this.y = t, this._sy = this._fh = 0
                            },
                            getRight: function() {
                                return this.x + this.width
                            },
                            setRight: function(t) {
                                if (!this._fw) {
                                    var e = t - this.x;
                                    this.width = .5 === this._sx ? 2 * e : e
                                }
                                this.x = t - this.width, this._sx = 1, this._fw = 0
                            },
                            getBottom: function() {
                                return this.y + this.height
                            },
                            setBottom: function(t) {
                                if (!this._fh) {
                                    var e = t - this.y;
                                    this.height = .5 === this._sy ? 2 * e : e
                                }
                                this.y = t - this.height, this._sy = 1, this._fh = 0
                            },
                            getCenterX: function() {
                                return this.x + this.width / 2
                            },
                            setCenterX: function(t) {
                                this._fw || .5 === this._sx ? this.x = t - this.width / 2 : (this._sx && (this.x += 2 * (t - this.x) * this._sx), this.width = 2 * (t - this.x)), this._sx = .5, this._fw = 0
                            },
                            getCenterY: function() {
                                return this.y + this.height / 2
                            },
                            setCenterY: function(t) {
                                this._fh || .5 === this._sy ? this.y = t - this.height / 2 : (this._sy && (this.y += 2 * (t - this.y) * this._sy), this.height = 2 * (t - this.y)), this._sy = .5, this._fh = 0
                            },
                            getCenter: function(t) {
                                return new(t ? _ : y)(this.getCenterX(), this.getCenterY(), this, "setCenter")
                            },
                            setCenter: function() {
                                var t = _.read(arguments);
                                return this.setCenterX(t.x), this.setCenterY(t.y), this
                            },
                            getArea: function() {
                                return this.width * this.height
                            },
                            isEmpty: function() {
                                return 0 === this.width || 0 === this.height
                            },
                            contains: function(t) {
                                return t && t.width !== o || 4 === (Array.isArray(t) ? t : arguments).length ? this._containsRectangle(w.read(arguments)) : this._containsPoint(_.read(arguments))
                            },
                            _containsPoint: function(t) {
                                var e = t.x,
                                    i = t.y;
                                return e >= this.x && i >= this.y && e <= this.x + this.width && i <= this.y + this.height
                            },
                            _containsRectangle: function(t) {
                                var e = t.x,
                                    i = t.y;
                                return e >= this.x && i >= this.y && e + t.width <= this.x + this.width && i + t.height <= this.y + this.height
                            },
                            intersects: function() {
                                var t = w.read(arguments),
                                    e = c.read(arguments) || 0;
                                return t.x + t.width > this.x - e && t.y + t.height > this.y - e && t.x < this.x + this.width + e && t.y < this.y + this.height + e
                            },
                            intersect: function() {
                                var t = w.read(arguments),
                                    e = Math.max(this.x, t.x),
                                    i = Math.max(this.y, t.y),
                                    n = Math.min(this.x + this.width, t.x + t.width),
                                    r = Math.min(this.y + this.height, t.y + t.height);
                                return new w(e, i, n - e, r - i)
                            },
                            unite: function() {
                                var t = w.read(arguments),
                                    e = Math.min(this.x, t.x),
                                    i = Math.min(this.y, t.y),
                                    n = Math.max(this.x + this.width, t.x + t.width),
                                    r = Math.max(this.y + this.height, t.y + t.height);
                                return new w(e, i, n - e, r - i)
                            },
                            include: function() {
                                var t = _.read(arguments),
                                    e = Math.min(this.x, t.x),
                                    i = Math.min(this.y, t.y),
                                    n = Math.max(this.x + this.width, t.x),
                                    r = Math.max(this.y + this.height, t.y);
                                return new w(e, i, n - e, r - i)
                            },
                            expand: function() {
                                var t = x.read(arguments),
                                    e = t.width,
                                    i = t.height;
                                return new w(this.x - e / 2, this.y - i / 2, this.width + e, this.height + i)
                            },
                            scale: function(t, e) {
                                return this.expand(this.width * t - this.width, this.height * (e === o ? t : e) - this.height)
                            }
                        }, c.each([
                            ["Top", "Left"],
                            ["Top", "Right"],
                            ["Bottom", "Left"],
                            ["Bottom", "Right"],
                            ["Left", "Center"],
                            ["Top", "Center"],
                            ["Right", "Center"],
                            ["Bottom", "Center"]
                        ], (function(t, e) {
                            var i = t.join(""),
                                n = /^[RL]/.test(i);
                            e >= 4 && (t[1] += n ? "Y" : "X");
                            var r = t[n ? 0 : 1],
                                s = t[n ? 1 : 0],
                                a = "get" + r,
                                o = "get" + s,
                                h = "set" + r,
                                l = "set" + s,
                                c = "set" + i;
                            this["get" + i] = function(t) {
                                return new(t ? _ : y)(this[a](), this[o](), this, c)
                            }, this[c] = function() {
                                var t = _.read(arguments);
                                this[h](t.x), this[l](t.y)
                            }
                        }), {
                            beans: !0
                        })),
                        S = w.extend({
                            initialize: function(t, e, i, n, r, s) {
                                this._set(t, e, i, n, !0), this._owner = r, this._setter = s
                            },
                            _set: function(t, e, i, n, r) {
                                return this._x = t, this._y = e, this._width = i, this._height = n, r || this._owner[this._setter](this), this
                            }
                        }, new function() {
                            var t = w.prototype;
                            return c.each(["x", "y", "width", "height"], (function(t) {
                                var e = c.capitalize(t),
                                    i = "_" + t;
                                this["get" + e] = function() {
                                    return this[i]
                                }, this["set" + e] = function(t) {
                                    this[i] = t, this._dontNotify || this._owner[this._setter](this)
                                }
                            }), c.each(["Point", "Size", "Center", "Left", "Top", "Right", "Bottom", "CenterX", "CenterY", "TopLeft", "TopRight", "BottomLeft", "BottomRight", "LeftCenter", "TopCenter", "RightCenter", "BottomCenter"], (function(e) {
                                var i = "set" + e;
                                this[i] = function() {
                                    this._dontNotify = !0, t[i].apply(this, arguments), this._dontNotify = !1, this._owner[this._setter](this)
                                }
                            }), {
                                isSelected: function() {
                                    return !!(2 & this._owner._selection)
                                },
                                setSelected: function(t) {
                                    var e = this._owner;
                                    e._changeSelection && e._changeSelection(2, t)
                                }
                            }))
                        }),
                        C = c.extend({
                            _class: "Matrix",
                            initialize: function t(e, i) {
                                var n = arguments,
                                    r = n.length,
                                    s = !0;
                                if (r >= 6 ? this._set.apply(this, n) : 1 === r || 2 === r ? e instanceof t ? this._set(e._a, e._b, e._c, e._d, e._tx, e._ty, i) : Array.isArray(e) ? this._set.apply(this, i ? e.concat([i]) : e) : s = !1 : r ? s = !1 : this.reset(), !s) throw new Error("Unsupported matrix parameters");
                                return this
                            },
                            set: "#initialize",
                            _set: function(t, e, i, n, r, s, a) {
                                return this._a = t, this._b = e, this._c = i, this._d = n, this._tx = r, this._ty = s, a || this._changed(), this
                            },
                            _serialize: function(t, e) {
                                return c.serialize(this.getValues(), t, !0, e)
                            },
                            _changed: function() {
                                var t = this._owner;
                                t && (t._applyMatrix ? t.transform(null, !0) : t._changed(25))
                            },
                            clone: function() {
                                return new C(this._a, this._b, this._c, this._d, this._tx, this._ty)
                            },
                            equals: function(t) {
                                return t === this || t && this._a === t._a && this._b === t._b && this._c === t._c && this._d === t._d && this._tx === t._tx && this._ty === t._ty
                            },
                            toString: function() {
                                var t = g.instance;
                                return "[[" + [t.number(this._a), t.number(this._c), t.number(this._tx)].join(", ") + "], [" + [t.number(this._b), t.number(this._d), t.number(this._ty)].join(", ") + "]]"
                            },
                            reset: function(t) {
                                return this._a = this._d = 1, this._b = this._c = this._tx = this._ty = 0, t || this._changed(), this
                            },
                            apply: function(t, e) {
                                var i = this._owner;
                                return !!i && (i.transform(null, c.pick(t, !0), e), this.isIdentity())
                            },
                            translate: function() {
                                var t = _.read(arguments),
                                    e = t.x,
                                    i = t.y;
                                return this._tx += e * this._a + i * this._c, this._ty += e * this._b + i * this._d, this._changed(), this
                            },
                            scale: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = _.read(t, 0, {
                                        readNull: !0
                                    });
                                return i && this.translate(i), this._a *= e.x, this._b *= e.x, this._c *= e.y, this._d *= e.y, i && this.translate(i.negate()), this._changed(), this
                            },
                            rotate: function(t) {
                                t *= Math.PI / 180;
                                var e = _.read(arguments, 1),
                                    i = e.x,
                                    n = e.y,
                                    r = Math.cos(t),
                                    s = Math.sin(t),
                                    a = i - i * r + n * s,
                                    o = n - i * s - n * r,
                                    h = this._a,
                                    l = this._b,
                                    c = this._c,
                                    u = this._d;
                                return this._a = r * h + s * c, this._b = r * l + s * u, this._c = -s * h + r * c, this._d = -s * l + r * u, this._tx += a * h + o * c, this._ty += a * l + o * u, this._changed(), this
                            },
                            shear: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = _.read(t, 0, {
                                        readNull: !0
                                    });
                                i && this.translate(i);
                                var n = this._a,
                                    r = this._b;
                                return this._a += e.y * this._c, this._b += e.y * this._d, this._c += e.x * n, this._d += e.x * r, i && this.translate(i.negate()), this._changed(), this
                            },
                            skew: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = _.read(t, 0, {
                                        readNull: !0
                                    }),
                                    n = Math.PI / 180,
                                    r = new _(Math.tan(e.x * n), Math.tan(e.y * n));
                                return this.shear(r, i)
                            },
                            append: function(t, e) {
                                if (t) {
                                    var i = this._a,
                                        n = this._b,
                                        r = this._c,
                                        s = this._d,
                                        a = t._a,
                                        o = t._c,
                                        h = t._b,
                                        l = t._d,
                                        c = t._tx,
                                        u = t._ty;
                                    this._a = a * i + h * r, this._c = o * i + l * r, this._b = a * n + h * s, this._d = o * n + l * s, this._tx += c * i + u * r, this._ty += c * n + u * s, e || this._changed()
                                }
                                return this
                            },
                            prepend: function(t, e) {
                                if (t) {
                                    var i = this._a,
                                        n = this._b,
                                        r = this._c,
                                        s = this._d,
                                        a = this._tx,
                                        o = this._ty,
                                        h = t._a,
                                        l = t._c,
                                        c = t._b,
                                        u = t._d,
                                        d = t._tx,
                                        p = t._ty;
                                    this._a = h * i + l * n, this._c = h * r + l * s, this._b = c * i + u * n, this._d = c * r + u * s, this._tx = h * a + l * o + d, this._ty = c * a + u * o + p, e || this._changed()
                                }
                                return this
                            },
                            appended: function(t) {
                                return this.clone().append(t)
                            },
                            prepended: function(t) {
                                return this.clone().prepend(t)
                            },
                            invert: function() {
                                var t = this._a,
                                    e = this._b,
                                    i = this._c,
                                    n = this._d,
                                    r = this._tx,
                                    s = this._ty,
                                    a = t * n - e * i,
                                    o = null;
                                return a && !isNaN(a) && isFinite(r) && isFinite(s) && (this._a = n / a, this._b = -e / a, this._c = -i / a, this._d = t / a, this._tx = (i * s - n * r) / a, this._ty = (e * r - t * s) / a, o = this), o
                            },
                            inverted: function() {
                                return this.clone().invert()
                            },
                            concatenate: "#append",
                            preConcatenate: "#prepend",
                            chain: "#appended",
                            _shiftless: function() {
                                return new C(this._a, this._b, this._c, this._d, 0, 0)
                            },
                            _orNullIfIdentity: function() {
                                return this.isIdentity() ? null : this
                            },
                            isIdentity: function() {
                                return 1 === this._a && 0 === this._b && 0 === this._c && 1 === this._d && 0 === this._tx && 0 === this._ty
                            },
                            isInvertible: function() {
                                var t = this._a * this._d - this._c * this._b;
                                return t && !isNaN(t) && isFinite(this._tx) && isFinite(this._ty)
                            },
                            isSingular: function() {
                                return !this.isInvertible()
                            },
                            transform: function(t, e, i) {
                                return arguments.length < 3 ? this._transformPoint(_.read(arguments)) : this._transformCoordinates(t, e, i)
                            },
                            _transformPoint: function(t, e, i) {
                                var n = t.x,
                                    r = t.y;
                                return e || (e = new _), e._set(n * this._a + r * this._c + this._tx, n * this._b + r * this._d + this._ty, i)
                            },
                            _transformCoordinates: function(t, e, i) {
                                for (var n = 0, r = 2 * i; n < r; n += 2) {
                                    var s = t[n],
                                        a = t[n + 1];
                                    e[n] = s * this._a + a * this._c + this._tx, e[n + 1] = s * this._b + a * this._d + this._ty
                                }
                                return e
                            },
                            _transformCorners: function(t) {
                                var e = t.x,
                                    i = t.y,
                                    n = e + t.width,
                                    r = i + t.height,
                                    s = [e, i, n, i, n, r, e, r];
                                return this._transformCoordinates(s, s, 4)
                            },
                            _transformBounds: function(t, e, i) {
                                for (var n = this._transformCorners(t), r = n.slice(0, 2), s = r.slice(), a = 2; a < 8; a++) {
                                    var o = n[a],
                                        h = 1 & a;
                                    o < r[h] ? r[h] = o : o > s[h] && (s[h] = o)
                                }
                                return e || (e = new w), e._set(r[0], r[1], s[0] - r[0], s[1] - r[1], i)
                            },
                            inverseTransform: function() {
                                return this._inverseTransform(_.read(arguments))
                            },
                            _inverseTransform: function(t, e, i) {
                                var n = this._a,
                                    r = this._b,
                                    s = this._c,
                                    a = this._d,
                                    o = this._tx,
                                    h = this._ty,
                                    l = n * a - r * s,
                                    c = null;
                                if (l && !isNaN(l) && isFinite(o) && isFinite(h)) {
                                    var u = t.x - this._tx,
                                        d = t.y - this._ty;
                                    e || (e = new _), c = e._set((u * a - d * s) / l, (d * n - u * r) / l, i)
                                }
                                return c
                            },
                            decompose: function() {
                                var t, e, i, n = this._a,
                                    r = this._b,
                                    s = this._c,
                                    a = this._d,
                                    o = n * a - r * s,
                                    h = Math.sqrt,
                                    l = Math.atan2,
                                    c = 180 / Math.PI;
                                if (0 !== n || 0 !== r) {
                                    var u = h(n * n + r * r);
                                    t = Math.acos(n / u) * (r > 0 ? 1 : -1), e = [u, o / u], i = [l(n * s + r * a, u * u), 0]
                                } else if (0 !== s || 0 !== a) {
                                    var d = h(s * s + a * a);
                                    t = Math.asin(s / d) * (a > 0 ? 1 : -1), e = [o / d, d], i = [0, l(n * s + r * a, d * d)]
                                } else t = 0, i = e = [0, 0];
                                return {
                                    translation: this.getTranslation(),
                                    rotation: t * c,
                                    scaling: new _(e),
                                    skewing: new _(i[0] * c, i[1] * c)
                                }
                            },
                            getValues: function() {
                                return [this._a, this._b, this._c, this._d, this._tx, this._ty]
                            },
                            getTranslation: function() {
                                return new _(this._tx, this._ty)
                            },
                            getScaling: function() {
                                return this.decompose().scaling
                            },
                            getRotation: function() {
                                return this.decompose().rotation
                            },
                            applyToContext: function(t) {
                                this.isIdentity() || t.transform(this._a, this._b, this._c, this._d, this._tx, this._ty)
                            }
                        }, c.each(["a", "b", "c", "d", "tx", "ty"], (function(t) {
                            var e = c.capitalize(t),
                                i = "_" + t;
                            this["get" + e] = function() {
                                return this[i]
                            }, this["set" + e] = function(t) {
                                this[i] = t, this._changed()
                            }
                        }), {})),
                        k = c.extend({
                            _class: "Line",
                            initialize: function(t, e, i, n, r) {
                                var s = !1;
                                arguments.length >= 4 ? (this._px = t, this._py = e, this._vx = i, this._vy = n, s = r) : (this._px = t.x, this._py = t.y, this._vx = e.x, this._vy = e.y, s = i), s || (this._vx -= this._px, this._vy -= this._py)
                            },
                            getPoint: function() {
                                return new _(this._px, this._py)
                            },
                            getVector: function() {
                                return new _(this._vx, this._vy)
                            },
                            getLength: function() {
                                return this.getVector().getLength()
                            },
                            intersect: function(t, e) {
                                return k.intersect(this._px, this._py, this._vx, this._vy, t._px, t._py, t._vx, t._vy, !0, e)
                            },
                            getSide: function(t, e) {
                                return k.getSide(this._px, this._py, this._vx, this._vy, t.x, t.y, !0, e)
                            },
                            getDistance: function(t) {
                                return Math.abs(this.getSignedDistance(t))
                            },
                            getSignedDistance: function(t) {
                                return k.getSignedDistance(this._px, this._py, this._vx, this._vy, t.x, t.y, !0)
                            },
                            isCollinear: function(t) {
                                return _.isCollinear(this._vx, this._vy, t._vx, t._vy)
                            },
                            isOrthogonal: function(t) {
                                return _.isOrthogonal(this._vx, this._vy, t._vx, t._vy)
                            },
                            statics: {
                                intersect: function(t, e, i, n, r, s, a, o, h, l) {
                                    h || (i -= t, n -= e, a -= r, o -= s);
                                    var c = i * o - n * a;
                                    if (!m.isMachineZero(c)) {
                                        var u = t - r,
                                            d = e - s,
                                            p = (a * d - o * u) / c,
                                            f = (i * d - n * u) / c,
                                            g = -1e-12,
                                            v = 1 + 1e-12;
                                        if (l || g < p && p < v && g < f && f < v) return l || (p = p <= 0 ? 0 : p >= 1 ? 1 : p), new _(t + p * i, e + p * n)
                                    }
                                },
                                getSide: function(t, e, i, n, r, s, a, o) {
                                    a || (i -= t, n -= e);
                                    var h = r - t,
                                        l = h * n - (s - e) * i;
                                    return !o && m.isMachineZero(l) && (l = (h * i + h * i) / (i * i + n * n)) >= 0 && l <= 1 && (l = 0), l < 0 ? -1 : l > 0 ? 1 : 0
                                },
                                getSignedDistance: function(t, e, i, n, r, s, a) {
                                    return a || (i -= t, n -= e), 0 === i ? n > 0 ? r - t : t - r : 0 === n ? i < 0 ? s - e : e - s : ((r - t) * n - (s - e) * i) / (n > i ? n * Math.sqrt(1 + i * i / (n * n)) : i * Math.sqrt(1 + n * n / (i * i)))
                                },
                                getDistance: function(t, e, i, n, r, s, a) {
                                    return Math.abs(k.getSignedDistance(t, e, i, n, r, s, a))
                                }
                            }
                        }),
                        A = p.extend({
                            _class: "Project",
                            _list: "projects",
                            _reference: "project",
                            _compactSerialize: !0,
                            initialize: function(t) {
                                p.call(this, !0), this._children = [], this._namedChildren = {}, this._activeLayer = null, this._currentStyle = new Z(null, null, this), this._view = K.create(this, t || ht.getCanvas(1, 1)), this._selectionItems = {}, this._selectionCount = 0, this._updateVersion = 0
                            },
                            _serialize: function(t, e) {
                                return c.serialize(this._children, t, !0, e)
                            },
                            _changed: function(t, e) {
                                if (1 & t) {
                                    var i = this._view;
                                    i && (i._needsUpdate = !0, !i._requested && i._autoUpdate && i.requestUpdate())
                                }
                                var n = this._changes;
                                if (n && e) {
                                    var r = this._changesById,
                                        s = e._id,
                                        a = r[s];
                                    a ? a.flags |= t : n.push(r[s] = {
                                        item: e,
                                        flags: t
                                    })
                                }
                            },
                            clear: function() {
                                for (var t = this._children, e = t.length - 1; e >= 0; e--) t[e].remove()
                            },
                            isEmpty: function() {
                                return !this._children.length
                            },
                            remove: function t() {
                                return !!t.base.call(this) && (this._view && this._view.remove(), !0)
                            },
                            getView: function() {
                                return this._view
                            },
                            getCurrentStyle: function() {
                                return this._currentStyle
                            },
                            setCurrentStyle: function(t) {
                                this._currentStyle.set(t)
                            },
                            getIndex: function() {
                                return this._index
                            },
                            getOptions: function() {
                                return this._scope.settings
                            },
                            getLayers: function() {
                                return this._children
                            },
                            getActiveLayer: function() {
                                return this._activeLayer || new T({
                                    project: this,
                                    insert: !0
                                })
                            },
                            getSymbolDefinitions: function() {
                                var t = [],
                                    e = {};
                                return this.getItems({
                                    class: O,
                                    match: function(i) {
                                        var n = i._definition,
                                            r = n._id;
                                        return e[r] || (e[r] = !0, t.push(n)), !1
                                    }
                                }), t
                            },
                            getSymbols: "getSymbolDefinitions",
                            getSelectedItems: function() {
                                var t = this._selectionItems,
                                    e = [];
                                for (var i in t) {
                                    var n = t[i],
                                        r = n._selection;
                                    1 & r && n.isInserted() ? e.push(n) : r || this._updateSelection(n)
                                }
                                return e
                            },
                            _updateSelection: function(t) {
                                var e = t._id,
                                    i = this._selectionItems;
                                t._selection ? i[e] !== t && (this._selectionCount++, i[e] = t) : i[e] === t && (this._selectionCount--, delete i[e])
                            },
                            selectAll: function() {
                                for (var t = this._children, e = 0, i = t.length; e < i; e++) t[e].setFullySelected(!0)
                            },
                            deselectAll: function() {
                                var t = this._selectionItems;
                                for (var e in t) t[e].setFullySelected(!1)
                            },
                            addLayer: function(t) {
                                return this.insertLayer(o, t)
                            },
                            insertLayer: function(t, e) {
                                if (e instanceof T) {
                                    e._remove(!1, !0), c.splice(this._children, [e], t, 0), e._setProject(this, !0);
                                    var i = e._name;
                                    i && e.setName(i), this._changes && e._changed(5), this._activeLayer || (this._activeLayer = e)
                                } else e = null;
                                return e
                            },
                            _insertItem: function(t, e, i) {
                                return e = this.insertLayer(t, e) || (this._activeLayer || this._insertItem(o, new T(P.NO_INSERT), !0)).insertChild(t, e), i && e.activate && e.activate(), e
                            },
                            getItems: function(t) {
                                return P._getItems(this, t)
                            },
                            getItem: function(t) {
                                return P._getItems(this, t, null, null, !0)[0] || null
                            },
                            importJSON: function(t) {
                                this.activate();
                                var e = this._activeLayer;
                                return c.importJSON(t, e && e.isEmpty() && e)
                            },
                            removeOn: function(t) {
                                var e = this._removeSets;
                                if (e) {
                                    "mouseup" === t && (e.mousedrag = null);
                                    var i = e[t];
                                    if (i) {
                                        for (var n in i) {
                                            var r = i[n];
                                            for (var s in e) {
                                                var a = e[s];
                                                a && a != i && delete a[r._id]
                                            }
                                            r.remove()
                                        }
                                        e[t] = null
                                    }
                                }
                            },
                            draw: function(t, e, i) {
                                this._updateVersion++, t.save(), e.applyToContext(t);
                                for (var n = this._children, r = new c({
                                        offset: new _(0, 0),
                                        pixelRatio: i,
                                        viewMatrix: e.isIdentity() ? null : e,
                                        matrices: [new C],
                                        updateMatrix: !0
                                    }), s = 0, a = n.length; s < a; s++) n[s].draw(t, r);
                                if (t.restore(), this._selectionCount > 0) {
                                    t.save(), t.strokeWidth = 1;
                                    var o = this._selectionItems,
                                        h = this._scope.settings.handleSize,
                                        l = this._updateVersion;
                                    for (var u in o) o[u]._drawSelection(t, e, h, o, l);
                                    t.restore()
                                }
                            }
                        }),
                        P = c.extend(u, {
                            statics: {
                                extend: function t(e) {
                                    return e._serializeFields && (e._serializeFields = c.set({}, this.prototype._serializeFields, e._serializeFields)), t.base.apply(this, arguments)
                                },
                                NO_INSERT: {
                                    insert: !1
                                }
                            },
                            _class: "Item",
                            _name: null,
                            _applyMatrix: !0,
                            _canApplyMatrix: !0,
                            _canScaleStroke: !1,
                            _pivot: null,
                            _visible: !0,
                            _blendMode: "normal",
                            _opacity: 1,
                            _locked: !1,
                            _guide: !1,
                            _clipMask: !1,
                            _selection: 0,
                            _selectBounds: !0,
                            _selectChildren: !1,
                            _serializeFields: {
                                name: null,
                                applyMatrix: null,
                                matrix: new C,
                                pivot: null,
                                visible: !0,
                                blendMode: "normal",
                                opacity: 1,
                                locked: !1,
                                guide: !1,
                                clipMask: !1,
                                selected: !1,
                                data: {}
                            },
                            _prioritize: ["applyMatrix"]
                        }, new function() {
                            var t = ["onMouseDown", "onMouseUp", "onMouseDrag", "onClick", "onDoubleClick", "onMouseMove", "onMouseEnter", "onMouseLeave"];
                            return c.each(t, (function(t) {
                                this._events[t] = {
                                    install: function(t) {
                                        this.getView()._countItemEvent(t, 1)
                                    },
                                    uninstall: function(t) {
                                        this.getView()._countItemEvent(t, -1)
                                    }
                                }
                            }), {
                                _events: {
                                    onFrame: {
                                        install: function() {
                                            this.getView()._animateItem(this, !0)
                                        },
                                        uninstall: function() {
                                            this.getView()._animateItem(this, !1)
                                        }
                                    },
                                    onLoad: {},
                                    onError: {}
                                },
                                statics: {
                                    _itemHandlers: t
                                }
                            })
                        }, {
                            initialize: function() {},
                            _initialize: function(t, e) {
                                var i = t && c.isPlainObject(t),
                                    n = i && !0 === t.internal,
                                    r = this._matrix = new C,
                                    s = i && t.project || dt.project,
                                    a = dt.settings;
                                return this._id = n ? null : v.get(), this._parent = this._index = null, this._applyMatrix = this._canApplyMatrix && a.applyMatrix, e && r.translate(e), r._owner = this, this._style = new Z(s._currentStyle, this, s), n || i && 0 == t.insert || !a.insertItems && (!i || !0 !== t.insert) ? this._setProject(s) : (i && t.parent || s)._insertItem(o, this, !0), i && t !== P.NO_INSERT && this.set(t, {
                                    internal: !0,
                                    insert: !0,
                                    project: !0,
                                    parent: !0
                                }), i
                            },
                            _serialize: function(t, e) {
                                var i = {},
                                    n = this;

                                function r(r) {
                                    for (var s in r) {
                                        var a = n[s];
                                        c.equals(a, "leading" === s ? 1.2 * r.fontSize : r[s]) || (i[s] = c.serialize(a, t, "data" !== s, e))
                                    }
                                }
                                return r(this._serializeFields), this instanceof M || r(this._style._defaults), [this._class, i]
                            },
                            _changed: function(t) {
                                var e = this._symbol,
                                    i = this._parent || e,
                                    n = this._project;
                                8 & t && (this._bounds = this._position = this._decomposed = o), 16 & t && (this._globalMatrix = o), i && 72 & t && P._clearBoundsCache(i), 2 & t && P._clearBoundsCache(this), n && n._changed(t, this), e && e._changed(t)
                            },
                            getId: function() {
                                return this._id
                            },
                            getName: function() {
                                return this._name
                            },
                            setName: function(t) {
                                if (this._name && this._removeNamed(), t === +t + "") throw new Error("Names consisting only of numbers are not supported.");
                                var e = this._getOwner();
                                if (t && e) {
                                    var i = e._children,
                                        n = e._namedChildren;
                                    (n[t] = n[t] || []).push(this), t in i || (i[t] = this)
                                }
                                this._name = t || o, this._changed(256)
                            },
                            getStyle: function() {
                                return this._style
                            },
                            setStyle: function(t) {
                                this.getStyle().set(t)
                            }
                        }, c.each(["locked", "visible", "blendMode", "opacity", "guide"], (function(t) {
                            var e = c.capitalize(t),
                                i = "_" + t,
                                n = {
                                    locked: 256,
                                    visible: 265
                                };
                            this["get" + e] = function() {
                                return this[i]
                            }, this["set" + e] = function(e) {
                                e != this[i] && (this[i] = e, this._changed(n[t] || 257))
                            }
                        }), {}), {
                            beans: !0,
                            getSelection: function() {
                                return this._selection
                            },
                            setSelection: function(t) {
                                if (t !== this._selection) {
                                    this._selection = t;
                                    var e = this._project;
                                    e && (e._updateSelection(this), this._changed(257))
                                }
                            },
                            _changeSelection: function(t, e) {
                                var i = this._selection;
                                this.setSelection(e ? i | t : i & ~t)
                            },
                            isSelected: function() {
                                if (this._selectChildren)
                                    for (var t = this._children, e = 0, i = t.length; e < i; e++)
                                        if (t[e].isSelected()) return !0;
                                return !!(1 & this._selection)
                            },
                            setSelected: function(t) {
                                if (this._selectChildren)
                                    for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i].setSelected(t);
                                this._changeSelection(1, t)
                            },
                            isFullySelected: function() {
                                var t = this._children,
                                    e = !!(1 & this._selection);
                                if (t && e) {
                                    for (var i = 0, n = t.length; i < n; i++)
                                        if (!t[i].isFullySelected()) return !1;
                                    return !0
                                }
                                return e
                            },
                            setFullySelected: function(t) {
                                var e = this._children;
                                if (e)
                                    for (var i = 0, n = e.length; i < n; i++) e[i].setFullySelected(t);
                                this._changeSelection(1, t)
                            },
                            isClipMask: function() {
                                return this._clipMask
                            },
                            setClipMask: function(t) {
                                this._clipMask != (t = !!t) && (this._clipMask = t, t && (this.setFillColor(null), this.setStrokeColor(null)), this._changed(257), this._parent && this._parent._changed(2048))
                            },
                            getData: function() {
                                return this._data || (this._data = {}), this._data
                            },
                            setData: function(t) {
                                this._data = t
                            },
                            getPosition: function(t) {
                                var e = t ? _ : y,
                                    i = this._position || (this._position = this._getPositionFromBounds());
                                return new e(i.x, i.y, this, "setPosition")
                            },
                            setPosition: function() {
                                this.translate(_.read(arguments).subtract(this.getPosition(!0)))
                            },
                            _getPositionFromBounds: function(t) {
                                return this._pivot ? this._matrix._transformPoint(this._pivot) : (t || this.getBounds()).getCenter(!0)
                            },
                            getPivot: function() {
                                var t = this._pivot;
                                return t ? new y(t.x, t.y, this, "setPivot") : null
                            },
                            setPivot: function() {
                                this._pivot = _.read(arguments, 0, {
                                    clone: !0,
                                    readNull: !0
                                }), this._position = o
                            }
                        }, c.each({
                            getStrokeBounds: {
                                stroke: !0
                            },
                            getHandleBounds: {
                                handle: !0
                            },
                            getInternalBounds: {
                                internal: !0
                            }
                        }, (function(t, e) {
                            this[e] = function(e) {
                                return this.getBounds(e, t)
                            }
                        }), {
                            beans: !0,
                            getBounds: function(t, e) {
                                var i = e || t instanceof C,
                                    n = c.set({}, i ? e : t, this._boundsOptions);
                                n.stroke && !this.getStrokeScaling() || (n.cacheItem = this);
                                var r = this._getCachedBounds(i && t, n).rect;
                                return arguments.length ? r : new S(r.x, r.y, r.width, r.height, this, "setBounds")
                            },
                            setBounds: function() {
                                var t = w.read(arguments),
                                    e = this.getBounds(),
                                    i = this._matrix,
                                    n = new C,
                                    r = t.getCenter();
                                n.translate(r), t.width == e.width && t.height == e.height || (i.isInvertible() || (i.set(i._backup || (new C).translate(i.getTranslation())), e = this.getBounds()), n.scale(0 !== e.width ? t.width / e.width : 0, 0 !== e.height ? t.height / e.height : 0)), r = e.getCenter(), n.translate(-r.x, -r.y), this.transform(n)
                            },
                            _getBounds: function(t, e) {
                                var i = this._children;
                                return i && i.length ? (P._updateBoundsCache(this, e.cacheItem), P._getBounds(i, t, e)) : new w
                            },
                            _getBoundsCacheKey: function(t, e) {
                                return [t.stroke ? 1 : 0, t.handle ? 1 : 0, e ? 1 : 0].join("")
                            },
                            _getCachedBounds: function(t, e, i) {
                                t = t && t._orNullIfIdentity();
                                var n = e.internal && !i,
                                    r = e.cacheItem,
                                    s = n ? null : this._matrix._orNullIfIdentity(),
                                    a = r && (!t || t.equals(s)) && this._getBoundsCacheKey(e, n),
                                    o = this._bounds;
                                if (P._updateBoundsCache(this._parent || this._symbol, r), a && o && a in o) return {
                                    rect: (d = o[a]).rect.clone(),
                                    nonscaling: d.nonscaling
                                };
                                var h = this._getBounds(t || s, e),
                                    l = h.rect || h,
                                    c = this._style,
                                    u = h.nonscaling || c.hasStroke() && !c.getStrokeScaling();
                                if (a) {
                                    o || (this._bounds = o = {});
                                    var d = o[a] = {
                                        rect: l.clone(),
                                        nonscaling: u,
                                        internal: n
                                    }
                                }
                                return {
                                    rect: l,
                                    nonscaling: u
                                }
                            },
                            _getStrokeMatrix: function(t, e) {
                                var i = this.getStrokeScaling() ? null : e && e.internal ? this : this._parent || this._symbol && this._symbol._item,
                                    n = i ? i.getViewMatrix().invert() : t;
                                return n && n._shiftless()
                            },
                            statics: {
                                _updateBoundsCache: function(t, e) {
                                    if (t && e) {
                                        var i = e._id,
                                            n = t._boundsCache = t._boundsCache || {
                                                ids: {},
                                                list: []
                                            };
                                        n.ids[i] || (n.list.push(e), n.ids[i] = e)
                                    }
                                },
                                _clearBoundsCache: function(t) {
                                    var e = t._boundsCache;
                                    if (e) {
                                        t._bounds = t._position = t._boundsCache = o;
                                        for (var i = 0, n = e.list, r = n.length; i < r; i++) {
                                            var s = n[i];
                                            s !== t && (s._bounds = s._position = o, s._boundsCache && P._clearBoundsCache(s))
                                        }
                                    }
                                },
                                _getBounds: function(t, e, i) {
                                    var n = 1 / 0,
                                        r = -n,
                                        s = n,
                                        a = r,
                                        o = !1;
                                    i = i || {};
                                    for (var h = 0, l = t.length; h < l; h++) {
                                        var c = t[h];
                                        if (c._visible && !c.isEmpty(!0)) {
                                            var u = c._getCachedBounds(e && e.appended(c._matrix), i, !0),
                                                d = u.rect;
                                            n = Math.min(d.x, n), s = Math.min(d.y, s), r = Math.max(d.x + d.width, r), a = Math.max(d.y + d.height, a), u.nonscaling && (o = !0)
                                        }
                                    }
                                    return {
                                        rect: isFinite(n) ? new w(n, s, r - n, a - s) : new w,
                                        nonscaling: o
                                    }
                                }
                            }
                        }), {
                            beans: !0,
                            _decompose: function() {
                                return this._applyMatrix ? null : this._decomposed || (this._decomposed = this._matrix.decompose())
                            },
                            getRotation: function() {
                                var t = this._decompose();
                                return t ? t.rotation : 0
                            },
                            setRotation: function(t) {
                                var e = this.getRotation();
                                if (null != e && null != t) {
                                    var i = this._decomposed;
                                    this.rotate(t - e), i && (i.rotation = t, this._decomposed = i)
                                }
                            },
                            getScaling: function() {
                                var t = this._decompose(),
                                    e = t && t.scaling;
                                return new y(e ? e.x : 1, e ? e.y : 1, this, "setScaling")
                            },
                            setScaling: function() {
                                var t = this.getScaling(),
                                    e = _.read(arguments, 0, {
                                        clone: !0,
                                        readNull: !0
                                    });
                                if (t && e && !t.equals(e)) {
                                    var i = this.getRotation(),
                                        n = this._decomposed,
                                        r = new C,
                                        s = m.isZero;
                                    if (s(t.x) || s(t.y)) r.translate(n.translation), i && r.rotate(i), r.scale(e.x, e.y), this._matrix.set(r);
                                    else {
                                        var a = this.getPosition(!0);
                                        r.translate(a), i && r.rotate(i), r.scale(e.x / t.x, e.y / t.y), i && r.rotate(-i), r.translate(a.negate()), this.transform(r)
                                    }
                                    n && (n.scaling = e, this._decomposed = n)
                                }
                            },
                            getMatrix: function() {
                                return this._matrix
                            },
                            setMatrix: function() {
                                var t = this._matrix;
                                t.set.apply(t, arguments)
                            },
                            getGlobalMatrix: function(t) {
                                var e = this._globalMatrix;
                                if (e)
                                    for (var i = this._parent, n = []; i;) {
                                        if (!i._globalMatrix) {
                                            e = null;
                                            for (var r = 0, s = n.length; r < s; r++) n[r]._globalMatrix = null;
                                            break
                                        }
                                        n.push(i), i = i._parent
                                    }
                                e || (e = this._globalMatrix = this._matrix.clone(), (i = this._parent) && e.prepend(i.getGlobalMatrix(!0)));
                                return t ? e : e.clone()
                            },
                            getViewMatrix: function() {
                                return this.getGlobalMatrix().prepend(this.getView()._matrix)
                            },
                            getApplyMatrix: function() {
                                return this._applyMatrix
                            },
                            setApplyMatrix: function(t) {
                                (this._applyMatrix = this._canApplyMatrix && !!t) && this.transform(null, !0)
                            },
                            getTransformContent: "#getApplyMatrix",
                            setTransformContent: "#setApplyMatrix"
                        }, {
                            getProject: function() {
                                return this._project
                            },
                            _setProject: function(t, e) {
                                if (this._project !== t) {
                                    this._project && this._installEvents(!1), this._project = t;
                                    for (var i = this._children, n = 0, r = i && i.length; n < r; n++) i[n]._setProject(t);
                                    e = !0
                                }
                                e && this._installEvents(!0)
                            },
                            getView: function() {
                                return this._project._view
                            },
                            _installEvents: function t(e) {
                                t.base.call(this, e);
                                for (var i = this._children, n = 0, r = i && i.length; n < r; n++) i[n]._installEvents(e)
                            },
                            getLayer: function() {
                                for (var t = this; t = t._parent;)
                                    if (t instanceof T) return t;
                                return null
                            },
                            getParent: function() {
                                return this._parent
                            },
                            setParent: function(t) {
                                return t.addChild(this)
                            },
                            _getOwner: "#getParent",
                            getChildren: function() {
                                return this._children
                            },
                            setChildren: function(t) {
                                this.removeChildren(), this.addChildren(t)
                            },
                            getFirstChild: function() {
                                return this._children && this._children[0] || null
                            },
                            getLastChild: function() {
                                return this._children && this._children[this._children.length - 1] || null
                            },
                            getNextSibling: function() {
                                var t = this._getOwner();
                                return t && t._children[this._index + 1] || null
                            },
                            getPreviousSibling: function() {
                                var t = this._getOwner();
                                return t && t._children[this._index - 1] || null
                            },
                            getIndex: function() {
                                return this._index
                            },
                            equals: function(t) {
                                return t === this || t && this._class === t._class && this._style.equals(t._style) && this._matrix.equals(t._matrix) && this._locked === t._locked && this._visible === t._visible && this._blendMode === t._blendMode && this._opacity === t._opacity && this._clipMask === t._clipMask && this._guide === t._guide && this._equals(t) || !1
                            },
                            _equals: function(t) {
                                return c.equals(this._children, t._children)
                            },
                            clone: function(t) {
                                var e = new this.constructor(P.NO_INSERT),
                                    i = this._children,
                                    n = c.pick(t ? t.insert : o, t === o || !0 === t),
                                    r = c.pick(t ? t.deep : o, !0);
                                i && e.copyAttributes(this), i && !r || e.copyContent(this), i || e.copyAttributes(this), n && e.insertAbove(this);
                                var s = this._name,
                                    a = this._parent;
                                if (s && a) {
                                    i = a._children;
                                    for (var h = s, l = 1; i[s];) s = h + " " + l++;
                                    s !== h && e.setName(s)
                                }
                                return e
                            },
                            copyContent: function(t) {
                                for (var e = t._children, i = 0, n = e && e.length; i < n; i++) this.addChild(e[i].clone(!1), !0)
                            },
                            copyAttributes: function(t, e) {
                                this.setStyle(t._style);
                                for (var i = ["_locked", "_visible", "_blendMode", "_opacity", "_clipMask", "_guide"], n = 0, r = i.length; n < r; n++) {
                                    var s = i[n];
                                    t.hasOwnProperty(s) && (this[s] = t[s])
                                }
                                e || this._matrix.set(t._matrix, !0), this.setApplyMatrix(t._applyMatrix), this.setPivot(t._pivot), this.setSelection(t._selection);
                                var a = t._data,
                                    o = t._name;
                                this._data = a ? c.clone(a) : null, o && this.setName(o)
                            },
                            rasterize: function(t, e) {
                                var i, n, r;
                                c.isPlainObject(t) ? (i = t.resolution, n = t.insert, r = t.raster) : (i = t, n = e), r ? r.matrix.reset(!0) : r = new I(P.NO_INSERT);
                                var s = this.getStrokeBounds(),
                                    a = (i || this.getView().getResolution()) / 72,
                                    h = s.getTopLeft().floor(),
                                    l = s.getBottomRight().ceil(),
                                    u = new x(l.subtract(h)),
                                    d = u.multiply(a);
                                if (r.setSize(d, !0), !d.isZero()) {
                                    var p = r.getContext(!0),
                                        f = (new C).scale(a).translate(h.negate());
                                    p.save(), f.applyToContext(p), this.draw(p, new c({
                                        matrices: [f]
                                    })), p.restore()
                                }
                                return r.transform((new C).translate(h.add(u.divide(2))).scale(1 / a)), (n === o || n) && r.insertAbove(this), r
                            },
                            contains: function() {
                                var t = this._matrix;
                                return t.isInvertible() && !!this._contains(t._inverseTransform(_.read(arguments)))
                            },
                            _contains: function(t) {
                                var e = this._children;
                                if (e) {
                                    for (var i = e.length - 1; i >= 0; i--)
                                        if (e[i].contains(t)) return !0;
                                    return !1
                                }
                                return t.isInside(this.getInternalBounds())
                            },
                            isInside: function() {
                                return w.read(arguments).contains(this.getBounds())
                            },
                            _asPathItem: function() {
                                return new F.Rectangle({
                                    rectangle: this.getInternalBounds(),
                                    matrix: this._matrix,
                                    insert: !1
                                })
                            },
                            intersects: function(t, e) {
                                return t instanceof P && this._asPathItem().getIntersections(t._asPathItem(), null, e, !0).length > 0
                            }
                        }, new function() {
                            function t() {
                                var t = arguments;
                                return this._hitTest(_.read(t), D.getOptions(t))
                            }

                            function e() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = D.getOptions(t),
                                    n = [];
                                return this._hitTest(e, new c({
                                    all: n
                                }, i)), n
                            }

                            function i(t, e, i, n) {
                                var r = this._children;
                                if (r)
                                    for (var s = r.length - 1; s >= 0; s--) {
                                        var a = r[s],
                                            o = a !== n && a._hitTest(t, e, i);
                                        if (o && !e.all) return o
                                    }
                                return null
                            }
                            return A.inject({
                                hitTest: t,
                                hitTestAll: e,
                                _hitTest: i
                            }), {
                                hitTest: t,
                                hitTestAll: e,
                                _hitTestChildren: i
                            }
                        }, {
                            _hitTest: function(t, e, i) {
                                if (this._locked || !this._visible || this._guide && !e.guides || this.isEmpty()) return null;
                                var n = this._matrix,
                                    r = i ? i.appended(n) : this.getGlobalMatrix().prepend(this.getView()._matrix),
                                    s = Math.max(e.tolerance, 1e-12),
                                    a = e._tolerancePadding = new x(F._getStrokePadding(s, n._shiftless().invert()));
                                if (!(t = n._inverseTransform(t)) || !this._children && !this.getBounds({
                                        internal: !0,
                                        stroke: !0,
                                        handle: !0
                                    }).expand(a.multiply(2))._containsPoint(t)) return null;
                                var o, h, l = !(e.guides && !this._guide || e.selected && !this.isSelected() || e.type && e.type !== c.hyphenate(this._class) || e.class && !(this instanceof e.class)),
                                    u = e.match,
                                    d = this;

                                function p(t) {
                                    return t && u && !u(t) && (t = null), t && e.all && e.all.push(t), t
                                }

                                function f(e, i) {
                                    var n = i ? o["get" + i]() : d.getPosition();
                                    if (t.subtract(n).divide(a).length <= 1) return new D(e, d, {
                                        name: i ? c.hyphenate(i) : e,
                                        point: n
                                    })
                                }
                                var g = e.position,
                                    m = e.center,
                                    v = e.bounds;
                                if (l && this._parent && (g || m || v)) {
                                    if ((m || v) && (o = this.getInternalBounds()), !(h = g && f("position") || m && f("center", "Center")) && v)
                                        for (var _ = ["TopLeft", "TopRight", "BottomLeft", "BottomRight", "LeftCenter", "TopCenter", "RightCenter", "BottomCenter"], y = 0; y < 8 && !h; y++) h = f("bounds", _[y]);
                                    h = p(h)
                                }
                                return h || (h = this._hitTestChildren(t, e, r) || l && p(this._hitTestSelf(t, e, r, this.getStrokeScaling() ? null : r._shiftless().invert())) || null), h && h.point && (h.point = n.transform(h.point)), h
                            },
                            _hitTestSelf: function(t, e) {
                                if (e.fill && this.hasFill() && this._contains(t)) return new D("fill", this)
                            },
                            matches: function(t, e) {
                                var i = typeof t;
                                if ("object" === i) {
                                    for (var n in t)
                                        if (t.hasOwnProperty(n) && !this.matches(n, t[n])) return !1;
                                    return !0
                                }
                                if ("function" === i) return t(this);
                                if ("match" === t) return e(this);
                                var r = /^(empty|editable)$/.test(t) ? this["is" + c.capitalize(t)]() : "type" === t ? c.hyphenate(this._class) : this[t];
                                if ("class" === t) {
                                    if ("function" == typeof e) return this instanceof e;
                                    r = this._class
                                }
                                if ("function" == typeof e) return !!e(r);
                                if (e) {
                                    if (e.test) return e.test(r);
                                    if (c.isPlainObject(e)) return function t(e, i) {
                                        for (var n in e)
                                            if (e.hasOwnProperty(n)) {
                                                var r = e[n],
                                                    s = i[n];
                                                if (c.isPlainObject(r) && c.isPlainObject(s)) {
                                                    if (!t(r, s)) return !1
                                                } else if (!c.equals(r, s)) return !1
                                            }
                                        return !0
                                    }(e, r)
                                }
                                return c.equals(r, e)
                            },
                            getItems: function(t) {
                                return P._getItems(this, t, this._matrix)
                            },
                            getItem: function(t) {
                                return P._getItems(this, t, this._matrix, null, !0)[0] || null
                            },
                            statics: {
                                _getItems: function t(e, i, n, r, s) {
                                    if (!r) {
                                        var a = "object" == typeof i && i,
                                            o = a && a.overlapping,
                                            h = a && a.inside,
                                            l = (_ = o || h) && w.read([_]);
                                        r = {
                                            items: [],
                                            recursive: a && !1 !== a.recursive,
                                            inside: !!h,
                                            overlapping: !!o,
                                            rect: l,
                                            path: o && new F.Rectangle({
                                                rectangle: l,
                                                insert: !1
                                            })
                                        }, a && (i = c.filter({}, i, {
                                            recursive: !0,
                                            inside: !0,
                                            overlapping: !0
                                        }))
                                    }
                                    var u = e._children,
                                        d = r.items;
                                    n = (l = r.rect) && (n || new C);
                                    for (var p = 0, f = u && u.length; p < f; p++) {
                                        var g = u[p],
                                            m = n && n.appended(g._matrix),
                                            v = !0;
                                        if (l) {
                                            var _ = g.getBounds(m);
                                            if (!l.intersects(_)) continue;
                                            l.contains(_) || r.overlapping && (_.contains(l) || r.path.intersects(g, m)) || (v = !1)
                                        }
                                        if (v && g.matches(i) && (d.push(g), s)) break;
                                        if (!1 !== r.recursive && t(g, i, m, r, s), s && d.length > 0) break
                                    }
                                    return d
                                }
                            }
                        }, {
                            importJSON: function(t) {
                                var e = c.importJSON(t, this);
                                return e !== this ? this.addChild(e) : e
                            },
                            addChild: function(t) {
                                return this.insertChild(o, t)
                            },
                            insertChild: function(t, e) {
                                var i = e ? this.insertChildren(t, [e]) : null;
                                return i && i[0]
                            },
                            addChildren: function(t) {
                                return this.insertChildren(this._children.length, t)
                            },
                            insertChildren: function(t, e) {
                                var i = this._children;
                                if (i && e && e.length > 0) {
                                    for (var n = {}, r = (e = c.slice(e)).length - 1; r >= 0; r--) {
                                        var s = (l = e[r]) && l._id;
                                        !l || n[s] ? e.splice(r, 1) : (l._remove(!1, !0), n[s] = !0)
                                    }
                                    c.splice(i, e, t, 0);
                                    for (var a = this._project, o = a._changes, h = (r = 0, e.length); r < h; r++) {
                                        var l, u = (l = e[r])._name;
                                        l._parent = this, l._setProject(a, !0), u && l.setName(u), o && l._changed(5)
                                    }
                                    this._changed(11)
                                } else e = null;
                                return e
                            },
                            _insertItem: "#insertChild",
                            _insertAt: function(t, e) {
                                var i = t && t._getOwner(),
                                    n = t !== this && i ? this : null;
                                return n && (n._remove(!1, !0), i._insertItem(t._index + e, n)), n
                            },
                            insertAbove: function(t) {
                                return this._insertAt(t, 1)
                            },
                            insertBelow: function(t) {
                                return this._insertAt(t, 0)
                            },
                            sendToBack: function() {
                                var t = this._getOwner();
                                return t ? t._insertItem(0, this) : null
                            },
                            bringToFront: function() {
                                var t = this._getOwner();
                                return t ? t._insertItem(o, this) : null
                            },
                            appendTop: "#addChild",
                            appendBottom: function(t) {
                                return this.insertChild(0, t)
                            },
                            moveAbove: "#insertAbove",
                            moveBelow: "#insertBelow",
                            addTo: function(t) {
                                return t._insertItem(o, this)
                            },
                            copyTo: function(t) {
                                return this.clone(!1).addTo(t)
                            },
                            reduce: function(t) {
                                var e = this._children;
                                if (e && 1 === e.length) {
                                    var i = e[0].reduce(t);
                                    return this._parent ? (i.insertAbove(this), this.remove()) : i.remove(), i
                                }
                                return this
                            },
                            _removeNamed: function() {
                                var t = this._getOwner();
                                if (t) {
                                    var e = t._children,
                                        i = t._namedChildren,
                                        n = this._name,
                                        r = i[n],
                                        s = r ? r.indexOf(this) : -1; - 1 !== s && (e[n] == this && delete e[n], r.splice(s, 1), r.length ? e[n] = r[0] : delete i[n])
                                }
                            },
                            _remove: function(t, e) {
                                var i = this._getOwner(),
                                    n = this._project,
                                    r = this._index;
                                return this._style && this._style._dispose(), !!i && (this._name && this._removeNamed(), null != r && (n._activeLayer === this && (n._activeLayer = this.getNextSibling() || this.getPreviousSibling()), c.splice(i._children, null, r, 1)), this._installEvents(!1), t && n._changes && this._changed(5), e && i._changed(11, this), this._parent = null, !0)
                            },
                            remove: function() {
                                return this._remove(!0, !0)
                            },
                            replaceWith: function(t) {
                                var e = t && t.insertBelow(this);
                                return e && this.remove(), e
                            },
                            removeChildren: function(t, e) {
                                if (!this._children) return null;
                                t = t || 0, e = c.pick(e, this._children.length);
                                for (var i = c.splice(this._children, null, t, e - t), n = i.length - 1; n >= 0; n--) i[n]._remove(!0, !1);
                                return i.length > 0 && this._changed(11), i
                            },
                            clear: "#removeChildren",
                            reverseChildren: function() {
                                if (this._children) {
                                    this._children.reverse();
                                    for (var t = 0, e = this._children.length; t < e; t++) this._children[t]._index = t;
                                    this._changed(11)
                                }
                            },
                            isEmpty: function(t) {
                                var e = this._children,
                                    i = e ? e.length : 0;
                                if (t) {
                                    for (var n = 0; n < i; n++)
                                        if (!e[n].isEmpty(t)) return !1;
                                    return !0
                                }
                                return !i
                            },
                            isEditable: function() {
                                for (var t = this; t;) {
                                    if (!t._visible || t._locked) return !1;
                                    t = t._parent
                                }
                                return !0
                            },
                            hasFill: function() {
                                return this.getStyle().hasFill()
                            },
                            hasStroke: function() {
                                return this.getStyle().hasStroke()
                            },
                            hasShadow: function() {
                                return this.getStyle().hasShadow()
                            },
                            _getOrder: function(t) {
                                function e(t) {
                                    var e = [];
                                    do {
                                        e.unshift(t)
                                    } while (t = t._parent);
                                    return e
                                }
                                for (var i = e(this), n = e(t), r = 0, s = Math.min(i.length, n.length); r < s; r++)
                                    if (i[r] != n[r]) return i[r]._index < n[r]._index ? 1 : -1;
                                return 0
                            },
                            hasChildren: function() {
                                return this._children && this._children.length > 0
                            },
                            isInserted: function() {
                                return !!this._parent && this._parent.isInserted()
                            },
                            isAbove: function(t) {
                                return -1 === this._getOrder(t)
                            },
                            isBelow: function(t) {
                                return 1 === this._getOrder(t)
                            },
                            isParent: function(t) {
                                return this._parent === t
                            },
                            isChild: function(t) {
                                return t && t._parent === this
                            },
                            isDescendant: function(t) {
                                for (var e = this; e = e._parent;)
                                    if (e === t) return !0;
                                return !1
                            },
                            isAncestor: function(t) {
                                return !!t && t.isDescendant(this)
                            },
                            isSibling: function(t) {
                                return this._parent === t._parent
                            },
                            isGroupedWith: function(t) {
                                for (var e = this._parent; e;) {
                                    if (e._parent && /^(Group|Layer|CompoundPath)$/.test(e._class) && t.isDescendant(e)) return !0;
                                    e = e._parent
                                }
                                return !1
                            }
                        }, c.each(["rotate", "scale", "shear", "skew"], (function(t) {
                            var e = "rotate" === t;
                            this[t] = function() {
                                var i = arguments,
                                    n = (e ? c : _).read(i),
                                    r = _.read(i, 0, {
                                        readNull: !0
                                    });
                                return this.transform((new C)[t](n, r || this.getPosition(!0)))
                            }
                        }), {
                            translate: function() {
                                var t = new C;
                                return this.transform(t.translate.apply(t, arguments))
                            },
                            transform: function(t, e, i) {
                                var n = this._matrix,
                                    r = t && !t.isIdentity(),
                                    s = i && this._canApplyMatrix || this._applyMatrix && (r || !n.isIdentity() || e && this._children);
                                if (!r && !s) return this;
                                if (r) {
                                    !t.isInvertible() && n.isInvertible() && (n._backup = n.getValues()), n.prepend(t, !0);
                                    var a = this._style,
                                        o = a.getFillColor(!0),
                                        h = a.getStrokeColor(!0);
                                    o && o.transform(t), h && h.transform(t)
                                }
                                if (s && (s = this._transformContent(n, e, i))) {
                                    var l = this._pivot;
                                    l && n._transformPoint(l, l, !0), n.reset(!0), i && this._canApplyMatrix && (this._applyMatrix = !0)
                                }
                                var c = this._bounds,
                                    u = this._position;
                                (r || s) && this._changed(25);
                                var d = r && c && t.decompose();
                                if (d && d.skewing.isZero() && d.rotation % 90 == 0) {
                                    for (var p in c) {
                                        var f = c[p];
                                        if (f.nonscaling) delete c[p];
                                        else if (s || !f.internal) {
                                            var g = f.rect;
                                            t._transformBounds(g, g)
                                        }
                                    }
                                    this._bounds = c;
                                    var m = c[this._getBoundsCacheKey(this._boundsOptions || {})];
                                    m && (this._position = this._getPositionFromBounds(m.rect))
                                } else r && u && this._pivot && (this._position = t._transformPoint(u, u));
                                return this
                            },
                            _transformContent: function(t, e, i) {
                                var n = this._children;
                                if (n) {
                                    for (var r = 0, s = n.length; r < s; r++) n[r].transform(t, e, i);
                                    return !0
                                }
                            },
                            globalToLocal: function() {
                                return this.getGlobalMatrix(!0)._inverseTransform(_.read(arguments))
                            },
                            localToGlobal: function() {
                                return this.getGlobalMatrix(!0)._transformPoint(_.read(arguments))
                            },
                            parentToLocal: function() {
                                return this._matrix._inverseTransform(_.read(arguments))
                            },
                            localToParent: function() {
                                return this._matrix._transformPoint(_.read(arguments))
                            },
                            fitBounds: function(t, e) {
                                t = w.read(arguments);
                                var i = this.getBounds(),
                                    n = i.height / i.width,
                                    r = t.height / t.width,
                                    s = (e ? n > r : n < r) ? t.width / i.width : t.height / i.height,
                                    a = new w(new _, new x(i.width * s, i.height * s));
                                a.setCenter(t.getCenter()), this.setBounds(a)
                            }
                        }), {
                            _setStyles: function(t, e, i) {
                                var n = this._style,
                                    r = this._matrix;
                                if (n.hasFill() && (t.fillStyle = n.getFillColor().toCanvasStyle(t, r)), n.hasStroke()) {
                                    t.strokeStyle = n.getStrokeColor().toCanvasStyle(t, r), t.lineWidth = n.getStrokeWidth();
                                    var s = n.getStrokeJoin(),
                                        a = n.getStrokeCap(),
                                        o = n.getMiterLimit();
                                    if (s && (t.lineJoin = s), a && (t.lineCap = a), o && (t.miterLimit = o), dt.support.nativeDash) {
                                        var h = n.getDashArray(),
                                            l = n.getDashOffset();
                                        h && h.length && ("setLineDash" in t ? (t.setLineDash(h), t.lineDashOffset = l) : (t.mozDash = h, t.mozDashOffset = l))
                                    }
                                }
                                if (n.hasShadow()) {
                                    var c = e.pixelRatio || 1,
                                        u = i._shiftless().prepend((new C).scale(c, c)),
                                        d = u.transform(new _(n.getShadowBlur(), 0)),
                                        p = u.transform(this.getShadowOffset());
                                    t.shadowColor = n.getShadowColor().toCanvasStyle(t), t.shadowBlur = d.getLength(), t.shadowOffsetX = p.x, t.shadowOffsetY = p.y
                                }
                            },
                            draw: function(t, e, i) {
                                this._updateVersion = this._project._updateVersion;
                                if (this._visible && 0 !== this._opacity) {
                                    var n = e.matrices,
                                        r = e.viewMatrix,
                                        s = this._matrix,
                                        a = n[n.length - 1].appended(s);
                                    if (a.isInvertible()) {
                                        r = r ? r.appended(a) : a, n.push(a), e.updateMatrix && (this._globalMatrix = a);
                                        var o, h, l, c = this._blendMode,
                                            u = m.clamp(this._opacity, 0, 1),
                                            d = "normal" === c,
                                            p = lt.nativeModes[c],
                                            f = d && 1 === u || e.dontStart || e.clip || (p || d && u < 1) && this._canComposite(),
                                            g = e.pixelRatio || 1;
                                        if (!f) {
                                            var v = this.getStrokeBounds(r);
                                            if (!v.width || !v.height) return void n.pop();
                                            l = e.offset, h = e.offset = v.getTopLeft().floor(), o = t, t = ht.getContext(v.getSize().ceil().add(1).multiply(g)), 1 !== g && t.scale(g, g)
                                        }
                                        t.save();
                                        var _ = i ? i.appended(s) : this._canScaleStroke && !this.getStrokeScaling(!0) && r,
                                            y = !f && e.clipItem,
                                            x = !_ || y;
                                        if (f ? (t.globalAlpha = u, p && (t.globalCompositeOperation = c)) : x && t.translate(-h.x, -h.y), x && (f ? s : r).applyToContext(t), y && e.clipItem.draw(t, e.extend({
                                                clip: !0
                                            })), _) {
                                            t.setTransform(g, 0, 0, g, 0, 0);
                                            var b = e.offset;
                                            b && t.translate(-b.x, -b.y)
                                        }
                                        this._draw(t, e, r, _), t.restore(), n.pop(), e.clip && !e.dontFinish && t.clip(this.getFillRule()), f || (lt.process(c, t, o, u, h.subtract(l).multiply(g)), ht.release(t), e.offset = l)
                                    }
                                }
                            },
                            _isUpdated: function(t) {
                                var e = this._parent;
                                if (e instanceof j) return e._isUpdated(t);
                                var i = this._updateVersion === t;
                                return !i && e && e._visible && e._isUpdated(t) && (this._updateVersion = t, i = !0), i
                            },
                            _drawSelection: function(t, e, i, n, r) {
                                var s = this._selection,
                                    a = 1 & s,
                                    o = 2 & s || a && this._selectBounds,
                                    h = 4 & s;
                                if (this._drawSelected || (a = !1), (a || o || h) && this._isUpdated(r)) {
                                    var l, c = this.getSelectedColor(!0) || (l = this.getLayer()) && l.getSelectedColor(!0),
                                        u = e.appended(this.getGlobalMatrix(!0)),
                                        d = i / 2;
                                    if (t.strokeStyle = t.fillStyle = c ? c.toCanvasStyle(t) : "#009dec", a && this._drawSelected(t, u, n), h) {
                                        var p = this.getPosition(!0),
                                            f = this._parent,
                                            g = f ? f.localToGlobal(p) : p,
                                            m = g.x,
                                            v = g.y;
                                        t.beginPath(), t.arc(m, v, d, 0, 2 * Math.PI, !0), t.stroke();
                                        for (var _ = [
                                                [0, -1],
                                                [1, 0],
                                                [0, 1],
                                                [-1, 0]
                                            ], y = d, x = i + 1, b = 0; b < 4; b++) {
                                            var w = _[b],
                                                S = w[0],
                                                C = w[1];
                                            t.moveTo(m + S * y, v + C * y), t.lineTo(m + S * x, v + C * x), t.stroke()
                                        }
                                    }
                                    if (o) {
                                        var k = u._transformCorners(this.getInternalBounds());
                                        t.beginPath();
                                        for (b = 0; b < 8; b++) t[b ? "lineTo" : "moveTo"](k[b], k[++b]);
                                        t.closePath(), t.stroke();
                                        for (b = 0; b < 8; b++) t.fillRect(k[b] - d, k[++b] - d, i, i)
                                    }
                                }
                            },
                            _canComposite: function() {
                                return !1
                            }
                        }, c.each(["down", "drag", "up", "move"], (function(t) {
                            this["removeOn" + c.capitalize(t)] = function() {
                                var e = {};
                                return e[t] = !0, this.removeOn(e)
                            }
                        }), {
                            removeOn: function(t) {
                                for (var e in t)
                                    if (t[e]) {
                                        var i = "mouse" + e,
                                            n = this._project,
                                            r = n._removeSets = n._removeSets || {};
                                        r[i] = r[i] || {}, r[i][this._id] = this
                                    }
                                return this
                            }
                        }), {
                            tween: function(t, e, i) {
                                i || (i = e, e = t, t = null, i || (i = e, e = null));
                                var n = i && i.easing,
                                    r = i && i.start,
                                    s = null != i && ("number" == typeof i ? i : i.duration),
                                    a = new at(this, t, e, s, n, r);
                                return s && this.on("frame", (function t(e) {
                                    a._handleFrame(1e3 * e.time), a.running || this.off("frame", t)
                                })), a
                            },
                            tweenTo: function(t, e) {
                                return this.tween(null, t, e)
                            },
                            tweenFrom: function(t, e) {
                                return this.tween(t, null, e)
                            }
                        }),
                        M = P.extend({
                            _class: "Group",
                            _selectBounds: !1,
                            _selectChildren: !0,
                            _serializeFields: {
                                children: []
                            },
                            initialize: function(t) {
                                this._children = [], this._namedChildren = {}, this._initialize(t) || this.addChildren(Array.isArray(t) ? t : arguments)
                            },
                            _changed: function t(e) {
                                t.base.call(this, e), 2050 & e && (this._clipItem = o)
                            },
                            _getClipItem: function() {
                                var t = this._clipItem;
                                if (t === o) {
                                    t = null;
                                    for (var e = this._children, i = 0, n = e.length; i < n; i++)
                                        if (e[i]._clipMask) {
                                            t = e[i];
                                            break
                                        }
                                    this._clipItem = t
                                }
                                return t
                            },
                            isClipped: function() {
                                return !!this._getClipItem()
                            },
                            setClipped: function(t) {
                                var e = this.getFirstChild();
                                e && e.setClipMask(t)
                            },
                            _getBounds: function t(e, i) {
                                var n = this._getClipItem();
                                return n ? n._getCachedBounds(n._matrix.prepended(e), c.set({}, i, {
                                    stroke: !1
                                })) : t.base.call(this, e, i)
                            },
                            _hitTestChildren: function t(e, i, n) {
                                var r = this._getClipItem();
                                return (!r || r.contains(e)) && t.base.call(this, e, i, n, r)
                            },
                            _draw: function(t, e) {
                                var i = e.clip,
                                    n = !i && this._getClipItem();
                                e = e.extend({
                                    clipItem: n,
                                    clip: !1
                                }), i ? (t.beginPath(), e.dontStart = e.dontFinish = !0) : n && n.draw(t, e.extend({
                                    clip: !0
                                }));
                                for (var r = this._children, s = 0, a = r.length; s < a; s++) {
                                    var o = r[s];
                                    o !== n && o.draw(t, e)
                                }
                            }
                        }),
                        T = M.extend({
                            _class: "Layer",
                            initialize: function() {
                                M.apply(this, arguments)
                            },
                            _getOwner: function() {
                                return this._parent || null != this._index && this._project
                            },
                            isInserted: function t() {
                                return this._parent ? t.base.call(this) : null != this._index
                            },
                            activate: function() {
                                this._project._activeLayer = this
                            },
                            _hitTestSelf: function() {}
                        }),
                        E = P.extend({
                            _class: "Shape",
                            _applyMatrix: !1,
                            _canApplyMatrix: !1,
                            _canScaleStroke: !0,
                            _serializeFields: {
                                type: null,
                                size: null,
                                radius: null
                            },
                            initialize: function(t, e) {
                                this._initialize(t, e)
                            },
                            _equals: function(t) {
                                return this._type === t._type && this._size.equals(t._size) && c.equals(this._radius, t._radius)
                            },
                            copyContent: function(t) {
                                this.setType(t._type), this.setSize(t._size), this.setRadius(t._radius)
                            },
                            getType: function() {
                                return this._type
                            },
                            setType: function(t) {
                                this._type = t
                            },
                            getShape: "#getType",
                            setShape: "#setType",
                            getSize: function() {
                                var t = this._size;
                                return new b(t.width, t.height, this, "setSize")
                            },
                            setSize: function() {
                                var t = x.read(arguments);
                                if (this._size) {
                                    if (!this._size.equals(t)) {
                                        var e = this._type,
                                            i = t.width,
                                            n = t.height;
                                        "rectangle" === e ? this._radius.set(x.min(this._radius, t.divide(2).abs())) : "circle" === e ? (i = n = (i + n) / 2, this._radius = i / 2) : "ellipse" === e && this._radius._set(i / 2, n / 2), this._size._set(i, n), this._changed(9)
                                    }
                                } else this._size = t.clone()
                            },
                            getRadius: function() {
                                var t = this._radius;
                                return "circle" === this._type ? t : new b(t.width, t.height, this, "setRadius")
                            },
                            setRadius: function(t) {
                                var e = this._type;
                                if ("circle" === e) {
                                    if (t === this._radius) return;
                                    var i = 2 * t;
                                    this._radius = t, this._size._set(i, i)
                                } else if (t = x.read(arguments), this._radius) {
                                    if (this._radius.equals(t)) return;
                                    if (this._radius.set(t), "rectangle" === e) {
                                        i = x.max(this._size, t.multiply(2));
                                        this._size.set(i)
                                    } else "ellipse" === e && this._size._set(2 * t.width, 2 * t.height)
                                } else this._radius = t.clone();
                                this._changed(9)
                            },
                            isEmpty: function() {
                                return !1
                            },
                            toPath: function(t) {
                                var e = new(F[c.capitalize(this._type)])({
                                    center: new _,
                                    size: this._size,
                                    radius: this._radius,
                                    insert: !1
                                });
                                return e.copyAttributes(this), dt.settings.applyMatrix && e.setApplyMatrix(!0), (t === o || t) && e.insertAbove(this), e
                            },
                            toShape: "#clone",
                            _asPathItem: function() {
                                return this.toPath(!1)
                            },
                            _draw: function(t, e, i, n) {
                                var r = this._style,
                                    s = r.hasFill(),
                                    a = r.hasStroke(),
                                    o = e.dontFinish || e.clip,
                                    h = !n;
                                if (s || a || o) {
                                    var l = this._type,
                                        c = this._radius,
                                        u = "circle" === l;
                                    if (e.dontStart || t.beginPath(), h && u) t.arc(0, 0, c, 0, 2 * Math.PI, !0);
                                    else {
                                        var d = u ? c : c.width,
                                            p = u ? c : c.height,
                                            f = this._size,
                                            g = f.width,
                                            m = f.height;
                                        if (h && "rectangle" === l && 0 === d && 0 === p) t.rect(-g / 2, -m / 2, g, m);
                                        else {
                                            var v = g / 2,
                                                _ = m / 2,
                                                y = .44771525016920644,
                                                x = d * y,
                                                b = p * y,
                                                w = [-v, -_ + p, -v, -_ + b, -v + x, -_, -v + d, -_, v - d, -_, v - x, -_, v, -_ + b, v, -_ + p, v, _ - p, v, _ - b, v - x, _, v - d, _, -v + d, _, -v + x, _, -v, _ - b, -v, _ - p];
                                            n && n.transform(w, w, 32), t.moveTo(w[0], w[1]), t.bezierCurveTo(w[2], w[3], w[4], w[5], w[6], w[7]), v !== d && t.lineTo(w[8], w[9]), t.bezierCurveTo(w[10], w[11], w[12], w[13], w[14], w[15]), _ !== p && t.lineTo(w[16], w[17]), t.bezierCurveTo(w[18], w[19], w[20], w[21], w[22], w[23]), v !== d && t.lineTo(w[24], w[25]), t.bezierCurveTo(w[26], w[27], w[28], w[29], w[30], w[31])
                                        }
                                    }
                                    t.closePath()
                                }
                                o || !s && !a || (this._setStyles(t, e, i), s && (t.fill(r.getFillRule()), t.shadowColor = "rgba(0,0,0,0)"), a && t.stroke())
                            },
                            _canComposite: function() {
                                return !(this.hasFill() && this.hasStroke())
                            },
                            _getBounds: function(t, e) {
                                var i = new w(this._size).setCenter(0, 0),
                                    n = this._style,
                                    r = e.stroke && n.hasStroke() && n.getStrokeWidth();
                                return t && (i = t._transformBounds(i)), r ? i.expand(F._getStrokePadding(r, this._getStrokeMatrix(t, e))) : i
                            }
                        }, new function() {
                            function t(t, e, i) {
                                var n = t._radius;
                                if (!n.isZero())
                                    for (var r = t._size.divide(2), s = 1; s <= 4; s++) {
                                        var a = new _(s > 1 && s < 4 ? -1 : 1, s > 2 ? -1 : 1),
                                            o = a.multiply(r),
                                            h = o.subtract(a.multiply(n));
                                        if (new w(i ? o.add(a.multiply(i)) : o, h).contains(e)) return {
                                            point: h,
                                            quadrant: s
                                        }
                                    }
                            }

                            function e(t, e, i, n) {
                                var r = t.divide(e);
                                return (!n || r.isInQuadrant(n)) && r.subtract(r.normalize()).multiply(e).divide(i).length <= 1
                            }
                            return {
                                _contains: function e(i) {
                                    if ("rectangle" === this._type) {
                                        var n = t(this, i);
                                        return n ? i.subtract(n.point).divide(this._radius).getLength() <= 1 : e.base.call(this, i)
                                    }
                                    return i.divide(this.size).getLength() <= .5
                                },
                                _hitTestSelf: function i(n, r, s, a) {
                                    var o = !1,
                                        h = this._style,
                                        l = r.stroke && h.hasStroke(),
                                        c = r.fill && h.hasFill();
                                    if (l || c) {
                                        var u = this._type,
                                            d = this._radius,
                                            p = l ? h.getStrokeWidth() / 2 : 0,
                                            f = r._tolerancePadding.add(F._getStrokePadding(p, !h.getStrokeScaling() && a));
                                        if ("rectangle" === u) {
                                            var g = f.multiply(2),
                                                m = t(this, n, g);
                                            if (m) o = e(n.subtract(m.point), d, f, m.quadrant);
                                            else {
                                                var v = new w(this._size).setCenter(0, 0),
                                                    _ = v.expand(g),
                                                    y = v.expand(g.negate());
                                                o = _._containsPoint(n) && !y._containsPoint(n)
                                            }
                                        } else o = e(n, d, f)
                                    }
                                    return o ? new D(l ? "stroke" : "fill", this) : i.base.apply(this, arguments)
                                }
                            }
                        }, {
                            statics: new function() {
                                function t(t, e, i, n, r) {
                                    var s = c.create(E.prototype);
                                    return s._type = t, s._size = i, s._radius = n, s._initialize(c.getNamed(r), e), s
                                }
                                return {
                                    Circle: function() {
                                        var e = arguments,
                                            i = _.readNamed(e, "center"),
                                            n = c.readNamed(e, "radius");
                                        return t("circle", i, new x(2 * n), n, e)
                                    },
                                    Rectangle: function() {
                                        var e = arguments,
                                            i = w.readNamed(e, "rectangle"),
                                            n = x.min(x.readNamed(e, "radius"), i.getSize(!0).divide(2));
                                        return t("rectangle", i.getCenter(!0), i.getSize(!0), n, e)
                                    },
                                    Ellipse: function() {
                                        var e = arguments,
                                            i = E._readEllipse(e),
                                            n = i.radius;
                                        return t("ellipse", i.center, n.multiply(2), n, e)
                                    },
                                    _readEllipse: function(t) {
                                        var e, i;
                                        if (c.hasNamed(t, "radius")) e = _.readNamed(t, "center"), i = x.readNamed(t, "radius");
                                        else {
                                            var n = w.readNamed(t, "rectangle");
                                            e = n.getCenter(!0), i = n.getSize(!0).divide(2)
                                        }
                                        return {
                                            center: e,
                                            radius: i
                                        }
                                    }
                                }
                            }
                        }),
                        I = P.extend({
                            _class: "Raster",
                            _applyMatrix: !1,
                            _canApplyMatrix: !1,
                            _boundsOptions: {
                                stroke: !1,
                                handle: !1
                            },
                            _serializeFields: {
                                crossOrigin: null,
                                source: null
                            },
                            _prioritize: ["crossOrigin"],
                            _smoothing: "low",
                            beans: !0,
                            initialize: function(t, e) {
                                if (!this._initialize(t, e !== o && _.read(arguments))) {
                                    var i, n = typeof t,
                                        r = "string" === n ? l.getElementById(t) : "object" === n ? t : null;
                                    if (r && r !== P.NO_INSERT)
                                        if (r.getContext || null != r.naturalHeight) i = r;
                                        else if (r) {
                                        var s = x.read(arguments);
                                        s.isZero() || (i = ht.getCanvas(s))
                                    }
                                    i ? this.setImage(i) : this.setSource(t)
                                }
                                this._size || (this._size = new x, this._loaded = !1)
                            },
                            _equals: function(t) {
                                return this.getSource() === t.getSource()
                            },
                            copyContent: function(t) {
                                var e = t._image,
                                    i = t._canvas;
                                if (e) this._setImage(e);
                                else if (i) {
                                    var n = ht.getCanvas(t._size);
                                    n.getContext("2d").drawImage(i, 0, 0), this._setImage(n)
                                }
                                this._crossOrigin = t._crossOrigin
                            },
                            getSize: function() {
                                var t = this._size;
                                return new b(t ? t.width : 0, t ? t.height : 0, this, "setSize")
                            },
                            setSize: function(t, e) {
                                var i = x.read(arguments);
                                if (i.equals(this._size)) e && this.clear();
                                else if (i.width > 0 && i.height > 0) {
                                    var n = !e && this.getElement();
                                    this._setImage(ht.getCanvas(i)), n && this.getContext(!0).drawImage(n, 0, 0, i.width, i.height)
                                } else this._canvas && ht.release(this._canvas), this._size = i.clone()
                            },
                            getWidth: function() {
                                return this._size ? this._size.width : 0
                            },
                            setWidth: function(t) {
                                this.setSize(t, this.getHeight())
                            },
                            getHeight: function() {
                                return this._size ? this._size.height : 0
                            },
                            setHeight: function(t) {
                                this.setSize(this.getWidth(), t)
                            },
                            getLoaded: function() {
                                return this._loaded
                            },
                            isEmpty: function() {
                                var t = this._size;
                                return !t || 0 === t.width && 0 === t.height
                            },
                            getResolution: function() {
                                var t = this._matrix,
                                    e = new _(0, 0).transform(t),
                                    i = new _(1, 0).transform(t).subtract(e),
                                    n = new _(0, 1).transform(t).subtract(e);
                                return new x(72 / i.getLength(), 72 / n.getLength())
                            },
                            getPpi: "#getResolution",
                            getImage: function() {
                                return this._image
                            },
                            setImage: function(t) {
                                var e = this;

                                function i(t) {
                                    var i = e.getView(),
                                        n = t && t.type || "load";
                                    i && e.responds(n) && (dt = i._scope, e.emit(n, new tt(t)))
                                }
                                this._setImage(t), this._loaded ? setTimeout(i, 0) : t && $.add(t, {
                                    load: function(n) {
                                        e._setImage(t), i(n)
                                    },
                                    error: i
                                })
                            },
                            _setImage: function(t) {
                                this._canvas && ht.release(this._canvas), t && t.getContext ? (this._image = null, this._canvas = t, this._loaded = !0) : (this._image = t, this._canvas = null, this._loaded = !!(t && t.src && t.complete)), this._size = new x(t ? t.naturalWidth || t.width : 0, t ? t.naturalHeight || t.height : 0), this._context = null, this._changed(1033)
                            },
                            getCanvas: function() {
                                if (!this._canvas) {
                                    var t = ht.getContext(this._size);
                                    try {
                                        this._image && t.drawImage(this._image, 0, 0), this._canvas = t.canvas
                                    } catch (e) {
                                        ht.release(t)
                                    }
                                }
                                return this._canvas
                            },
                            setCanvas: "#setImage",
                            getContext: function(t) {
                                return this._context || (this._context = this.getCanvas().getContext("2d")), t && (this._image = null, this._changed(1025)), this._context
                            },
                            setContext: function(t) {
                                this._context = t
                            },
                            getSource: function() {
                                var t = this._image;
                                return t && t.src || this.toDataURL()
                            },
                            setSource: function(t) {
                                var e = new a.Image,
                                    i = this._crossOrigin;
                                i && (e.crossOrigin = i), t && (e.src = t), this.setImage(e)
                            },
                            getCrossOrigin: function() {
                                var t = this._image;
                                return t && t.crossOrigin || this._crossOrigin || ""
                            },
                            setCrossOrigin: function(t) {
                                this._crossOrigin = t;
                                var e = this._image;
                                e && (e.crossOrigin = t)
                            },
                            getSmoothing: function() {
                                return this._smoothing
                            },
                            setSmoothing: function(t) {
                                this._smoothing = "string" == typeof t ? t : t ? "low" : "off", this._changed(257)
                            },
                            getElement: function() {
                                return this._canvas || this._loaded && this._image
                            }
                        }, {
                            beans: !1,
                            getSubCanvas: function() {
                                var t = w.read(arguments),
                                    e = ht.getContext(t.getSize());
                                return e.drawImage(this.getCanvas(), t.x, t.y, t.width, t.height, 0, 0, t.width, t.height), e.canvas
                            },
                            getSubRaster: function() {
                                var t = w.read(arguments),
                                    e = new I(P.NO_INSERT);
                                return e._setImage(this.getSubCanvas(t)), e.translate(t.getCenter().subtract(this.getSize().divide(2))), e._matrix.prepend(this._matrix), e.insertAbove(this), e
                            },
                            toDataURL: function() {
                                var t = this._image,
                                    e = t && t.src;
                                if (/^data:/.test(e)) return e;
                                var i = this.getCanvas();
                                return i ? i.toDataURL.apply(i, arguments) : null
                            },
                            drawImage: function(t) {
                                var e = _.read(arguments, 1);
                                this.getContext(!0).drawImage(t, e.x, e.y)
                            },
                            getAverageColor: function(t) {
                                var e, i;
                                if (t ? t instanceof V ? (i = t, e = t.getBounds()) : "object" == typeof t && ("width" in t ? e = new w(t) : "x" in t && (e = new w(t.x - .5, t.y - .5, 1, 1))) : e = this.getBounds(), !e) return null;
                                var n = Math.min(e.width, 32),
                                    r = Math.min(e.height, 32),
                                    s = I._sampleContext;
                                s ? s.clearRect(0, 0, 33, 33) : s = I._sampleContext = ht.getContext(new x(32)), s.save();
                                var a = (new C).scale(n / e.width, r / e.height).translate(-e.x, -e.y);
                                a.applyToContext(s), i && i.draw(s, new c({
                                    clip: !0,
                                    matrices: [a]
                                })), this._matrix.applyToContext(s);
                                var o = this.getElement(),
                                    h = this._size;
                                o && s.drawImage(o, -h.width / 2, -h.height / 2), s.restore();
                                for (var l = s.getImageData(.5, .5, Math.ceil(n), Math.ceil(r)).data, u = [0, 0, 0], d = 0, p = 0, f = l.length; p < f; p += 4) {
                                    var g = l[p + 3];
                                    d += g, g /= 255, u[0] += l[p] * g, u[1] += l[p + 1] * g, u[2] += l[p + 2] * g
                                }
                                for (p = 0; p < 3; p++) u[p] /= d;
                                return d ? Y.read(u) : null
                            },
                            getPixel: function() {
                                var t = _.read(arguments),
                                    e = this.getContext().getImageData(t.x, t.y, 1, 1).data;
                                return new Y("rgb", [e[0] / 255, e[1] / 255, e[2] / 255], e[3] / 255)
                            },
                            setPixel: function() {
                                var t = arguments,
                                    e = _.read(t),
                                    i = Y.read(t),
                                    n = i._convert("rgb"),
                                    r = i._alpha,
                                    s = this.getContext(!0),
                                    a = s.createImageData(1, 1),
                                    o = a.data;
                                o[0] = 255 * n[0], o[1] = 255 * n[1], o[2] = 255 * n[2], o[3] = null != r ? 255 * r : 255, s.putImageData(a, e.x, e.y)
                            },
                            clear: function() {
                                var t = this._size;
                                this.getContext(!0).clearRect(0, 0, t.width + 1, t.height + 1)
                            },
                            createImageData: function() {
                                var t = x.read(arguments);
                                return this.getContext().createImageData(t.width, t.height)
                            },
                            getImageData: function() {
                                var t = w.read(arguments);
                                return t.isEmpty() && (t = new w(this._size)), this.getContext().getImageData(t.x, t.y, t.width, t.height)
                            },
                            setImageData: function(t) {
                                var e = _.read(arguments, 1);
                                this.getContext(!0).putImageData(t, e.x, e.y)
                            },
                            _getBounds: function(t, e) {
                                var i = new w(this._size).setCenter(0, 0);
                                return t ? t._transformBounds(i) : i
                            },
                            _hitTestSelf: function(t) {
                                if (this._contains(t)) {
                                    var e = this;
                                    return new D("pixel", e, {
                                        offset: t.add(e._size.divide(2)).round(),
                                        color: {
                                            get: function() {
                                                return e.getPixel(this.offset)
                                            }
                                        }
                                    })
                                }
                            },
                            _draw: function(t, e, i) {
                                var n = this.getElement();
                                if (n && n.width > 0 && n.height > 0) {
                                    t.globalAlpha = m.clamp(this._opacity, 0, 1), this._setStyles(t, e, i);
                                    var r = this._smoothing,
                                        s = "off" === r;
                                    Q.setPrefixed(t, s ? "imageSmoothingEnabled" : "imageSmoothingQuality", !s && r), t.drawImage(n, -this._size.width / 2, -this._size.height / 2)
                                }
                            },
                            _canComposite: function() {
                                return !0
                            }
                        }),
                        O = P.extend({
                            _class: "SymbolItem",
                            _applyMatrix: !1,
                            _canApplyMatrix: !1,
                            _boundsOptions: {
                                stroke: !0
                            },
                            _serializeFields: {
                                symbol: null
                            },
                            initialize: function(t, e) {
                                this._initialize(t, e !== o && _.read(arguments, 1)) || this.setDefinition(t instanceof L ? t : new L(t))
                            },
                            _equals: function(t) {
                                return this._definition === t._definition
                            },
                            copyContent: function(t) {
                                this.setDefinition(t._definition)
                            },
                            getDefinition: function() {
                                return this._definition
                            },
                            setDefinition: function(t) {
                                this._definition = t, this._changed(9)
                            },
                            getSymbol: "#getDefinition",
                            setSymbol: "#setDefinition",
                            isEmpty: function() {
                                return this._definition._item.isEmpty()
                            },
                            _getBounds: function(t, e) {
                                var i = this._definition._item;
                                return i._getCachedBounds(i._matrix.prepended(t), e)
                            },
                            _hitTestSelf: function(t, e, i) {
                                var n = e.extend({
                                        all: !1
                                    }),
                                    r = this._definition._item._hitTest(t, n, i);
                                return r && (r.item = this), r
                            },
                            _draw: function(t, e) {
                                this._definition._item.draw(t, e)
                            }
                        }),
                        L = c.extend({
                            _class: "SymbolDefinition",
                            initialize: function(t, e) {
                                this._id = v.get(), this.project = dt.project, t && this.setItem(t, e)
                            },
                            _serialize: function(t, e) {
                                return e.add(this, (function() {
                                    return c.serialize([this._class, this._item], t, !1, e)
                                }))
                            },
                            _changed: function(t) {
                                8 & t && P._clearBoundsCache(this), 1 & t && this.project._changed(t)
                            },
                            getItem: function() {
                                return this._item
                            },
                            setItem: function(t, e) {
                                t._symbol && (t = t.clone()), this._item && (this._item._symbol = null), this._item = t, t.remove(), t.setSelected(!1), e || t.setPosition(new _), t._symbol = this, this._changed(9)
                            },
                            getDefinition: "#getItem",
                            setDefinition: "#setItem",
                            place: function(t) {
                                return new O(this, t)
                            },
                            clone: function() {
                                return new L(this._item.clone(!1))
                            },
                            equals: function(t) {
                                return t === this || t && this._item.equals(t._item) || !1
                            }
                        }),
                        D = c.extend({
                            _class: "HitResult",
                            initialize: function(t, e, i) {
                                this.type = t, this.item = e, i && this.inject(i)
                            },
                            statics: {
                                getOptions: function(t) {
                                    var e = t && c.read(t);
                                    return new c({
                                        type: null,
                                        tolerance: dt.settings.hitTolerance,
                                        fill: !e,
                                        stroke: !e,
                                        segments: !e,
                                        handles: !1,
                                        ends: !1,
                                        position: !1,
                                        center: !1,
                                        bounds: !1,
                                        guides: !1,
                                        selected: !1
                                    }, e)
                                }
                            }
                        }),
                        B = c.extend({
                            _class: "Segment",
                            beans: !0,
                            _selection: 0,
                            initialize: function(t, e, i, n, r, s) {
                                var a, h, l, c, u = arguments.length;
                                u > 0 && (null == t || "object" == typeof t ? 1 === u && t && "point" in t ? (a = t.point, h = t.handleIn, l = t.handleOut, c = t.selection) : (a = t, h = e, l = i, c = n) : (a = [t, e], h = i !== o ? [i, n] : null, l = r !== o ? [r, s] : null)), new R(a, this, "_point"), new R(h, this, "_handleIn"), new R(l, this, "_handleOut"), c && this.setSelection(c)
                            },
                            _serialize: function(t, e) {
                                var i = this._point,
                                    n = this._selection,
                                    r = n || this.hasHandles() ? [i, this._handleIn, this._handleOut] : i;
                                return n && r.push(n), c.serialize(r, t, !0, e)
                            },
                            _changed: function(t) {
                                var e = this._path;
                                if (e) {
                                    var i, n = e._curves,
                                        r = this._index;
                                    n && (t && t !== this._point && t !== this._handleIn || !(i = r > 0 ? n[r - 1] : e._closed ? n[n.length - 1] : null) || i._changed(), t && t !== this._point && t !== this._handleOut || !(i = n[r]) || i._changed()), e._changed(41)
                                }
                            },
                            getPoint: function() {
                                return this._point
                            },
                            setPoint: function() {
                                this._point.set(_.read(arguments))
                            },
                            getHandleIn: function() {
                                return this._handleIn
                            },
                            setHandleIn: function() {
                                this._handleIn.set(_.read(arguments))
                            },
                            getHandleOut: function() {
                                return this._handleOut
                            },
                            setHandleOut: function() {
                                this._handleOut.set(_.read(arguments))
                            },
                            hasHandles: function() {
                                return !this._handleIn.isZero() || !this._handleOut.isZero()
                            },
                            isSmooth: function() {
                                var t = this._handleIn,
                                    e = this._handleOut;
                                return !t.isZero() && !e.isZero() && t.isCollinear(e)
                            },
                            clearHandles: function() {
                                this._handleIn._set(0, 0), this._handleOut._set(0, 0)
                            },
                            getSelection: function() {
                                return this._selection
                            },
                            setSelection: function(t) {
                                var e = this._selection,
                                    i = this._path;
                                this._selection = t = t || 0, i && t !== e && (i._updateSelection(this, e, t), i._changed(257))
                            },
                            _changeSelection: function(t, e) {
                                var i = this._selection;
                                this.setSelection(e ? i | t : i & ~t)
                            },
                            isSelected: function() {
                                return !!(7 & this._selection)
                            },
                            setSelected: function(t) {
                                this._changeSelection(7, t)
                            },
                            getIndex: function() {
                                return this._index !== o ? this._index : null
                            },
                            getPath: function() {
                                return this._path || null
                            },
                            getCurve: function() {
                                var t = this._path,
                                    e = this._index;
                                return t ? (e > 0 && !t._closed && e === t._segments.length - 1 && e--, t.getCurves()[e] || null) : null
                            },
                            getLocation: function() {
                                var t = this.getCurve();
                                return t ? new N(t, this === t._segment1 ? 0 : 1) : null
                            },
                            getNext: function() {
                                var t = this._path && this._path._segments;
                                return t && (t[this._index + 1] || this._path._closed && t[0]) || null
                            },
                            smooth: function(t, e, i) {
                                var n = t || {},
                                    r = n.type,
                                    s = n.factor,
                                    a = this.getPrevious(),
                                    h = this.getNext(),
                                    l = (a || this)._point,
                                    c = this._point,
                                    u = (h || this)._point,
                                    d = l.getDistance(c),
                                    p = c.getDistance(u);
                                if (r && "catmull-rom" !== r) {
                                    if ("geometric" !== r) throw new Error("Smoothing method '" + r + "' not supported.");
                                    if (a && h) {
                                        var f = l.subtract(u),
                                            g = s === o ? .4 : s,
                                            m = g * d / (d + p);
                                        e || this.setHandleIn(f.multiply(m)), i || this.setHandleOut(f.multiply(m - g))
                                    }
                                } else {
                                    var v = s === o ? .5 : s,
                                        y = Math.pow(d, v),
                                        x = y * y,
                                        b = Math.pow(p, v),
                                        w = b * b;
                                    if (!e && a) {
                                        var S = 2 * w + 3 * b * y + x,
                                            C = 3 * b * (b + y);
                                        this.setHandleIn(0 !== C ? new _((w * l._x + S * c._x - x * u._x) / C - c._x, (w * l._y + S * c._y - x * u._y) / C - c._y) : new _)
                                    }
                                    if (!i && h) {
                                        S = 2 * x + 3 * y * b + w, C = 3 * y * (y + b);
                                        this.setHandleOut(0 !== C ? new _((x * u._x + S * c._x - w * l._x) / C - c._x, (x * u._y + S * c._y - w * l._y) / C - c._y) : new _)
                                    }
                                }
                            },
                            getPrevious: function() {
                                var t = this._path && this._path._segments;
                                return t && (t[this._index - 1] || this._path._closed && t[t.length - 1]) || null
                            },
                            isFirst: function() {
                                return !this._index
                            },
                            isLast: function() {
                                var t = this._path;
                                return t && this._index === t._segments.length - 1 || !1
                            },
                            reverse: function() {
                                var t = this._handleIn,
                                    e = this._handleOut,
                                    i = t.clone();
                                t.set(e), e.set(i)
                            },
                            reversed: function() {
                                return new B(this._point, this._handleOut, this._handleIn)
                            },
                            remove: function() {
                                return !!this._path && !!this._path.removeSegment(this._index)
                            },
                            clone: function() {
                                return new B(this._point, this._handleIn, this._handleOut)
                            },
                            equals: function(t) {
                                return t === this || t && this._class === t._class && this._point.equals(t._point) && this._handleIn.equals(t._handleIn) && this._handleOut.equals(t._handleOut) || !1
                            },
                            toString: function() {
                                var t = ["point: " + this._point];
                                return this._handleIn.isZero() || t.push("handleIn: " + this._handleIn), this._handleOut.isZero() || t.push("handleOut: " + this._handleOut), "{ " + t.join(", ") + " }"
                            },
                            transform: function(t) {
                                this._transformCoordinates(t, new Array(6), !0), this._changed()
                            },
                            interpolate: function(t, e, i) {
                                var n = 1 - i,
                                    r = i,
                                    s = t._point,
                                    a = e._point,
                                    o = t._handleIn,
                                    h = e._handleIn,
                                    l = e._handleOut,
                                    c = t._handleOut;
                                this._point._set(n * s._x + r * a._x, n * s._y + r * a._y, !0), this._handleIn._set(n * o._x + r * h._x, n * o._y + r * h._y, !0), this._handleOut._set(n * c._x + r * l._x, n * c._y + r * l._y, !0), this._changed()
                            },
                            _transformCoordinates: function(t, e, i) {
                                var n = this._point,
                                    r = i && this._handleIn.isZero() ? null : this._handleIn,
                                    s = i && this._handleOut.isZero() ? null : this._handleOut,
                                    a = n._x,
                                    o = n._y,
                                    h = 2;
                                return e[0] = a, e[1] = o, r && (e[h++] = r._x + a, e[h++] = r._y + o), s && (e[h++] = s._x + a, e[h++] = s._y + o), t && (t._transformCoordinates(e, e, h / 2), a = e[0], o = e[1], i ? (n._x = a, n._y = o, h = 2, r && (r._x = e[h++] - a, r._y = e[h++] - o), s && (s._x = e[h++] - a, s._y = e[h++] - o)) : (r || (e[h++] = a, e[h++] = o), s || (e[h++] = a, e[h++] = o))), e
                            }
                        }),
                        R = _.extend({
                            initialize: function(t, e, i) {
                                var n, r, s;
                                if (t)
                                    if ((n = t[0]) !== o) r = t[1];
                                    else {
                                        var a = t;
                                        (n = a.x) === o && (n = (a = _.read(arguments)).x), r = a.y, s = a.selected
                                    }
                                else n = r = 0;
                                this._x = n, this._y = r, this._owner = e, e[i] = this, s && this.setSelected(!0)
                            },
                            _set: function(t, e) {
                                return this._x = t, this._y = e, this._owner._changed(this), this
                            },
                            getX: function() {
                                return this._x
                            },
                            setX: function(t) {
                                this._x = t, this._owner._changed(this)
                            },
                            getY: function() {
                                return this._y
                            },
                            setY: function(t) {
                                this._y = t, this._owner._changed(this)
                            },
                            isZero: function() {
                                var t = m.isZero;
                                return t(this._x) && t(this._y)
                            },
                            isSelected: function() {
                                return !!(this._owner._selection & this._getSelection())
                            },
                            setSelected: function(t) {
                                this._owner._changeSelection(this._getSelection(), t)
                            },
                            _getSelection: function() {
                                var t = this._owner;
                                return this === t._point ? 1 : this === t._handleIn ? 2 : this === t._handleOut ? 4 : 0
                            }
                        }),
                        z = c.extend({
                            _class: "Curve",
                            beans: !0,
                            initialize: function(t, e, i, n, r, s, a, o) {
                                var h, l, c, u, d, p, f = arguments.length;
                                3 === f ? (this._path = t, h = e, l = i) : f ? 1 === f ? "segment1" in t ? (h = new B(t.segment1), l = new B(t.segment2)) : "point1" in t ? (c = t.point1, d = t.handle1, p = t.handle2, u = t.point2) : Array.isArray(t) && (c = [t[0], t[1]], u = [t[6], t[7]], d = [t[2] - t[0], t[3] - t[1]], p = [t[4] - t[6], t[5] - t[7]]) : 2 === f ? (h = new B(t), l = new B(e)) : 4 === f ? (c = t, d = e, p = i, u = n) : 8 === f && (c = [t, e], u = [a, o], d = [i - t, n - e], p = [r - a, s - o]) : (h = new B, l = new B), this._segment1 = h || new B(c, null, d), this._segment2 = l || new B(u, p, null)
                            },
                            _serialize: function(t, e) {
                                return c.serialize(this.hasHandles() ? [this.getPoint1(), this.getHandle1(), this.getHandle2(), this.getPoint2()] : [this.getPoint1(), this.getPoint2()], t, !0, e)
                            },
                            _changed: function() {
                                this._length = this._bounds = o
                            },
                            clone: function() {
                                return new z(this._segment1, this._segment2)
                            },
                            toString: function() {
                                var t = ["point1: " + this._segment1._point];
                                return this._segment1._handleOut.isZero() || t.push("handle1: " + this._segment1._handleOut), this._segment2._handleIn.isZero() || t.push("handle2: " + this._segment2._handleIn), t.push("point2: " + this._segment2._point), "{ " + t.join(", ") + " }"
                            },
                            classify: function() {
                                return z.classify(this.getValues())
                            },
                            remove: function() {
                                var t = !1;
                                if (this._path) {
                                    var e = this._segment2,
                                        i = e._handleOut;
                                    (t = e.remove()) && this._segment1._handleOut.set(i)
                                }
                                return t
                            },
                            getPoint1: function() {
                                return this._segment1._point
                            },
                            setPoint1: function() {
                                this._segment1._point.set(_.read(arguments))
                            },
                            getPoint2: function() {
                                return this._segment2._point
                            },
                            setPoint2: function() {
                                this._segment2._point.set(_.read(arguments))
                            },
                            getHandle1: function() {
                                return this._segment1._handleOut
                            },
                            setHandle1: function() {
                                this._segment1._handleOut.set(_.read(arguments))
                            },
                            getHandle2: function() {
                                return this._segment2._handleIn
                            },
                            setHandle2: function() {
                                this._segment2._handleIn.set(_.read(arguments))
                            },
                            getSegment1: function() {
                                return this._segment1
                            },
                            getSegment2: function() {
                                return this._segment2
                            },
                            getPath: function() {
                                return this._path
                            },
                            getIndex: function() {
                                return this._segment1._index
                            },
                            getNext: function() {
                                var t = this._path && this._path._curves;
                                return t && (t[this._segment1._index + 1] || this._path._closed && t[0]) || null
                            },
                            getPrevious: function() {
                                var t = this._path && this._path._curves;
                                return t && (t[this._segment1._index - 1] || this._path._closed && t[t.length - 1]) || null
                            },
                            isFirst: function() {
                                return !this._segment1._index
                            },
                            isLast: function() {
                                var t = this._path;
                                return t && this._segment1._index === t._curves.length - 1 || !1
                            },
                            isSelected: function() {
                                return this.getPoint1().isSelected() && this.getHandle1().isSelected() && this.getHandle2().isSelected() && this.getPoint2().isSelected()
                            },
                            setSelected: function(t) {
                                this.getPoint1().setSelected(t), this.getHandle1().setSelected(t), this.getHandle2().setSelected(t), this.getPoint2().setSelected(t)
                            },
                            getValues: function(t) {
                                return z.getValues(this._segment1, this._segment2, t)
                            },
                            getPoints: function() {
                                for (var t = this.getValues(), e = [], i = 0; i < 8; i += 2) e.push(new _(t[i], t[i + 1]));
                                return e
                            }
                        }, {
                            getLength: function() {
                                return null == this._length && (this._length = z.getLength(this.getValues(), 0, 1)), this._length
                            },
                            getArea: function() {
                                return z.getArea(this.getValues())
                            },
                            getLine: function() {
                                return new k(this._segment1._point, this._segment2._point)
                            },
                            getPart: function(t, e) {
                                return new z(z.getPart(this.getValues(), t, e))
                            },
                            getPartLength: function(t, e) {
                                return z.getLength(this.getValues(), t, e)
                            },
                            divideAt: function(t) {
                                return this.divideAtTime(t && t.curve === this ? t.time : this.getTimeAt(t))
                            },
                            divideAtTime: function(t, e) {
                                var i = null;
                                if (t >= 1e-8 && t <= .99999999) {
                                    var n = z.subdivide(this.getValues(), t),
                                        r = n[0],
                                        s = n[1],
                                        a = e || this.hasHandles(),
                                        o = this._segment1,
                                        h = this._segment2,
                                        l = this._path;
                                    a && (o._handleOut._set(r[2] - r[0], r[3] - r[1]), h._handleIn._set(s[4] - s[6], s[5] - s[7]));
                                    var c = r[6],
                                        u = r[7],
                                        d = new B(new _(c, u), a && new _(r[4] - c, r[5] - u), a && new _(s[2] - c, s[3] - u));
                                    l ? (l.insert(o._index + 1, d), i = this.getNext()) : (this._segment2 = d, this._changed(), i = new z(d, h))
                                }
                                return i
                            },
                            splitAt: function(t) {
                                var e = this._path;
                                return e ? e.splitAt(t) : null
                            },
                            splitAtTime: function(t) {
                                return this.splitAt(this.getLocationAtTime(t))
                            },
                            divide: function(t, e) {
                                return this.divideAtTime(t === o ? .5 : e ? t : this.getTimeAt(t))
                            },
                            split: function(t, e) {
                                return this.splitAtTime(t === o ? .5 : e ? t : this.getTimeAt(t))
                            },
                            reversed: function() {
                                return new z(this._segment2.reversed(), this._segment1.reversed())
                            },
                            clearHandles: function() {
                                this._segment1._handleOut._set(0, 0), this._segment2._handleIn._set(0, 0)
                            },
                            statics: {
                                getValues: function(t, e, i, n) {
                                    var r = t._point,
                                        s = t._handleOut,
                                        a = e._handleIn,
                                        o = e._point,
                                        h = r.x,
                                        l = r.y,
                                        c = o.x,
                                        u = o.y,
                                        d = n ? [h, l, h, l, c, u, c, u] : [h, l, h + s._x, l + s._y, c + a._x, u + a._y, c, u];
                                    return i && i._transformCoordinates(d, d, 4), d
                                },
                                subdivide: function(t, e) {
                                    var i = t[0],
                                        n = t[1],
                                        r = t[2],
                                        s = t[3],
                                        a = t[4],
                                        h = t[5],
                                        l = t[6],
                                        c = t[7];
                                    e === o && (e = .5);
                                    var u = 1 - e,
                                        d = u * i + e * r,
                                        p = u * n + e * s,
                                        f = u * r + e * a,
                                        g = u * s + e * h,
                                        m = u * a + e * l,
                                        v = u * h + e * c,
                                        _ = u * d + e * f,
                                        y = u * p + e * g,
                                        x = u * f + e * m,
                                        b = u * g + e * v,
                                        w = u * _ + e * x,
                                        S = u * y + e * b;
                                    return [
                                        [i, n, d, p, _, y, w, S],
                                        [w, S, x, b, m, v, l, c]
                                    ]
                                },
                                getMonoCurves: function(t, e) {
                                    var i = [],
                                        n = e ? 0 : 1,
                                        r = t[n + 0],
                                        s = t[n + 2],
                                        a = t[n + 4],
                                        o = t[n + 6];
                                    if (r >= s == s >= a && s >= a == a >= o || z.isStraight(t)) i.push(t);
                                    else {
                                        var h = 3 * (s - a) - r + o,
                                            l = 2 * (r + a) - 4 * s,
                                            c = s - r,
                                            u = [],
                                            d = m.solveQuadratic(h, l, c, u, 1e-8, .99999999);
                                        if (d) {
                                            u.sort();
                                            var p = u[0],
                                                f = z.subdivide(t, p);
                                            i.push(f[0]), d > 1 && (p = (u[1] - p) / (1 - p), f = z.subdivide(f[1], p), i.push(f[0])), i.push(f[1])
                                        } else i.push(t)
                                    }
                                    return i
                                },
                                solveCubic: function(t, e, i, n, r, s) {
                                    var a = t[e],
                                        o = t[e + 2],
                                        h = t[e + 4],
                                        l = t[e + 6],
                                        c = 0;
                                    if (!(a < i && l < i && o < i && h < i || a > i && l > i && o > i && h > i)) {
                                        var u = 3 * (o - a),
                                            d = 3 * (h - o) - u,
                                            p = l - a - u - d;
                                        c = m.solveCubic(p, d, u, a - i, n, r, s)
                                    }
                                    return c
                                },
                                getTimeOf: function(t, e) {
                                    var i = new _(t[0], t[1]),
                                        n = new _(t[6], t[7]),
                                        r = 1e-7;
                                    if (null === (e.isClose(i, 1e-12) ? 0 : e.isClose(n, 1e-12) ? 1 : null))
                                        for (var s = [e.x, e.y], a = [], o = 0; o < 2; o++)
                                            for (var h = z.solveCubic(t, o, s[o], a, 0, 1), l = 0; l < h; l++) {
                                                var c = a[l];
                                                if (e.isClose(z.getPoint(t, c), r)) return c
                                            }
                                    return e.isClose(i, r) ? 0 : e.isClose(n, r) ? 1 : null
                                },
                                getNearestTime: function(t, e) {
                                    if (z.isStraight(t)) {
                                        var i = t[0],
                                            n = t[1],
                                            r = t[6] - i,
                                            s = t[7] - n,
                                            a = r * r + s * s;
                                        if (0 === a) return 0;
                                        var o = ((e.x - i) * r + (e.y - n) * s) / a;
                                        return o < 1e-12 ? 0 : o > .999999999999 ? 1 : z.getTimeOf(t, new _(i + o * r, n + o * s))
                                    }
                                    var h = 1 / 0,
                                        l = 0;

                                    function c(i) {
                                        if (i >= 0 && i <= 1) {
                                            var n = e.getDistance(z.getPoint(t, i), !0);
                                            if (n < h) return h = n, l = i, !0
                                        }
                                    }
                                    for (var u = 0; u <= 100; u++) c(u / 100);
                                    for (var d = .005; d > 1e-8;) c(l - d) || c(l + d) || (d /= 2);
                                    return l
                                },
                                getPart: function(t, e, i) {
                                    var n = e > i;
                                    if (n) {
                                        var r = e;
                                        e = i, i = r
                                    }
                                    return e > 0 && (t = z.subdivide(t, e)[1]), i < 1 && (t = z.subdivide(t, (i - e) / (1 - e))[0]), n ? [t[6], t[7], t[4], t[5], t[2], t[3], t[0], t[1]] : t
                                },
                                isFlatEnough: function(t, e) {
                                    var i = t[0],
                                        n = t[1],
                                        r = t[2],
                                        s = t[3],
                                        a = t[4],
                                        o = t[5],
                                        h = t[6],
                                        l = t[7],
                                        c = 3 * r - 2 * i - h,
                                        u = 3 * s - 2 * n - l,
                                        d = 3 * a - 2 * h - i,
                                        p = 3 * o - 2 * l - n;
                                    return Math.max(c * c, d * d) + Math.max(u * u, p * p) <= 16 * e * e
                                },
                                getArea: function(t) {
                                    var e = t[0],
                                        i = t[1],
                                        n = t[2],
                                        r = t[3],
                                        s = t[4],
                                        a = t[5],
                                        o = t[6],
                                        h = t[7];
                                    return 3 * ((h - i) * (n + s) - (o - e) * (r + a) + r * (e - s) - n * (i - a) + h * (s + e / 3) - o * (a + i / 3)) / 20
                                },
                                getBounds: function(t) {
                                    for (var e = t.slice(0, 2), i = e.slice(), n = [0, 0], r = 0; r < 2; r++) z._addBounds(t[r], t[r + 2], t[r + 4], t[r + 6], r, 0, e, i, n);
                                    return new w(e[0], e[1], i[0] - e[0], i[1] - e[1])
                                },
                                _addBounds: function(t, e, i, n, r, s, a, o, h) {
                                    function l(t, e) {
                                        var i = t - e,
                                            n = t + e;
                                        i < a[r] && (a[r] = i), n > o[r] && (o[r] = n)
                                    }
                                    s /= 2;
                                    var c = a[r] + s,
                                        u = o[r] - s;
                                    if (t < c || e < c || i < c || n < c || t > u || e > u || i > u || n > u)
                                        if (e < t != e < n && i < t != i < n) l(t, 0), l(n, 0);
                                        else {
                                            var d = 3 * (e - i) - t + n,
                                                p = 2 * (t + i) - 4 * e,
                                                f = e - t,
                                                g = m.solveQuadratic(d, p, f, h);
                                            l(n, 0);
                                            for (var v = 0; v < g; v++) {
                                                var _ = h[v],
                                                    y = 1 - _;
                                                1e-8 <= _ && _ <= .99999999 && l(y * y * y * t + 3 * y * y * _ * e + 3 * y * _ * _ * i + _ * _ * _ * n, s)
                                            }
                                        }
                                }
                            }
                        }, c.each(["getBounds", "getStrokeBounds", "getHandleBounds"], (function(t) {
                            this[t] = function() {
                                this._bounds || (this._bounds = {});
                                var e = this._bounds[t];
                                return e || (e = this._bounds[t] = F[t]([this._segment1, this._segment2], !1, this._path)), e.clone()
                            }
                        }), {}), c.each({
                            isStraight: function(t, e, i, n) {
                                if (e.isZero() && i.isZero()) return !0;
                                var r = n.subtract(t);
                                if (r.isZero()) return !1;
                                if (r.isCollinear(e) && r.isCollinear(i)) {
                                    var s = new k(t, n);
                                    if (s.getDistance(t.add(e)) < 1e-7 && s.getDistance(n.add(i)) < 1e-7) {
                                        var a = r.dot(r),
                                            o = r.dot(e) / a,
                                            h = r.dot(i) / a;
                                        return o >= 0 && o <= 1 && h <= 0 && h >= -1
                                    }
                                }
                                return !1
                            },
                            isLinear: function(t, e, i, n) {
                                var r = n.subtract(t).divide(3);
                                return e.equals(r) && i.negate().equals(r)
                            }
                        }, (function(t, e) {
                            this[e] = function(e) {
                                var i = this._segment1,
                                    n = this._segment2;
                                return t(i._point, i._handleOut, n._handleIn, n._point, e)
                            }, this.statics[e] = function(e, i) {
                                var n = e[0],
                                    r = e[1],
                                    s = e[6],
                                    a = e[7];
                                return t(new _(n, r), new _(e[2] - n, e[3] - r), new _(e[4] - s, e[5] - a), new _(s, a), i)
                            }
                        }), {
                            statics: {},
                            hasHandles: function() {
                                return !this._segment1._handleOut.isZero() || !this._segment2._handleIn.isZero()
                            },
                            hasLength: function(t) {
                                return (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles()) && this.getLength() > (t || 0)
                            },
                            isCollinear: function(t) {
                                return t && this.isStraight() && t.isStraight() && this.getLine().isCollinear(t.getLine())
                            },
                            isHorizontal: function() {
                                return this.isStraight() && Math.abs(this.getTangentAtTime(.5).y) < 1e-8
                            },
                            isVertical: function() {
                                return this.isStraight() && Math.abs(this.getTangentAtTime(.5).x) < 1e-8
                            }
                        }), {
                            beans: !1,
                            getLocationAt: function(t, e) {
                                return this.getLocationAtTime(e ? t : this.getTimeAt(t))
                            },
                            getLocationAtTime: function(t) {
                                return null != t && t >= 0 && t <= 1 ? new N(this, t) : null
                            },
                            getTimeAt: function(t, e) {
                                return z.getTimeAt(this.getValues(), t, e)
                            },
                            getParameterAt: "#getTimeAt",
                            getTimesWithTangent: function() {
                                var t = _.read(arguments);
                                return t.isZero() ? [] : z.getTimesWithTangent(this.getValues(), t)
                            },
                            getOffsetAtTime: function(t) {
                                return this.getPartLength(0, t)
                            },
                            getLocationOf: function() {
                                return this.getLocationAtTime(this.getTimeOf(_.read(arguments)))
                            },
                            getOffsetOf: function() {
                                var t = this.getLocationOf.apply(this, arguments);
                                return t ? t.getOffset() : null
                            },
                            getTimeOf: function() {
                                return z.getTimeOf(this.getValues(), _.read(arguments))
                            },
                            getParameterOf: "#getTimeOf",
                            getNearestLocation: function() {
                                var t = _.read(arguments),
                                    e = this.getValues(),
                                    i = z.getNearestTime(e, t),
                                    n = z.getPoint(e, i);
                                return new N(this, i, n, null, t.getDistance(n))
                            },
                            getNearestPoint: function() {
                                var t = this.getNearestLocation.apply(this, arguments);
                                return t ? t.getPoint() : t
                            }
                        }, new function() {
                            var t = ["getPoint", "getTangent", "getNormal", "getWeightedTangent", "getWeightedNormal", "getCurvature"];
                            return c.each(t, (function(t) {
                                this[t + "At"] = function(e, i) {
                                    var n = this.getValues();
                                    return z[t](n, i ? e : z.getTimeAt(n, e))
                                }, this[t + "AtTime"] = function(e) {
                                    return z[t](this.getValues(), e)
                                }
                            }), {
                                statics: {
                                    _evaluateMethods: t
                                }
                            })
                        }, new function() {
                            function t(t) {
                                var e = t[0],
                                    i = t[1],
                                    n = t[2],
                                    r = t[3],
                                    s = t[4],
                                    a = t[5],
                                    o = t[6],
                                    h = t[7],
                                    l = 9 * (n - s) + 3 * (o - e),
                                    c = 6 * (e + s) - 12 * n,
                                    u = 3 * (n - e),
                                    d = 9 * (r - a) + 3 * (h - i),
                                    p = 6 * (i + a) - 12 * r,
                                    f = 3 * (r - i);
                                return function(t) {
                                    var e = (l * t + c) * t + u,
                                        i = (d * t + p) * t + f;
                                    return Math.sqrt(e * e + i * i)
                                }
                            }

                            function e(t, e) {
                                return Math.max(2, Math.min(16, Math.ceil(32 * Math.abs(e - t))))
                            }

                            function i(t, e, i, n) {
                                if (null == e || e < 0 || e > 1) return null;
                                var r = t[0],
                                    s = t[1],
                                    a = t[2],
                                    o = t[3],
                                    h = t[4],
                                    l = t[5],
                                    c = t[6],
                                    u = t[7],
                                    d = m.isZero;
                                d(a - r) && d(o - s) && (a = r, o = s), d(h - c) && d(l - u) && (h = c, l = u);
                                var p, f, g = 3 * (a - r),
                                    v = 3 * (h - a) - g,
                                    y = c - r - g - v,
                                    x = 3 * (o - s),
                                    b = 3 * (l - o) - x,
                                    w = u - s - x - b;
                                if (0 === i) p = 0 === e ? r : 1 === e ? c : ((y * e + v) * e + g) * e + r, f = 0 === e ? s : 1 === e ? u : ((w * e + b) * e + x) * e + s;
                                else {
                                    var S = 1e-8,
                                        C = 1 - S;
                                    if (e < S ? (p = g, f = x) : e > C ? (p = 3 * (c - h), f = 3 * (u - l)) : (p = (3 * y * e + 2 * v) * e + g, f = (3 * w * e + 2 * b) * e + x), n) {
                                        0 === p && 0 === f && (e < S || e > C) && (p = h - a, f = l - o);
                                        var k = Math.sqrt(p * p + f * f);
                                        k && (p /= k, f /= k)
                                    }
                                    if (3 === i) {
                                        h = 6 * y * e + 2 * v, l = 6 * w * e + 2 * b;
                                        var A = Math.pow(p * p + f * f, 1.5);
                                        p = 0 !== A ? (p * l - f * h) / A : 0, f = 0
                                    }
                                }
                                return 2 === i ? new _(f, -p) : new _(p, f)
                            }
                            return {
                                statics: {
                                    classify: function(t) {
                                        var e = t[0],
                                            i = t[1],
                                            n = t[2],
                                            r = t[3],
                                            s = t[4],
                                            a = t[5],
                                            h = t[6],
                                            l = t[7],
                                            c = n * (i - l) + r * (h - e) + e * l - i * h,
                                            u = 3 * (s * (r - i) + a * (e - n) + n * i - r * e),
                                            d = u - c,
                                            p = d - c + (e * (l - a) + i * (s - h) + h * a - l * s),
                                            f = Math.sqrt(p * p + d * d + u * u),
                                            g = 0 !== f ? 1 / f : 0,
                                            v = m.isZero,
                                            _ = "serpentine";

                                        function y(t, e, i) {
                                            var n = e !== o,
                                                r = n && e > 0 && e < 1,
                                                s = n && i > 0 && i < 1;
                                            return !n || (r || s) && ("loop" !== t || r && s) || (t = "arch", r = s = !1), {
                                                type: t,
                                                roots: r || s ? r && s ? e < i ? [e, i] : [i, e] : [r ? e : i] : null
                                            }
                                        }
                                        if (d *= g, u *= g, v(p *= g)) return v(d) ? y(v(u) ? "line" : "quadratic") : y(_, u / (3 * d));
                                        var x = 3 * d * d - 4 * p * u;
                                        if (v(x)) return y("cusp", d / (2 * p));
                                        var b = x > 0 ? Math.sqrt(x / 3) : Math.sqrt(-x),
                                            w = 2 * p;
                                        return y(x > 0 ? _ : "loop", (d + b) / w, (d - b) / w)
                                    },
                                    getLength: function(i, n, r, s) {
                                        if (n === o && (n = 0), r === o && (r = 1), z.isStraight(i)) {
                                            var a = i;
                                            r < 1 && (a = z.subdivide(a, r)[0], n /= r), n > 0 && (a = z.subdivide(a, n)[1]);
                                            var h = a[6] - a[0],
                                                l = a[7] - a[1];
                                            return Math.sqrt(h * h + l * l)
                                        }
                                        return m.integrate(s || t(i), n, r, e(n, r))
                                    },
                                    getTimeAt: function(i, n, r) {
                                        if (r === o && (r = n < 0 ? 1 : 0), 0 === n) return r;
                                        var s = Math.abs,
                                            a = n > 0,
                                            h = a ? r : 0,
                                            l = a ? 1 : r,
                                            c = t(i),
                                            u = z.getLength(i, h, l, c),
                                            d = s(n) - u;
                                        if (s(d) < 1e-12) return a ? l : h;
                                        if (d > 1e-12) return null;
                                        var p = n / u,
                                            f = 0;
                                        return m.findRoot((function(t) {
                                            return f += m.integrate(c, r, t, e(r, t)), r = t, f - n
                                        }), c, r + p, h, l, 32, 1e-12)
                                    },
                                    getPoint: function(t, e) {
                                        return i(t, e, 0, !1)
                                    },
                                    getTangent: function(t, e) {
                                        return i(t, e, 1, !0)
                                    },
                                    getWeightedTangent: function(t, e) {
                                        return i(t, e, 1, !1)
                                    },
                                    getNormal: function(t, e) {
                                        return i(t, e, 2, !0)
                                    },
                                    getWeightedNormal: function(t, e) {
                                        return i(t, e, 2, !1)
                                    },
                                    getCurvature: function(t, e) {
                                        return i(t, e, 3, !1).x
                                    },
                                    getPeaks: function(t) {
                                        var e = t[0],
                                            i = t[1],
                                            n = t[2],
                                            r = t[3],
                                            s = t[4],
                                            a = t[5],
                                            o = 3 * n - e - 3 * s + t[6],
                                            h = 3 * e - 6 * n + 3 * s,
                                            l = -3 * e + 3 * n,
                                            c = 3 * r - i - 3 * a + t[7],
                                            u = 3 * i - 6 * r + 3 * a,
                                            d = -3 * i + 3 * r,
                                            p = [];
                                        return m.solveCubic(9 * (o * o + c * c), 9 * (o * h + u * c), 2 * (h * h + u * u) + 3 * (l * o + d * c), l * h + u * d, p, 1e-8, .99999999), p.sort()
                                    }
                                }
                            }
                        }, new function() {
                            function t(t, e, i, n, r, s, a) {
                                var o = !a && i.getPrevious() === r,
                                    h = !a && i !== r && i.getNext() === r,
                                    l = 1e-8,
                                    c = 1 - l;
                                if (null !== n && n >= (o ? l : 0) && n <= (h ? c : 1) && null !== s && s >= (h ? l : 0) && s <= (o ? c : 1)) {
                                    var u = new N(i, n, null, a),
                                        d = new N(r, s, null, a);
                                    u._intersection = d, d._intersection = u, e && !e(u) || N.insert(t, u, !0)
                                }
                            }

                            function e(n, r, s, a, o, h, l, c, u, d, p, f, g) {
                                if (++u >= 4096 || ++c >= 40) return u;
                                var m, v, _ = r[0],
                                    y = r[1],
                                    x = r[6],
                                    b = r[7],
                                    w = k.getSignedDistance,
                                    S = w(_, y, x, b, r[2], r[3]),
                                    C = w(_, y, x, b, r[4], r[5]),
                                    A = S * C > 0 ? 3 / 4 : 4 / 9,
                                    P = A * Math.min(0, S, C),
                                    M = A * Math.max(0, S, C),
                                    T = w(_, y, x, b, n[0], n[1]),
                                    E = w(_, y, x, b, n[2], n[3]),
                                    I = w(_, y, x, b, n[4], n[5]),
                                    O = w(_, y, x, b, n[6], n[7]),
                                    L = function(t, e, i, n) {
                                        var r, s = [0, t],
                                            a = [1 / 3, e],
                                            o = [2 / 3, i],
                                            h = [1, n],
                                            l = e - (2 * t + n) / 3,
                                            c = i - (t + 2 * n) / 3;
                                        if (l * c < 0) r = [
                                            [s, a, h],
                                            [s, o, h]
                                        ];
                                        else {
                                            var u = l / c;
                                            r = [u >= 2 ? [s, a, h] : u <= .5 ? [s, o, h] : [s, a, o, h],
                                                [s, h]
                                            ]
                                        }
                                        return (l || c) < 0 ? r.reverse() : r
                                    }(T, E, I, O),
                                    D = L[0],
                                    B = L[1];
                                if (0 === S && 0 === C && 0 === T && 0 === E && 0 === I && 0 === O || null == (m = i(D, B, P, M)) || null == (v = i(D.reverse(), B.reverse(), P, M))) return u;
                                var R = d + (p - d) * m,
                                    N = d + (p - d) * v;
                                if (Math.max(g - f, N - R) < 1e-9) {
                                    var V = (R + N) / 2,
                                        F = (f + g) / 2;
                                    t(o, h, l ? a : s, l ? F : V, l ? s : a, l ? V : F)
                                } else {
                                    n = z.getPart(n, m, v);
                                    var j = g - f;
                                    if (v - m > .8)
                                        if (N - R > j) {
                                            V = (R + N) / 2;
                                            u = e(r, (q = z.subdivide(n, .5))[0], a, s, o, h, !l, c, u, f, g, R, V), u = e(r, q[1], a, s, o, h, !l, c, u, f, g, V, N)
                                        } else {
                                            var q;
                                            F = (f + g) / 2;
                                            u = e((q = z.subdivide(r, .5))[0], n, a, s, o, h, !l, c, u, f, F, R, N), u = e(q[1], n, a, s, o, h, !l, c, u, F, g, R, N)
                                        }
                                    else u = 0 === j || j >= 1e-9 ? e(r, n, a, s, o, h, !l, c, u, f, g, R, N) : e(n, r, s, a, o, h, l, c, u, R, N, f, g)
                                }
                                return u
                            }

                            function i(t, e, i, r) {
                                return t[0][1] < i ? n(t, !0, i) : e[0][1] > r ? n(e, !1, r) : t[0][0]
                            }

                            function n(t, e, i) {
                                for (var n = t[0][0], r = t[0][1], s = 1, a = t.length; s < a; s++) {
                                    var o = t[s][0],
                                        h = t[s][1];
                                    if (e ? h >= i : h <= i) return h === i ? o : n + (i - r) * (o - n) / (h - r);
                                    n = o, r = h
                                }
                                return null
                            }

                            function r(t, e, i, n, r) {
                                var s = m.isZero;
                                if (s(n) && s(r)) {
                                    var a = z.getTimeOf(t, new _(e, i));
                                    return null === a ? [] : [a]
                                }
                                for (var o = Math.atan2(-r, n), h = Math.sin(o), l = Math.cos(o), c = [], u = [], d = 0; d < 8; d += 2) {
                                    var p = t[d] - e,
                                        f = t[d + 1] - i;
                                    c.push(p * l - f * h, p * h + f * l)
                                }
                                return z.solveCubic(c, 1, 0, u, 0, 1), u
                            }

                            function s(e, i, n, s, a, o, h) {
                                for (var l = i[0], c = i[1], u = r(e, l, c, i[6] - l, i[7] - c), d = 0, p = u.length; d < p; d++) {
                                    var f = u[d],
                                        g = z.getPoint(e, f),
                                        m = z.getTimeOf(i, g);
                                    null !== m && t(a, o, h ? s : n, h ? m : f, h ? n : s, h ? f : m)
                                }
                            }

                            function a(e, i, n, r, s, a) {
                                var o = k.intersect(e[0], e[1], e[6], e[7], i[0], i[1], i[6], i[7]);
                                o && t(s, a, n, z.getTimeOf(e, o), r, z.getTimeOf(i, o))
                            }

                            function o(i, n, r, o, h, c) {
                                var u = 1e-12,
                                    d = Math.min,
                                    p = Math.max;
                                if (p(i[0], i[2], i[4], i[6]) + u > d(n[0], n[2], n[4], n[6]) && d(i[0], i[2], i[4], i[6]) - u < p(n[0], n[2], n[4], n[6]) && p(i[1], i[3], i[5], i[7]) + u > d(n[1], n[3], n[5], n[7]) && d(i[1], i[3], i[5], i[7]) - u < p(n[1], n[3], n[5], n[7])) {
                                    var f = l(i, n);
                                    if (f)
                                        for (var g = 0; g < 2; g++) {
                                            var m = f[g];
                                            t(h, c, r, m[0], o, m[1], !0)
                                        } else {
                                            var v = z.isStraight(i),
                                                y = z.isStraight(n),
                                                x = v && y,
                                                b = v && !y,
                                                w = h.length;
                                            if ((x ? a : v || y ? s : e)(b ? n : i, b ? i : n, b ? o : r, b ? r : o, h, c, b, 0, 0, 0, 1, 0, 1), !x || h.length === w)
                                                for (g = 0; g < 4; g++) {
                                                    var S = g >> 1,
                                                        C = 1 & g,
                                                        k = 6 * S,
                                                        A = 6 * C,
                                                        P = new _(i[k], i[k + 1]),
                                                        M = new _(n[A], n[A + 1]);
                                                    P.isClose(M, u) && t(h, c, r, S, o, C)
                                                }
                                        }
                                }
                                return h
                            }

                            function h(e, i, n, r) {
                                var s = z.classify(e);
                                if ("loop" === s.type) {
                                    var a = s.roots;
                                    t(n, r, i, a[0], i, a[1])
                                }
                                return n
                            }

                            function l(t, e) {
                                function i(t) {
                                    var e = t[6] - t[0],
                                        i = t[7] - t[1];
                                    return e * e + i * i
                                }
                                var n = Math.abs,
                                    r = k.getDistance,
                                    s = 1e-7,
                                    a = z.isStraight(t),
                                    o = z.isStraight(e),
                                    h = a && o,
                                    l = i(t) < i(e),
                                    c = l ? e : t,
                                    u = l ? t : e,
                                    d = c[0],
                                    p = c[1],
                                    f = c[6] - d,
                                    g = c[7] - p;
                                if (r(d, p, f, g, u[0], u[1], !0) < s && r(d, p, f, g, u[6], u[7], !0) < s) !h && r(d, p, f, g, c[2], c[3], !0) < s && r(d, p, f, g, c[4], c[5], !0) < s && r(d, p, f, g, u[2], u[3], !0) < s && r(d, p, f, g, u[4], u[5], !0) < s && (a = o = h = !0);
                                else if (h) return null;
                                if (a ^ o) return null;
                                for (var m = [t, e], v = [], y = 0; y < 4 && v.length < 2; y++) {
                                    var x = 1 & y,
                                        b = 1 ^ x,
                                        w = y >> 1,
                                        S = z.getTimeOf(m[x], new _(m[b][w ? 6 : 0], m[b][w ? 7 : 1]));
                                    if (null != S) {
                                        var C = x ? [w, S] : [S, w];
                                        (!v.length || n(C[0] - v[0][0]) > 1e-8 && n(C[1] - v[0][1]) > 1e-8) && v.push(C)
                                    }
                                    if (y > 2 && !v.length) break
                                }
                                if (2 !== v.length) v = null;
                                else if (!h) {
                                    var A = z.getPart(t, v[0][0], v[1][0]),
                                        P = z.getPart(e, v[0][1], v[1][1]);
                                    (n(P[2] - A[2]) > s || n(P[3] - A[3]) > s || n(P[4] - A[4]) > s || n(P[5] - A[5]) > s) && (v = null)
                                }
                                return v
                            }
                            return {
                                getIntersections: function(t) {
                                    var e = this.getValues(),
                                        i = t && t !== this && t.getValues();
                                    return i ? o(e, i, this, t, []) : h(e, this, [])
                                },
                                statics: {
                                    getOverlaps: l,
                                    getIntersections: function(t, e, i, n, r, s) {
                                        var a = !e;
                                        a && (e = t);
                                        for (var l = t.length, c = e.length, u = new Array(l), d = a ? u : new Array(c), p = [], g = 0; g < l; g++) u[g] = t[g].getValues(n);
                                        if (!a)
                                            for (g = 0; g < c; g++) d[g] = e[g].getValues(r);
                                        for (var m = f.findCurveBoundsCollisions(u, d, 1e-7), v = 0; v < l; v++) {
                                            var _ = t[v],
                                                y = u[v];
                                            a && h(y, _, p, i);
                                            var x = m[v];
                                            if (x)
                                                for (var b = 0; b < x.length; b++) {
                                                    if (s && p.length) return p;
                                                    var w = x[b];
                                                    if (!a || w > v) {
                                                        var S = e[w];
                                                        o(y, d[w], _, S, p, i)
                                                    }
                                                }
                                        }
                                        return p
                                    },
                                    getCurveLineIntersections: r,
                                    getTimesWithTangent: function(t, e) {
                                        var i = t[0],
                                            n = t[1],
                                            r = t[2],
                                            s = t[3],
                                            a = t[4],
                                            o = t[5],
                                            h = t[6],
                                            l = t[7],
                                            c = e.normalize(),
                                            u = c.x,
                                            d = c.y,
                                            p = 3 * h - 9 * a + 9 * r - 3 * i,
                                            f = 3 * l - 9 * o + 9 * s - 3 * n,
                                            g = 6 * a - 12 * r + 6 * i,
                                            v = 6 * o - 12 * s + 6 * n,
                                            _ = 3 * r - 3 * i,
                                            y = 3 * s - 3 * n,
                                            x = 2 * p * d - 2 * f * u,
                                            b = [];
                                        if (Math.abs(x) < m.CURVETIME_EPSILON) {
                                            if (0 != (x = p * v - f * g)) {
                                                var w = -(p * y - f * _) / x;
                                                w >= 0 && w <= 1 && b.push(w)
                                            }
                                        } else {
                                            var S = (g * g - 4 * p * _) * d * d + (-2 * g * v + 4 * f * _ + 4 * p * y) * u * d + (v * v - 4 * f * y) * u * u,
                                                C = g * d - v * u;
                                            if (S >= 0 && 0 != x) {
                                                var k = Math.sqrt(S),
                                                    A = -(C + k) / x,
                                                    P = (-C + k) / x;
                                                A >= 0 && A <= 1 && b.push(A), P >= 0 && P <= 1 && b.push(P)
                                            }
                                        }
                                        return b
                                    }
                                }
                            }
                        }),
                        N = c.extend({
                            _class: "CurveLocation",
                            initialize: function(t, e, i, n, r) {
                                if (e >= .99999999) {
                                    var s = t.getNext();
                                    s && (e = 0, t = s)
                                }
                                this._setCurve(t), this._time = e, this._point = i || t.getPointAtTime(e), this._overlap = n, this._distance = r, this._intersection = this._next = this._previous = null
                            },
                            _setPath: function(t) {
                                this._path = t, this._version = t ? t._version : 0
                            },
                            _setCurve: function(t) {
                                this._setPath(t._path), this._curve = t, this._segment = null, this._segment1 = t._segment1, this._segment2 = t._segment2
                            },
                            _setSegment: function(t) {
                                var e = t.getCurve();
                                e ? this._setCurve(e) : (this._setPath(t._path), this._segment1 = t, this._segment2 = null), this._segment = t, this._time = t === this._segment1 ? 0 : 1, this._point = t._point.clone()
                            },
                            getSegment: function() {
                                var t = this._segment;
                                if (!t) {
                                    var e = this.getCurve(),
                                        i = this.getTime();
                                    0 === i ? t = e._segment1 : 1 === i ? t = e._segment2 : null != i && (t = e.getPartLength(0, i) < e.getPartLength(i, 1) ? e._segment1 : e._segment2), this._segment = t
                                }
                                return t
                            },
                            getCurve: function() {
                                var t = this._path,
                                    e = this;

                                function i(t) {
                                    var i = t && t.getCurve();
                                    if (i && null != (e._time = i.getTimeOf(e._point))) return e._setCurve(i), i
                                }
                                return t && t._version !== this._version && (this._time = this._offset = this._curveOffset = this._curve = null), this._curve || i(this._segment) || i(this._segment1) || i(this._segment2.getPrevious())
                            },
                            getPath: function() {
                                var t = this.getCurve();
                                return t && t._path
                            },
                            getIndex: function() {
                                var t = this.getCurve();
                                return t && t.getIndex()
                            },
                            getTime: function() {
                                var t = this.getCurve(),
                                    e = this._time;
                                return t && null == e ? this._time = t.getTimeOf(this._point) : e
                            },
                            getParameter: "#getTime",
                            getPoint: function() {
                                return this._point
                            },
                            getOffset: function() {
                                var t = this._offset;
                                if (null == t) {
                                    t = 0;
                                    var e = this.getPath(),
                                        i = this.getIndex();
                                    if (e && null != i)
                                        for (var n = e.getCurves(), r = 0; r < i; r++) t += n[r].getLength();
                                    this._offset = t += this.getCurveOffset()
                                }
                                return t
                            },
                            getCurveOffset: function() {
                                var t = this._curveOffset;
                                if (null == t) {
                                    var e = this.getCurve(),
                                        i = this.getTime();
                                    this._curveOffset = t = null != i && e && e.getPartLength(0, i)
                                }
                                return t
                            },
                            getIntersection: function() {
                                return this._intersection
                            },
                            getDistance: function() {
                                return this._distance
                            },
                            divide: function() {
                                var t = this.getCurve(),
                                    e = t && t.divideAtTime(this.getTime());
                                return e && this._setSegment(e._segment1), e
                            },
                            split: function() {
                                var t = this.getCurve(),
                                    e = t._path,
                                    i = t && t.splitAtTime(this.getTime());
                                return i && this._setSegment(e.getLastSegment()), i
                            },
                            equals: function(t, e) {
                                var i = this === t;
                                if (!i && t instanceof N) {
                                    var n = this.getCurve(),
                                        r = t.getCurve(),
                                        s = n._path;
                                    if (s === r._path) {
                                        var a = Math.abs,
                                            o = a(this.getOffset() - t.getOffset()),
                                            h = !e && this._intersection,
                                            l = !e && t._intersection;
                                        i = (o < 1e-7 || s && a(s.getLength() - o) < 1e-7) && (!h && !l || h && l && h.equals(l, !0))
                                    }
                                }
                                return i
                            },
                            toString: function() {
                                var t = [],
                                    e = this.getPoint(),
                                    i = g.instance;
                                e && t.push("point: " + e);
                                var n = this.getIndex();
                                null != n && t.push("index: " + n);
                                var r = this.getTime();
                                return null != r && t.push("time: " + i.number(r)), null != this._distance && t.push("distance: " + i.number(this._distance)), "{ " + t.join(", ") + " }"
                            },
                            isTouching: function() {
                                var t = this._intersection;
                                if (t && this.getTangent().isCollinear(t.getTangent())) {
                                    var e = this.getCurve(),
                                        i = t.getCurve();
                                    return !(e.isStraight() && i.isStraight() && e.getLine().intersect(i.getLine()))
                                }
                                return !1
                            },
                            isCrossing: function() {
                                var t = this._intersection;
                                if (!t) return !1;
                                var e = this.getTime(),
                                    i = t.getTime(),
                                    n = 1e-8,
                                    r = 1 - n,
                                    s = e >= n && e <= r,
                                    a = i >= n && i <= r;
                                if (s && a) return !this.isTouching();
                                var o = this.getCurve(),
                                    h = o && e < n ? o.getPrevious() : o,
                                    l = t.getCurve(),
                                    c = l && i < n ? l.getPrevious() : l;
                                if (e > r && (o = o.getNext()), i > r && (l = l.getNext()), !(h && o && c && l)) return !1;
                                var u = [];

                                function d(t, e) {
                                    var i = t.getValues(),
                                        n = z.classify(i).roots || z.getPeaks(i),
                                        r = n.length,
                                        s = z.getLength(i, e && r ? n[r - 1] : 0, !e && r ? n[0] : 1);
                                    u.push(r ? s : s / 32)
                                }

                                function p(t, e, i) {
                                    return e < i ? t > e && t < i : t > e || t < i
                                }
                                s || (d(h, !0), d(o, !1)), a || (d(c, !0), d(l, !1));
                                var f = this.getPoint(),
                                    g = Math.min.apply(Math, u),
                                    m = s ? o.getTangentAtTime(e) : o.getPointAt(g).subtract(f),
                                    v = s ? m.negate() : h.getPointAt(-g).subtract(f),
                                    _ = a ? l.getTangentAtTime(i) : l.getPointAt(g).subtract(f),
                                    y = a ? _.negate() : c.getPointAt(-g).subtract(f),
                                    x = v.getAngle(),
                                    b = m.getAngle(),
                                    w = y.getAngle(),
                                    S = _.getAngle();
                                return !!(s ? p(x, w, S) ^ p(b, w, S) && p(x, S, w) ^ p(b, S, w) : p(w, x, b) ^ p(S, x, b) && p(w, b, x) ^ p(S, b, x))
                            },
                            hasOverlap: function() {
                                return !!this._overlap
                            }
                        }, c.each(z._evaluateMethods, (function(t) {
                            var e = t + "At";
                            this[t] = function() {
                                var t = this.getCurve(),
                                    i = this.getTime();
                                return null != i && t && t[e](i, !0)
                            }
                        }), {
                            preserve: !0
                        }), new function() {
                            function t(t, e, i) {
                                var n = t.length,
                                    r = 0,
                                    s = n - 1;

                                function a(i, r) {
                                    for (var s = i + r; s >= -1 && s <= n; s += r) {
                                        var a = t[(s % n + n) % n];
                                        if (!e.getPoint().isClose(a.getPoint(), 1e-7)) break;
                                        if (e.equals(a)) return a
                                    }
                                    return null
                                }
                                for (; r <= s;) {
                                    var o, h = r + s >>> 1,
                                        l = t[h];
                                    if (i && (o = e.equals(l) ? l : a(h, -1) || a(h, 1))) return e._overlap && (o._overlap = o._intersection._overlap = !0), o;
                                    var c = e.getPath(),
                                        u = l.getPath();
                                    (c !== u ? c._id - u._id : e.getIndex() + e.getTime() - (l.getIndex() + l.getTime())) < 0 ? s = h - 1 : r = h + 1
                                }
                                return t.splice(r, 0, e), e
                            }
                            return {
                                statics: {
                                    insert: t,
                                    expand: function(e) {
                                        for (var i = e.slice(), n = e.length - 1; n >= 0; n--) t(i, e[n]._intersection, !1);
                                        return i
                                    }
                                }
                            }
                        }),
                        V = P.extend({
                            _class: "PathItem",
                            _selectBounds: !1,
                            _canScaleStroke: !0,
                            beans: !0,
                            initialize: function() {},
                            statics: {
                                create: function(t) {
                                    var e, i, n;
                                    if (c.isPlainObject(t) ? (i = t.segments, e = t.pathData) : Array.isArray(t) ? i = t : "string" == typeof t && (e = t), i) {
                                        var r = i[0];
                                        n = r && Array.isArray(r[0])
                                    } else e && (n = (e.match(/m/gi) || []).length > 1 || /z\s*\S+/i.test(e));
                                    return new(n ? j : F)(t)
                                }
                            },
                            _asPathItem: function() {
                                return this
                            },
                            isClockwise: function() {
                                return this.getArea() >= 0
                            },
                            setClockwise: function(t) {
                                this.isClockwise() != (t = !!t) && this.reverse()
                            },
                            setPathData: function(t) {
                                var e, i, n, r = t && t.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/gi),
                                    s = !1,
                                    a = new _,
                                    o = new _;

                                function h(t, i) {
                                    var n = +e[t];
                                    return s && (n += a[i]), n
                                }

                                function l(t) {
                                    return new _(h(t, "x"), h(t + 1, "y"))
                                }
                                this.clear();
                                for (var c = 0, u = r && r.length; c < u; c++) {
                                    var d = r[c],
                                        p = d[0],
                                        f = p.toLowerCase(),
                                        g = (e = d.match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g)) && e.length;
                                    switch (s = p === f, "z" !== i || /[mz]/.test(f) || this.moveTo(a), f) {
                                        case "m":
                                        case "l":
                                            for (var m = "m" === f, v = 0; v < g; v += 2) this[m ? "moveTo" : "lineTo"](a = l(v)), m && (o = a, m = !1);
                                            n = a;
                                            break;
                                        case "h":
                                        case "v":
                                            var y = "h" === f ? "x" : "y";
                                            a = a.clone();
                                            for (v = 0; v < g; v++) a[y] = h(v, y), this.lineTo(a);
                                            n = a;
                                            break;
                                        case "c":
                                            for (v = 0; v < g; v += 6) this.cubicCurveTo(l(v), n = l(v + 2), a = l(v + 4));
                                            break;
                                        case "s":
                                            for (v = 0; v < g; v += 4) this.cubicCurveTo(/[cs]/.test(i) ? a.multiply(2).subtract(n) : a, n = l(v), a = l(v + 2)), i = f;
                                            break;
                                        case "q":
                                            for (v = 0; v < g; v += 4) this.quadraticCurveTo(n = l(v), a = l(v + 2));
                                            break;
                                        case "t":
                                            for (v = 0; v < g; v += 2) this.quadraticCurveTo(n = /[qt]/.test(i) ? a.multiply(2).subtract(n) : a, a = l(v)), i = f;
                                            break;
                                        case "a":
                                            for (v = 0; v < g; v += 7) this.arcTo(a = l(v + 5), new x(+e[v], +e[v + 1]), +e[v + 2], +e[v + 4], +e[v + 3]);
                                            break;
                                        case "z":
                                            this.closePath(1e-12), a = o
                                    }
                                    i = f
                                }
                            },
                            _canComposite: function() {
                                return !(this.hasFill() && this.hasStroke())
                            },
                            _contains: function(t) {
                                var e = t.isInside(this.getBounds({
                                    internal: !0,
                                    handle: !0
                                })) ? this._getWinding(t) : {};
                                return e.onPath || !!("evenodd" === this.getFillRule() ? 1 & e.windingL || 1 & e.windingR : e.winding)
                            },
                            getIntersections: function(t, e, i, n) {
                                var r = this === t || !t,
                                    s = this._matrix._orNullIfIdentity(),
                                    a = r ? s : (i || t._matrix)._orNullIfIdentity();
                                return r || this.getBounds(s).intersects(t.getBounds(a), 1e-12) ? z.getIntersections(this.getCurves(), !r && t.getCurves(), e, s, a, n) : []
                            },
                            getCrossings: function(t) {
                                return this.getIntersections(t, (function(t) {
                                    return t.isCrossing()
                                }))
                            },
                            getNearestLocation: function() {
                                for (var t = _.read(arguments), e = this.getCurves(), i = 1 / 0, n = null, r = 0, s = e.length; r < s; r++) {
                                    var a = e[r].getNearestLocation(t);
                                    a._distance < i && (i = a._distance, n = a)
                                }
                                return n
                            },
                            getNearestPoint: function() {
                                var t = this.getNearestLocation.apply(this, arguments);
                                return t ? t.getPoint() : t
                            },
                            interpolate: function(t, e, i) {
                                var n = !this._children,
                                    r = n ? "_segments" : "_children",
                                    s = t[r],
                                    a = e[r],
                                    o = this[r];
                                if (!s || !a || s.length !== a.length) throw new Error("Invalid operands in interpolate() call: " + t + ", " + e);
                                var h = o.length,
                                    l = a.length;
                                if (h < l)
                                    for (var c = n ? B : F, u = h; u < l; u++) this.add(new c);
                                else h > l && this[n ? "removeSegments" : "removeChildren"](l, h);
                                for (u = 0; u < l; u++) o[u].interpolate(s[u], a[u], i);
                                n && (this.setClosed(t._closed), this._changed(9))
                            },
                            compare: function(t) {
                                var e = !1;
                                if (t) {
                                    var i = this._children || [this],
                                        n = t._children ? t._children.slice() : [t],
                                        r = i.length,
                                        s = n.length,
                                        a = [],
                                        o = 0;
                                    e = !0;
                                    for (var h = f.findItemBoundsCollisions(i, n, m.GEOMETRIC_EPSILON), l = r - 1; l >= 0 && e; l--) {
                                        var c = i[l];
                                        e = !1;
                                        var u = h[l];
                                        if (u)
                                            for (var d = u.length - 1; d >= 0 && !e; d--) c.compare(n[u[d]]) && (a[u[d]] || (a[u[d]] = !0, o++), e = !0)
                                    }
                                    e = e && o === s
                                }
                                return e
                            }
                        }),
                        F = V.extend({
                            _class: "Path",
                            _serializeFields: {
                                segments: [],
                                closed: !1
                            },
                            initialize: function(t) {
                                this._closed = !1, this._segments = [], this._version = 0;
                                var e = arguments,
                                    i = Array.isArray(t) ? "object" == typeof t[0] ? t : e : !t || t.size !== o || t.x === o && t.point === o ? null : e;
                                i && i.length > 0 ? this.setSegments(i) : (this._curves = o, this._segmentSelection = 0, i || "string" != typeof t || (this.setPathData(t), t = null)), this._initialize(!i && t)
                            },
                            _equals: function(t) {
                                return this._closed === t._closed && c.equals(this._segments, t._segments)
                            },
                            copyContent: function(t) {
                                this.setSegments(t._segments), this._closed = t._closed
                            },
                            _changed: function t(e) {
                                if (t.base.call(this, e), 8 & e) {
                                    if (this._length = this._area = o, 32 & e) this._version++;
                                    else if (this._curves)
                                        for (var i = 0, n = this._curves.length; i < n; i++) this._curves[i]._changed()
                                } else 64 & e && (this._bounds = o)
                            },
                            getStyle: function() {
                                var t = this._parent;
                                return (t instanceof j ? t : this)._style
                            },
                            getSegments: function() {
                                return this._segments
                            },
                            setSegments: function(t) {
                                var e = this.isFullySelected(),
                                    i = t && t.length;
                                if (this._segments.length = 0, this._segmentSelection = 0, this._curves = o, i) {
                                    var n = t[i - 1];
                                    "boolean" == typeof n && (this.setClosed(n), i--), this._add(B.readList(t, 0, {}, i))
                                }
                                e && this.setFullySelected(!0)
                            },
                            getFirstSegment: function() {
                                return this._segments[0]
                            },
                            getLastSegment: function() {
                                return this._segments[this._segments.length - 1]
                            },
                            getCurves: function() {
                                var t = this._curves,
                                    e = this._segments;
                                if (!t) {
                                    var i = this._countCurves();
                                    t = this._curves = new Array(i);
                                    for (var n = 0; n < i; n++) t[n] = new z(this, e[n], e[n + 1] || e[0])
                                }
                                return t
                            },
                            getFirstCurve: function() {
                                return this.getCurves()[0]
                            },
                            getLastCurve: function() {
                                var t = this.getCurves();
                                return t[t.length - 1]
                            },
                            isClosed: function() {
                                return this._closed
                            },
                            setClosed: function(t) {
                                if (this._closed != (t = !!t)) {
                                    if (this._closed = t, this._curves) {
                                        var e = this._curves.length = this._countCurves();
                                        t && (this._curves[e - 1] = new z(this, this._segments[e - 1], this._segments[0]))
                                    }
                                    this._changed(41)
                                }
                            }
                        }, {
                            beans: !0,
                            getPathData: function(t, e) {
                                var i, n, r, s, a, o, h, l, c = this._segments,
                                    u = c.length,
                                    d = new g(e),
                                    p = new Array(6),
                                    f = !0,
                                    m = [];

                                function v(e, c) {
                                    if (e._transformCoordinates(t, p), i = p[0], n = p[1], f) m.push("M" + d.pair(i, n)), f = !1;
                                    else if (a = p[2], o = p[3], a === i && o === n && h === r && l === s) {
                                        if (!c) {
                                            var u = i - r,
                                                g = n - s;
                                            m.push(0 === u ? "v" + d.number(g) : 0 === g ? "h" + d.number(u) : "l" + d.pair(u, g))
                                        }
                                    } else m.push("c" + d.pair(h - r, l - s) + " " + d.pair(a - r, o - s) + " " + d.pair(i - r, n - s));
                                    r = i, s = n, h = p[4], l = p[5]
                                }
                                if (!u) return "";
                                for (var _ = 0; _ < u; _++) v(c[_]);
                                return this._closed && u > 0 && (v(c[0], !0), m.push("z")), m.join("")
                            },
                            isEmpty: function() {
                                return !this._segments.length
                            },
                            _transformContent: function(t) {
                                for (var e = this._segments, i = new Array(6), n = 0, r = e.length; n < r; n++) e[n]._transformCoordinates(t, i, !0);
                                return !0
                            },
                            _add: function(t, e) {
                                for (var i = this._segments, n = this._curves, r = t.length, s = null == e, a = (e = s ? i.length : e, 0); a < r; a++) {
                                    var o = t[a];
                                    o._path && (o = t[a] = o.clone()), o._path = this, o._index = e + a, o._selection && this._updateSelection(o, 0, o._selection)
                                }
                                if (s) c.push(i, t);
                                else {
                                    i.splice.apply(i, [e, 0].concat(t));
                                    a = e + r;
                                    for (var h = i.length; a < h; a++) i[a]._index = a
                                }
                                if (n) {
                                    var l = this._countCurves(),
                                        u = e > 0 && e + r - 1 === l ? e - 1 : e,
                                        d = u,
                                        p = Math.min(u + r, l);
                                    t._curves && (n.splice.apply(n, [u, 0].concat(t._curves)), d += t._curves.length);
                                    for (a = d; a < p; a++) n.splice(a, 0, new z(this, null, null));
                                    this._adjustCurves(u, p)
                                }
                                return this._changed(41), t
                            },
                            _adjustCurves: function(t, e) {
                                for (var i, n = this._segments, r = this._curves, s = t; s < e; s++)(i = r[s])._path = this, i._segment1 = n[s], i._segment2 = n[s + 1] || n[0], i._changed();
                                (i = r[this._closed && !t ? n.length - 1 : t - 1]) && (i._segment2 = n[t] || n[0], i._changed()), (i = r[e]) && (i._segment1 = n[e], i._changed())
                            },
                            _countCurves: function() {
                                var t = this._segments.length;
                                return !this._closed && t > 0 ? t - 1 : t
                            },
                            add: function(t) {
                                var e = arguments;
                                return e.length > 1 && "number" != typeof t ? this._add(B.readList(e)) : this._add([B.read(e)])[0]
                            },
                            insert: function(t, e) {
                                var i = arguments;
                                return i.length > 2 && "number" != typeof e ? this._add(B.readList(i, 1), t) : this._add([B.read(i, 1)], t)[0]
                            },
                            addSegment: function() {
                                return this._add([B.read(arguments)])[0]
                            },
                            insertSegment: function(t) {
                                return this._add([B.read(arguments, 1)], t)[0]
                            },
                            addSegments: function(t) {
                                return this._add(B.readList(t))
                            },
                            insertSegments: function(t, e) {
                                return this._add(B.readList(e), t)
                            },
                            removeSegment: function(t) {
                                return this.removeSegments(t, t + 1)[0] || null
                            },
                            removeSegments: function(t, e, i) {
                                t = t || 0, e = c.pick(e, this._segments.length);
                                var n = this._segments,
                                    r = this._curves,
                                    s = n.length,
                                    a = n.splice(t, e - t),
                                    o = a.length;
                                if (!o) return a;
                                for (var h = 0; h < o; h++) {
                                    var l = a[h];
                                    l._selection && this._updateSelection(l, l._selection, 0), l._index = l._path = null
                                }
                                h = t;
                                for (var u = n.length; h < u; h++) n[h]._index = h;
                                if (r) {
                                    var d = t > 0 && e === s + (this._closed ? 1 : 0) ? t - 1 : t;
                                    for (h = (r = r.splice(d, o)).length - 1; h >= 0; h--) r[h]._path = null;
                                    i && (a._curves = r.slice(1)), this._adjustCurves(d, d)
                                }
                                return this._changed(41), a
                            },
                            clear: "#removeSegments",
                            hasHandles: function() {
                                for (var t = this._segments, e = 0, i = t.length; e < i; e++)
                                    if (t[e].hasHandles()) return !0;
                                return !1
                            },
                            clearHandles: function() {
                                for (var t = this._segments, e = 0, i = t.length; e < i; e++) t[e].clearHandles()
                            },
                            getLength: function() {
                                if (null == this._length) {
                                    for (var t = this.getCurves(), e = 0, i = 0, n = t.length; i < n; i++) e += t[i].getLength();
                                    this._length = e
                                }
                                return this._length
                            },
                            getArea: function() {
                                var t = this._area;
                                if (null == t) {
                                    var e = this._segments,
                                        i = this._closed;
                                    t = 0;
                                    for (var n = 0, r = e.length; n < r; n++) {
                                        var s = n + 1 === r;
                                        t += z.getArea(z.getValues(e[n], e[s ? 0 : n + 1], null, s && !i))
                                    }
                                    this._area = t
                                }
                                return t
                            },
                            isFullySelected: function() {
                                var t = this._segments.length;
                                return this.isSelected() && t > 0 && this._segmentSelection === 7 * t
                            },
                            setFullySelected: function(t) {
                                t && this._selectSegments(!0), this.setSelected(t)
                            },
                            setSelection: function t(e) {
                                1 & e || this._selectSegments(!1), t.base.call(this, e)
                            },
                            _selectSegments: function(t) {
                                var e = this._segments,
                                    i = e.length,
                                    n = t ? 7 : 0;
                                this._segmentSelection = n * i;
                                for (var r = 0; r < i; r++) e[r]._selection = n
                            },
                            _updateSelection: function(t, e, i) {
                                t._selection = i, (this._segmentSelection += i - e) > 0 && this.setSelected(!0)
                            },
                            divideAt: function(t) {
                                var e, i = this.getLocationAt(t);
                                return i && (e = i.getCurve().divideAt(i.getCurveOffset())) ? e._segment1 : null
                            },
                            splitAt: function(t) {
                                var e = this.getLocationAt(t),
                                    i = e && e.index,
                                    n = e && e.time;
                                n > .99999999 && (i++, n = 0);
                                var r = this.getCurves();
                                if (i >= 0 && i < r.length) {
                                    n >= 1e-8 && r[i++].divideAtTime(n);
                                    var s, a = this.removeSegments(i, this._segments.length, !0);
                                    return this._closed ? (this.setClosed(!1), s = this) : ((s = new F(P.NO_INSERT)).insertAbove(this), s.copyAttributes(this)), s._add(a, 0), this.addSegment(a[0]), s
                                }
                                return null
                            },
                            split: function(t, e) {
                                var i, n = e === o ? t : (i = this.getCurves()[t]) && i.getLocationAtTime(e);
                                return null != n ? this.splitAt(n) : null
                            },
                            join: function(t, e) {
                                var i = e || 0;
                                if (t && t !== this) {
                                    var n = t._segments,
                                        r = this.getLastSegment(),
                                        s = t.getLastSegment();
                                    if (!s) return this;
                                    r && r._point.isClose(s._point, i) && t.reverse();
                                    var a = t.getFirstSegment();
                                    if (r && r._point.isClose(a._point, i)) r.setHandleOut(a._handleOut), this._add(n.slice(1));
                                    else {
                                        var o = this.getFirstSegment();
                                        o && o._point.isClose(a._point, i) && t.reverse(), s = t.getLastSegment(), o && o._point.isClose(s._point, i) ? (o.setHandleIn(s._handleIn), this._add(n.slice(0, n.length - 1), 0)) : this._add(n.slice())
                                    }
                                    t._closed && this._add([n[0]]), t.remove()
                                }
                                var h = this.getFirstSegment(),
                                    l = this.getLastSegment();
                                return h !== l && h._point.isClose(l._point, i) && (h.setHandleIn(l._handleIn), l.remove(), this.setClosed(!0)), this
                            },
                            reduce: function(t) {
                                for (var e = this.getCurves(), i = t && t.simplify, n = i ? 1e-7 : 0, r = e.length - 1; r >= 0; r--) {
                                    var s = e[r];
                                    !s.hasHandles() && (!s.hasLength(n) || i && s.isCollinear(s.getNext())) && s.remove()
                                }
                                return this
                            },
                            reverse: function() {
                                this._segments.reverse();
                                for (var t = 0, e = this._segments.length; t < e; t++) {
                                    var i = this._segments[t],
                                        n = i._handleIn;
                                    i._handleIn = i._handleOut, i._handleOut = n, i._index = t
                                }
                                this._curves = null, this._changed(9)
                            },
                            flatten: function(t) {
                                for (var e = new q(this, t || .25, 256, !0).parts, i = e.length, n = [], r = 0; r < i; r++) n.push(new B(e[r].curve.slice(0, 2)));
                                !this._closed && i > 0 && n.push(new B(e[i - 1].curve.slice(6))), this.setSegments(n)
                            },
                            simplify: function(t) {
                                var e = new H(this).fit(t || 2.5);
                                return e && this.setSegments(e), !!e
                            },
                            smooth: function(t) {
                                var e = this,
                                    i = t || {},
                                    n = i.type || "asymmetric",
                                    r = this._segments,
                                    s = r.length,
                                    a = this._closed;

                                function h(t, i) {
                                    var n = t && t.index;
                                    if (null != n) {
                                        var r = t.path;
                                        if (r && r !== e) throw new Error(t._class + " " + n + " of " + r + " is not part of " + e);
                                        i && t instanceof z && n++
                                    } else n = "number" == typeof t ? t : i;
                                    return Math.min(n < 0 && a ? n % s : n < 0 ? n + s : n, s - 1)
                                }
                                var l = a && i.from === o && i.to === o,
                                    c = h(i.from, 0),
                                    u = h(i.to, s - 1);
                                if (c > u)
                                    if (a) c -= s;
                                    else {
                                        var d = c;
                                        c = u, u = d
                                    }
                                if (/^(?:asymmetric|continuous)$/.test(n)) {
                                    var p = "asymmetric" === n,
                                        f = Math.min,
                                        g = u - c + 1,
                                        m = g - 1,
                                        v = l ? f(g, 4) : 1,
                                        _ = v,
                                        y = v,
                                        x = [];
                                    if (a || (_ = f(1, c), y = f(1, s - u - 1)), (m += _ + y) <= 1) return;
                                    for (var b = 0, w = c - _; b <= m; b++, w++) x[b] = r[(w < 0 ? w + s : w) % s]._point;
                                    var S = x[0]._x + 2 * x[1]._x,
                                        C = x[0]._y + 2 * x[1]._y,
                                        k = 2,
                                        A = m - 1,
                                        P = [S],
                                        M = [C],
                                        T = [k],
                                        E = [],
                                        I = [];
                                    for (b = 1; b < m; b++) {
                                        var O = b < A,
                                            L = O ? 4 : p ? 2 : 7,
                                            D = O ? 4 : p ? 3 : 8,
                                            B = O ? 2 : p ? 0 : 1,
                                            R = (O || p ? 1 : 2) / k;
                                        k = T[b] = L - R, S = P[b] = D * x[b]._x + B * x[b + 1]._x - R * S, C = M[b] = D * x[b]._y + B * x[b + 1]._y - R * C
                                    }
                                    E[A] = P[A] / T[A], I[A] = M[A] / T[A];
                                    for (b = m - 2; b >= 0; b--) E[b] = (P[b] - E[b + 1]) / T[b], I[b] = (M[b] - I[b + 1]) / T[b];
                                    E[m] = (3 * x[m]._x - E[A]) / 2, I[m] = (3 * x[m]._y - I[A]) / 2;
                                    b = _;
                                    var N = m - y;
                                    for (w = c; b <= N; b++, w++) {
                                        var V = r[w < 0 ? w + s : w],
                                            F = V._point,
                                            j = E[b] - F._x,
                                            q = I[b] - F._y;
                                        (l || b < N) && V.setHandleOut(j, q), (l || b > _) && V.setHandleIn(-j, -q)
                                    }
                                } else
                                    for (b = c; b <= u; b++) r[b < 0 ? b + s : b].smooth(i, !l && b === c, !l && b === u)
                            },
                            toShape: function(t) {
                                if (!this._closed) return null;
                                var e, i, n, r, s, a, h, l = this._segments;

                                function c(t, e) {
                                    var i = l[t],
                                        n = i.getNext(),
                                        r = l[e],
                                        s = r.getNext();
                                    return i._handleOut.isZero() && n._handleIn.isZero() && r._handleOut.isZero() && s._handleIn.isZero() && n._point.subtract(i._point).isCollinear(s._point.subtract(r._point))
                                }

                                function u(t) {
                                    var e = l[t],
                                        i = e.getNext(),
                                        n = e._handleOut,
                                        r = i._handleIn,
                                        s = .5522847498307936;
                                    if (n.isOrthogonal(r)) {
                                        var a = e._point,
                                            o = i._point,
                                            h = new k(a, n, !0).intersect(new k(o, r, !0), !0);
                                        return h && m.isZero(n.getLength() / h.subtract(a).getLength() - s) && m.isZero(r.getLength() / h.subtract(o).getLength() - s)
                                    }
                                    return !1
                                }

                                function d(t, e) {
                                    return l[t]._point.getDistance(l[e]._point)
                                }
                                if (!this.hasHandles() && 4 === l.length && c(0, 2) && c(1, 3) && (s = l[1], a = s.getPrevious(), h = s.getNext(), a._handleOut.isZero() && s._handleIn.isZero() && s._handleOut.isZero() && h._handleIn.isZero() && s._point.subtract(a._point).isOrthogonal(h._point.subtract(s._point))) ? (e = E.Rectangle, i = new x(d(0, 3), d(0, 1)), r = l[1]._point.add(l[2]._point).divide(2)) : 8 === l.length && u(0) && u(2) && u(4) && u(6) && c(1, 5) && c(3, 7) ? (e = E.Rectangle, n = (i = new x(d(1, 6), d(0, 3))).subtract(new x(d(0, 7), d(1, 2))).divide(2), r = l[3]._point.add(l[4]._point).divide(2)) : 4 === l.length && u(0) && u(1) && u(2) && u(3) && (m.isZero(d(0, 2) - d(1, 3)) ? (e = E.Circle, n = d(0, 2) / 2) : (e = E.Ellipse, n = new x(d(2, 0) / 2, d(3, 1) / 2)), r = l[1]._point), e) {
                                    var p = this.getPosition(!0),
                                        f = new e({
                                            center: p,
                                            size: i,
                                            radius: n,
                                            insert: !1
                                        });
                                    return f.copyAttributes(this, !0), f._matrix.prepend(this._matrix), f.rotate(r.subtract(p).getAngle() + 90), (t === o || t) && f.insertAbove(this), f
                                }
                                return null
                            },
                            toPath: "#clone",
                            compare: function t(e) {
                                if (!e || e instanceof j) return t.base.call(this, e);
                                var i = this.getCurves(),
                                    n = e.getCurves(),
                                    r = i.length,
                                    s = n.length;
                                if (!r || !s) return r == s;
                                for (var a, o, h = i[0].getValues(), l = [], c = 0, u = 0, d = 0; d < s; d++) {
                                    var p = n[d].getValues();
                                    if (l.push(p), m = z.getOverlaps(h, p)) {
                                        a = !d && m[0][0] > 0 ? s - 1 : d, o = m[0][1];
                                        break
                                    }
                                }
                                var f, g = Math.abs;
                                for (p = l[a]; h && p;) {
                                    var m;
                                    if (m = z.getOverlaps(h, p))
                                        if (g(m[0][0] - u) < 1e-8) {
                                            1 === (u = m[1][0]) && (h = ++c < r ? i[c].getValues() : null, u = 0);
                                            var v = m[0][1];
                                            if (g(v - o) < 1e-8) {
                                                if (f || (f = [a, v]), 1 === (o = m[1][1]) && (++a >= s && (a = 0), p = l[a] || n[a].getValues(), o = 0), !h) return f[0] === a && f[1] === o;
                                                continue
                                            }
                                        }
                                    break
                                }
                                return !1
                            },
                            _hitTestSelf: function(t, e, i, n) {
                                var r, s, a, o, h, l, c = this,
                                    u = this.getStyle(),
                                    d = this._segments,
                                    p = d.length,
                                    f = this._closed,
                                    g = e._tolerancePadding,
                                    m = g,
                                    v = e.stroke && u.hasStroke(),
                                    _ = e.fill && u.hasFill(),
                                    y = e.curves,
                                    x = v ? u.getStrokeWidth() / 2 : _ && e.tolerance > 0 || y ? 0 : null;

                                function b(e, i) {
                                    return t.subtract(e).divide(i).length <= 1
                                }

                                function w(t, i, n) {
                                    if (!e.selected || i.isSelected()) {
                                        var r = t._point;
                                        if (i !== r && (i = i.add(r)), b(i, m)) return new D(n, c, {
                                            segment: t,
                                            point: i
                                        })
                                    }
                                }

                                function S(t, i) {
                                    return (i || e.segments) && w(t, t._point, "segment") || !i && e.handles && (w(t, t._handleIn, "handle-in") || w(t, t._handleOut, "handle-out"))
                                }

                                function C(t) {
                                    o.add(t)
                                }

                                function k(e) {
                                    var i, h = f || e._index > 0 && e._index < p - 1;
                                    return "round" === (h ? r : s) ? b(e._point, m) : (o = new F({
                                        internal: !0,
                                        closed: !0
                                    }), h ? e.isSmooth() || F._addBevelJoin(e, r, x, a, null, n, C, !0) : "square" === s && F._addSquareCap(e, s, x, null, n, C, !0), o.isEmpty() ? void 0 : o.contains(t) || (i = o.getNearestLocation(t)) && b(i.getPoint(), g))
                                }
                                if (null !== x && (x > 0 ? (r = u.getStrokeJoin(), s = u.getStrokeCap(), a = u.getMiterLimit(), m = m.add(F._getStrokePadding(x, n))) : r = s = "round"), !e.ends || e.segments || f) {
                                    if (e.segments || e.handles)
                                        for (var A = 0; A < p; A++)
                                            if (l = S(d[A])) return l
                                } else if (l = S(d[0], !0) || S(d[p - 1], !0)) return l;
                                if (null !== x) {
                                    if (h = this.getNearestLocation(t)) {
                                        var P = h.getTime();
                                        0 === P || 1 === P && p > 1 ? k(h.getSegment()) || (h = null) : b(h.getPoint(), m) || (h = null)
                                    }
                                    if (!h && "miter" === r && p > 1)
                                        for (A = 0; A < p; A++) {
                                            var M = d[A];
                                            if (t.getDistance(M._point) <= a * x && k(M)) {
                                                h = M.getLocation();
                                                break
                                            }
                                        }
                                }
                                return !h && _ && this._contains(t) || h && !v && !y ? new D("fill", this) : h ? new D(v ? "stroke" : "curve", this, {
                                    location: h,
                                    point: h.getPoint()
                                }) : null
                            }
                        }, c.each(z._evaluateMethods, (function(t) {
                            this[t + "At"] = function(e) {
                                var i = this.getLocationAt(e);
                                return i && i[t]()
                            }
                        }), {
                            beans: !1,
                            getLocationOf: function() {
                                for (var t = _.read(arguments), e = this.getCurves(), i = 0, n = e.length; i < n; i++) {
                                    var r = e[i].getLocationOf(t);
                                    if (r) return r
                                }
                                return null
                            },
                            getOffsetOf: function() {
                                var t = this.getLocationOf.apply(this, arguments);
                                return t ? t.getOffset() : null
                            },
                            getLocationAt: function(t) {
                                if ("number" == typeof t) {
                                    for (var e = this.getCurves(), i = 0, n = 0, r = e.length; n < r; n++) {
                                        var s = i,
                                            a = e[n];
                                        if ((i += a.getLength()) > t) return a.getLocationAt(t - s)
                                    }
                                    if (e.length > 0 && t <= this.getLength()) return new N(e[e.length - 1], 1)
                                } else if (t && t.getPath && t.getPath() === this) return t;
                                return null
                            },
                            getOffsetsWithTangent: function() {
                                var t = _.read(arguments);
                                if (t.isZero()) return [];
                                for (var e = [], i = 0, n = this.getCurves(), r = 0, s = n.length; r < s; r++) {
                                    for (var a = n[r], o = a.getTimesWithTangent(t), h = 0, l = o.length; h < l; h++) {
                                        var c = i + a.getOffsetAtTime(o[h]);
                                        e.indexOf(c) < 0 && e.push(c)
                                    }
                                    i += a.length
                                }
                                return e
                            }
                        }), new function() {
                            function t(t, e, i) {
                                var n, r, s, a, o, h, l, c, u = e._segments,
                                    d = u.length,
                                    p = new Array(6),
                                    f = !0;

                                function g(e) {
                                    if (i) e._transformCoordinates(i, p), n = p[0], r = p[1];
                                    else {
                                        var u = e._point;
                                        n = u._x, r = u._y
                                    }
                                    if (f) t.moveTo(n, r), f = !1;
                                    else {
                                        if (i) o = p[2], h = p[3];
                                        else {
                                            var d = e._handleIn;
                                            o = n + d._x, h = r + d._y
                                        }
                                        o === n && h === r && l === s && c === a ? t.lineTo(n, r) : t.bezierCurveTo(l, c, o, h, n, r)
                                    }
                                    if (s = n, a = r, i) l = p[4], c = p[5];
                                    else {
                                        d = e._handleOut;
                                        l = s + d._x, c = a + d._y
                                    }
                                }
                                for (var m = 0; m < d; m++) g(u[m]);
                                e._closed && d > 0 && g(u[0])
                            }
                            return {
                                _draw: function(e, i, n, r) {
                                    var s = i.dontStart,
                                        a = i.dontFinish || i.clip,
                                        o = this.getStyle(),
                                        h = o.hasFill(),
                                        l = o.hasStroke(),
                                        c = o.getDashArray(),
                                        u = !dt.support.nativeDash && l && c && c.length;

                                    function d(t) {
                                        return c[(t % u + u) % u]
                                    }
                                    if (s || e.beginPath(), (h || l && !u || a) && (t(e, this, r), this._closed && e.closePath()), !a && (h || l) && (this._setStyles(e, i, n), h && (e.fill(o.getFillRule()), e.shadowColor = "rgba(0,0,0,0)"), l)) {
                                        if (u) {
                                            s || e.beginPath();
                                            for (var p, f = new q(this, .25, 32, !1, r), g = f.length, m = -o.getDashOffset(), v = 0; m > 0;) m -= d(v--) + d(v--);
                                            for (; m < g;) p = m + d(v++), (m > 0 || p > 0) && f.drawPart(e, Math.max(m, 0), Math.max(p, 0)), m = p + d(v++)
                                        }
                                        e.stroke()
                                    }
                                },
                                _drawSelected: function(e, i) {
                                    e.beginPath(), t(e, this, i), e.stroke(),
                                        function(t, e, i, n) {
                                            if (!(n <= 0))
                                                for (var r, s, a = n / 2, o = n - 2, h = a - 1, l = new Array(6), c = 0, u = e.length; c < u; c++) {
                                                    var d = e[c],
                                                        p = d._selection;
                                                    if (d._transformCoordinates(i, l), r = l[0], s = l[1], 2 & p && g(2), 4 & p && g(4), t.fillRect(r - a, s - a, n, n), o > 0 && !(1 & p)) {
                                                        var f = t.fillStyle;
                                                        t.fillStyle = "#ffffff", t.fillRect(r - h, s - h, o, o), t.fillStyle = f
                                                    }
                                                }

                                            function g(e) {
                                                var i = l[e],
                                                    n = l[e + 1];
                                                r == i && s == n || (t.beginPath(), t.moveTo(r, s), t.lineTo(i, n), t.stroke(), t.beginPath(), t.arc(i, n, a, 0, 2 * Math.PI, !0), t.fill())
                                            }
                                        }(e, this._segments, i, dt.settings.handleSize)
                                }
                            }
                        }, new function() {
                            function t(t) {
                                var e = t._segments;
                                if (!e.length) throw new Error("Use a moveTo() command first");
                                return e[e.length - 1]
                            }
                            return {
                                moveTo: function() {
                                    var t = this._segments;
                                    1 === t.length && this.removeSegment(0), t.length || this._add([new B(_.read(arguments))])
                                },
                                moveBy: function() {
                                    throw new Error("moveBy() is unsupported on Path items.")
                                },
                                lineTo: function() {
                                    this._add([new B(_.read(arguments))])
                                },
                                cubicCurveTo: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = _.read(e),
                                        s = t(this);
                                    s.setHandleOut(i.subtract(s._point)), this._add([new B(r, n.subtract(r))])
                                },
                                quadraticCurveTo: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = t(this)._point;
                                    this.cubicCurveTo(i.add(r.subtract(i).multiply(1 / 3)), i.add(n.subtract(i).multiply(1 / 3)), n)
                                },
                                curveTo: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = c.pick(c.read(e), .5),
                                        s = 1 - r,
                                        a = t(this)._point,
                                        o = i.subtract(a.multiply(s * s)).subtract(n.multiply(r * r)).divide(2 * r * s);
                                    if (o.isNaN()) throw new Error("Cannot put a curve through points with parameter = " + r);
                                    this.quadraticCurveTo(o, n)
                                },
                                arcTo: function() {
                                    var e, i, n, r, s = arguments,
                                        a = Math.abs,
                                        o = Math.sqrt,
                                        h = t(this),
                                        l = h._point,
                                        u = _.read(s),
                                        d = c.peek(s);
                                    if ("boolean" == typeof(y = c.pick(d, !0))) var p = (w = l.add(u).divide(2)).add(w.subtract(l).rotate(y ? -90 : 90));
                                    else if (c.remain(s) <= 2) p = u, u = _.read(s);
                                    else if (!l.equals(u)) {
                                        var f = x.read(s),
                                            g = m.isZero;
                                        if (g(f.width) || g(f.height)) return this.lineTo(u);
                                        var v = c.read(s),
                                            y = !!c.read(s),
                                            b = !!c.read(s),
                                            w = l.add(u).divide(2),
                                            S = (G = l.subtract(w).rotate(-v)).x,
                                            A = G.y,
                                            P = a(f.width),
                                            M = a(f.height),
                                            T = P * P,
                                            E = M * M,
                                            I = S * S,
                                            O = A * A,
                                            L = o(I / T + O / E);
                                        if (L > 1 && (T = (P *= L) * P, E = (M *= L) * M), a(L = (T * E - T * O - E * I) / (T * O + E * I)) < 1e-12 && (L = 0), L < 0) throw new Error("Cannot create an arc with the given arguments");
                                        e = new _(P * A / M, -M * S / P).multiply((b === y ? -1 : 1) * o(L)).rotate(v).add(w), i = (n = (r = (new C).translate(e).rotate(v).scale(P, M))._inverseTransform(l)).getDirectedAngle(r._inverseTransform(u)), !y && i > 0 ? i -= 360 : y && i < 0 && (i += 360)
                                    }
                                    if (p) {
                                        var D = new k(l.add(p).divide(2), p.subtract(l).rotate(90), !0),
                                            R = new k(p.add(u).divide(2), u.subtract(p).rotate(90), !0),
                                            z = new k(l, u),
                                            N = z.getSide(p);
                                        if (!(e = D.intersect(R, !0))) {
                                            if (!N) return this.lineTo(u);
                                            throw new Error("Cannot create an arc with the given arguments")
                                        }
                                        i = (n = l.subtract(e)).getDirectedAngle(u.subtract(e));
                                        var V = z.getSide(e, !0);
                                        0 === V ? i = N * a(i) : N === V && (i += i < 0 ? 360 : -360)
                                    }
                                    if (i) {
                                        for (var F = 1e-7, j = a(i), q = j >= 360 ? 4 : Math.ceil((j - F) / 90), H = i / q, W = H * Math.PI / 360, U = 4 / 3 * Math.sin(W) / (1 + Math.cos(W)), Y = [], X = 0; X <= q; X++) {
                                            var G = u,
                                                Z = null;
                                            if (X < q && (Z = n.rotate(90).multiply(U), r ? (G = r._transformPoint(n), Z = r._transformPoint(n.add(Z)).subtract(G)) : G = e.add(n)), X) {
                                                var Q = n.rotate(-90).multiply(U);
                                                r && (Q = r._transformPoint(n.add(Q)).subtract(G)), Y.push(new B(G, Q, Z))
                                            } else h.setHandleOut(Z);
                                            n = n.rotate(H)
                                        }
                                        this._add(Y)
                                    }
                                },
                                lineBy: function() {
                                    var e = _.read(arguments),
                                        i = t(this)._point;
                                    this.lineTo(i.add(e))
                                },
                                curveBy: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = c.read(e),
                                        s = t(this)._point;
                                    this.curveTo(s.add(i), s.add(n), r)
                                },
                                cubicCurveBy: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = _.read(e),
                                        s = t(this)._point;
                                    this.cubicCurveTo(s.add(i), s.add(n), s.add(r))
                                },
                                quadraticCurveBy: function() {
                                    var e = arguments,
                                        i = _.read(e),
                                        n = _.read(e),
                                        r = t(this)._point;
                                    this.quadraticCurveTo(r.add(i), r.add(n))
                                },
                                arcBy: function() {
                                    var e = arguments,
                                        i = t(this)._point,
                                        n = i.add(_.read(e)),
                                        r = c.pick(c.peek(e), !0);
                                    "boolean" == typeof r ? this.arcTo(n, r) : this.arcTo(n, i.add(_.read(e)))
                                },
                                closePath: function(t) {
                                    this.setClosed(!0), this.join(this, t)
                                }
                            }
                        }, {
                            _getBounds: function(t, e) {
                                var i = e.handle ? "getHandleBounds" : e.stroke ? "getStrokeBounds" : "getBounds";
                                return F[i](this._segments, this._closed, this, t, e)
                            },
                            statics: {
                                getBounds: function(t, e, i, n, r, s) {
                                    var a = t[0];
                                    if (!a) return new w;
                                    var o = new Array(6),
                                        h = a._transformCoordinates(n, new Array(6)),
                                        l = h.slice(0, 2),
                                        c = l.slice(),
                                        u = new Array(2);

                                    function d(t) {
                                        t._transformCoordinates(n, o);
                                        for (var e = 0; e < 2; e++) z._addBounds(h[e], h[e + 4], o[e + 2], o[e], e, s ? s[e] : 0, l, c, u);
                                        var i = h;
                                        h = o, o = i
                                    }
                                    for (var p = 1, f = t.length; p < f; p++) d(t[p]);
                                    return e && d(a), new w(l[0], l[1], c[0] - l[0], c[1] - l[1])
                                },
                                getStrokeBounds: function(t, e, i, n, r) {
                                    var s = i.getStyle(),
                                        a = s.hasStroke(),
                                        o = s.getStrokeWidth(),
                                        h = a && i._getStrokeMatrix(n, r),
                                        l = a && F._getStrokePadding(o, h),
                                        c = F.getBounds(t, e, i, n, r, l);
                                    if (!a) return c;
                                    var u = o / 2,
                                        d = s.getStrokeJoin(),
                                        p = s.getStrokeCap(),
                                        f = s.getMiterLimit(),
                                        g = new w(new x(l));

                                    function m(t) {
                                        c = c.include(t)
                                    }

                                    function v(t) {
                                        c = c.unite(g.setCenter(t._point.transform(n)))
                                    }

                                    function _(t, e) {
                                        "round" === e || t.isSmooth() ? v(t) : F._addBevelJoin(t, e, u, f, n, h, m)
                                    }

                                    function y(t, e) {
                                        "round" === e ? v(t) : F._addSquareCap(t, e, u, n, h, m)
                                    }
                                    var b = t.length - (e ? 0 : 1);
                                    if (b > 0) {
                                        for (var S = 1; S < b; S++) _(t[S], d);
                                        e ? _(t[0], d) : (y(t[0], p), y(t[t.length - 1], p))
                                    }
                                    return c
                                },
                                _getStrokePadding: function(t, e) {
                                    if (!e) return [t, t];
                                    var i = new _(t, 0).transform(e),
                                        n = new _(0, t).transform(e),
                                        r = i.getAngleInRadians(),
                                        s = i.getLength(),
                                        a = n.getLength(),
                                        o = Math.sin(r),
                                        h = Math.cos(r),
                                        l = Math.tan(r),
                                        c = Math.atan2(a * l, s),
                                        u = Math.atan2(a, l * s);
                                    return [Math.abs(s * Math.cos(c) * h + a * Math.sin(c) * o), Math.abs(a * Math.sin(u) * h + s * Math.cos(u) * o)]
                                },
                                _addBevelJoin: function(t, e, i, n, r, s, a, o) {
                                    var h = t.getCurve(),
                                        l = h.getPrevious(),
                                        c = h.getPoint1().transform(r),
                                        u = l.getNormalAtTime(1).multiply(i).transform(s),
                                        d = h.getNormalAtTime(0).multiply(i).transform(s),
                                        p = u.getDirectedAngle(d);
                                    if ((p < 0 || p >= 180) && (u = u.negate(), d = d.negate()), o && a(c), a(c.add(u)), "miter" === e) {
                                        var f = new k(c.add(u), new _(-u.y, u.x), !0).intersect(new k(c.add(d), new _(-d.y, d.x), !0), !0);
                                        f && c.getDistance(f) <= n * i && a(f)
                                    }
                                    a(c.add(d))
                                },
                                _addSquareCap: function(t, e, i, n, r, s, a) {
                                    var o = t._point.transform(n),
                                        h = t.getLocation(),
                                        l = h.getNormal().multiply(0 === h.getTime() ? i : -i).transform(r);
                                    "square" === e && (a && (s(o.subtract(l)), s(o.add(l))), o = o.add(l.rotate(-90))), s(o.add(l)), s(o.subtract(l))
                                },
                                getHandleBounds: function(t, e, i, n, r) {
                                    var s, a, o = i.getStyle();
                                    if (r.stroke && o.hasStroke()) {
                                        var h = i._getStrokeMatrix(n, r),
                                            l = o.getStrokeWidth() / 2,
                                            c = l;
                                        "miter" === o.getStrokeJoin() && (c = l * o.getMiterLimit()), "square" === o.getStrokeCap() && (c = Math.max(c, l * Math.SQRT2)), s = F._getStrokePadding(l, h), a = F._getStrokePadding(c, h)
                                    }
                                    for (var u = new Array(6), d = 1 / 0, p = -d, f = d, g = p, m = 0, v = t.length; m < v; m++) {
                                        t[m]._transformCoordinates(n, u);
                                        for (var _ = 0; _ < 6; _ += 2) {
                                            var y = _ ? s : a,
                                                x = y ? y[0] : 0,
                                                b = y ? y[1] : 0,
                                                S = u[_],
                                                C = u[_ + 1],
                                                k = S - x,
                                                A = S + x,
                                                P = C - b,
                                                M = C + b;
                                            k < d && (d = k), A > p && (p = A), P < f && (f = P), M > g && (g = M)
                                        }
                                    }
                                    return new w(d, f, p - d, g - f)
                                }
                            }
                        });
                    F.inject({
                        statics: new function() {
                            var t = .5522847498307936,
                                e = [new B([-1, 0], [0, t], [0, -t]), new B([0, -1], [-t, 0], [t, 0]), new B([1, 0], [0, -t], [0, t]), new B([0, 1], [t, 0], [-t, 0])];

                            function i(t, e, i) {
                                var n = c.getNamed(i),
                                    r = new F(n && 0 == n.insert && P.NO_INSERT);
                                return r._add(t), r._closed = e, r.set(n, {
                                    insert: !0
                                })
                            }

                            function n(t, n, r) {
                                for (var s = new Array(4), a = 0; a < 4; a++) {
                                    var o = e[a];
                                    s[a] = new B(o._point.multiply(n).add(t), o._handleIn.multiply(n), o._handleOut.multiply(n))
                                }
                                return i(s, !0, r)
                            }
                            return {
                                Line: function() {
                                    var t = arguments;
                                    return i([new B(_.readNamed(t, "from")), new B(_.readNamed(t, "to"))], !1, t)
                                },
                                Circle: function() {
                                    var t = arguments,
                                        e = _.readNamed(t, "center"),
                                        i = c.readNamed(t, "radius");
                                    return n(e, new x(i), t)
                                },
                                Rectangle: function() {
                                    var e, n = arguments,
                                        r = w.readNamed(n, "rectangle"),
                                        s = x.readNamed(n, "radius", 0, {
                                            readNull: !0
                                        }),
                                        a = r.getBottomLeft(!0),
                                        o = r.getTopLeft(!0),
                                        h = r.getTopRight(!0),
                                        l = r.getBottomRight(!0);
                                    if (!s || s.isZero()) e = [new B(a), new B(o), new B(h), new B(l)];
                                    else {
                                        var c = (s = x.min(s, r.getSize(!0).divide(2))).width,
                                            u = s.height,
                                            d = c * t,
                                            p = u * t;
                                        e = [new B(a.add(c, 0), null, [-d, 0]), new B(a.subtract(0, u), [0, p]), new B(o.add(0, u), null, [0, -p]), new B(o.add(c, 0), [-d, 0], null), new B(h.subtract(c, 0), null, [d, 0]), new B(h.add(0, u), [0, -p], null), new B(l.subtract(0, u), null, [0, p]), new B(l.subtract(c, 0), [d, 0])]
                                    }
                                    return i(e, !0, n)
                                },
                                RoundRectangle: "#Rectangle",
                                Ellipse: function() {
                                    var t = arguments,
                                        e = E._readEllipse(t);
                                    return n(e.center, e.radius, t)
                                },
                                Oval: "#Ellipse",
                                Arc: function() {
                                    var t = arguments,
                                        e = _.readNamed(t, "from"),
                                        i = _.readNamed(t, "through"),
                                        n = _.readNamed(t, "to"),
                                        r = c.getNamed(t),
                                        s = new F(r && 0 == r.insert && P.NO_INSERT);
                                    return s.moveTo(e), s.arcTo(i, n), s.set(r)
                                },
                                RegularPolygon: function() {
                                    for (var t = arguments, e = _.readNamed(t, "center"), n = c.readNamed(t, "sides"), r = c.readNamed(t, "radius"), s = 360 / n, a = n % 3 == 0, o = new _(0, a ? -r : r), h = a ? -1 : .5, l = new Array(n), u = 0; u < n; u++) l[u] = new B(e.add(o.rotate((u + h) * s)));
                                    return i(l, !0, t)
                                },
                                Star: function() {
                                    for (var t = arguments, e = _.readNamed(t, "center"), n = 2 * c.readNamed(t, "points"), r = c.readNamed(t, "radius1"), s = c.readNamed(t, "radius2"), a = 360 / n, o = new _(0, -1), h = new Array(n), l = 0; l < n; l++) h[l] = new B(e.add(o.rotate(a * l).multiply(l % 2 ? s : r)));
                                    return i(h, !0, t)
                                }
                            }
                        }
                    });
                    var j = V.extend({
                        _class: "CompoundPath",
                        _serializeFields: {
                            children: []
                        },
                        beans: !0,
                        initialize: function(t) {
                            this._children = [], this._namedChildren = {}, this._initialize(t) || ("string" == typeof t ? this.setPathData(t) : this.addChildren(Array.isArray(t) ? t : arguments))
                        },
                        insertChildren: function t(e, i) {
                            var n = i,
                                r = n[0];
                            r && "number" == typeof r[0] && (n = [n]);
                            for (var s = i.length - 1; s >= 0; s--) {
                                var a = n[s];
                                n !== i || a instanceof F || (n = c.slice(n)), Array.isArray(a) ? n[s] = new F({
                                    segments: a,
                                    insert: !1
                                }) : a instanceof j && (n.splice.apply(n, [s, 1].concat(a.removeChildren())), a.remove())
                            }
                            return t.base.call(this, e, n)
                        },
                        reduce: function t(e) {
                            for (var i = this._children, n = i.length - 1; n >= 0; n--) {
                                var r;
                                (r = i[n].reduce(e)).isEmpty() && r.remove()
                            }
                            return i.length ? t.base.call(this) : ((r = new F(P.NO_INSERT)).copyAttributes(this), r.insertAbove(this), this.remove(), r)
                        },
                        isClosed: function() {
                            for (var t = this._children, e = 0, i = t.length; e < i; e++)
                                if (!t[e]._closed) return !1;
                            return !0
                        },
                        setClosed: function(t) {
                            for (var e = this._children, i = 0, n = e.length; i < n; i++) e[i].setClosed(t)
                        },
                        getFirstSegment: function() {
                            var t = this.getFirstChild();
                            return t && t.getFirstSegment()
                        },
                        getLastSegment: function() {
                            var t = this.getLastChild();
                            return t && t.getLastSegment()
                        },
                        getCurves: function() {
                            for (var t = this._children, e = [], i = 0, n = t.length; i < n; i++) c.push(e, t[i].getCurves());
                            return e
                        },
                        getFirstCurve: function() {
                            var t = this.getFirstChild();
                            return t && t.getFirstCurve()
                        },
                        getLastCurve: function() {
                            var t = this.getLastChild();
                            return t && t.getLastCurve()
                        },
                        getArea: function() {
                            for (var t = this._children, e = 0, i = 0, n = t.length; i < n; i++) e += t[i].getArea();
                            return e
                        },
                        getLength: function() {
                            for (var t = this._children, e = 0, i = 0, n = t.length; i < n; i++) e += t[i].getLength();
                            return e
                        },
                        getPathData: function(t, e) {
                            for (var i = this._children, n = [], r = 0, s = i.length; r < s; r++) {
                                var a = i[r],
                                    o = a._matrix;
                                n.push(a.getPathData(t && !o.isIdentity() ? t.appended(o) : t, e))
                            }
                            return n.join("")
                        },
                        _hitTestChildren: function t(e, i, n) {
                            return t.base.call(this, e, i.class === F || "path" === i.type ? i : c.set({}, i, {
                                fill: !1
                            }), n)
                        },
                        _draw: function(t, e, i, n) {
                            var r = this._children;
                            if (r.length) {
                                e = e.extend({
                                    dontStart: !0,
                                    dontFinish: !0
                                }), t.beginPath();
                                for (var s = 0, a = r.length; s < a; s++) r[s].draw(t, e, n);
                                if (!e.clip) {
                                    this._setStyles(t, e, i);
                                    var o = this._style;
                                    o.hasFill() && (t.fill(o.getFillRule()), t.shadowColor = "rgba(0,0,0,0)"), o.hasStroke() && t.stroke()
                                }
                            }
                        },
                        _drawSelected: function(t, e, i) {
                            for (var n = this._children, r = 0, s = n.length; r < s; r++) {
                                var a = n[r],
                                    o = a._matrix;
                                i[a._id] || a._drawSelected(t, o.isIdentity() ? e : e.appended(o))
                            }
                        }
                    }, new function() {
                        function t(t, e) {
                            var i = t._children;
                            if (e && !i.length) throw new Error("Use a moveTo() command first");
                            return i[i.length - 1]
                        }
                        return c.each(["lineTo", "cubicCurveTo", "quadraticCurveTo", "curveTo", "arcTo", "lineBy", "cubicCurveBy", "quadraticCurveBy", "curveBy", "arcBy"], (function(e) {
                            this[e] = function() {
                                var i = t(this, !0);
                                i[e].apply(i, arguments)
                            }
                        }), {
                            moveTo: function() {
                                var e = t(this),
                                    i = e && e.isEmpty() ? e : new F(P.NO_INSERT);
                                i !== e && this.addChild(i), i.moveTo.apply(i, arguments)
                            },
                            moveBy: function() {
                                var e = t(this, !0),
                                    i = e && e.getLastSegment(),
                                    n = _.read(arguments);
                                this.moveTo(i ? n.add(i._point) : n)
                            },
                            closePath: function(e) {
                                t(this, !0).closePath(e)
                            }
                        })
                    }, c.each(["reverse", "flatten", "simplify", "smooth"], (function(t) {
                        this[t] = function(e) {
                            for (var i, n = this._children, r = 0, s = n.length; r < s; r++) i = n[r][t](e) || i;
                            return i
                        }
                    }), {}));
                    V.inject(new function() {
                        var t = Math.min,
                            e = Math.max,
                            i = Math.abs,
                            n = {
                                unite: {
                                    1: !0,
                                    2: !0
                                },
                                intersect: {
                                    2: !0
                                },
                                subtract: {
                                    1: !0
                                },
                                exclude: {
                                    1: !0,
                                    "-1": !0
                                }
                            };

                        function r(t) {
                            return t._children || [t]
                        }

                        function s(t, e) {
                            var i = t.clone(!1).reduce({
                                simplify: !0
                            }).transform(null, !0, !0);
                            if (e) {
                                for (var n = r(i), s = 0, a = n.length; s < a; s++) {
                                    (t = n[s])._closed || t.isEmpty() || (t.closePath(1e-12), t.getFirstSegment().setHandleIn(0, 0), t.getLastSegment().setHandleOut(0, 0))
                                }
                                i = i.resolveCrossings().reorient("nonzero" === i.getFillRule(), !0)
                            }
                            return i
                        }

                        function a(t, e, i, n, r) {
                            var s = new j(P.NO_INSERT);
                            return s.addChildren(t, !0), s = s.reduce({
                                simplify: e
                            }), r && 0 == r.insert || s.insertAbove(n && i.isSibling(n) && i.getIndex() < n.getIndex() ? n : i), s.copyAttributes(i, !0), s
                        }

                        function h(t) {
                            return t.hasOverlap() || t.isCrossing()
                        }

                        function l(t, e, i, o) {
                            if (o && (0 == o.trace || o.stroke) && /^(subtract|intersect)$/.test(i)) return u(t, e, i);
                            var l = s(t, !0),
                                d = e && t !== e && s(e, !0),
                                p = n[i];
                            p[i] = !0, d && (p.subtract || p.exclude) ^ d.isClockwise() ^ l.isClockwise() && d.reverse();
                            var m, _ = v(N.expand(l.getIntersections(d, h))),
                                b = r(l),
                                w = d && r(d),
                                S = [],
                                C = [];

                            function k(t) {
                                for (var e = 0, i = t.length; e < i; e++) {
                                    var n = t[e];
                                    c.push(S, n._segments), c.push(C, n.getCurves()), n._overlapsOnly = !0
                                }
                            }

                            function A(t) {
                                for (var e = [], i = 0, n = t && t.length; i < n; i++) e.push(C[t[i]]);
                                return e
                            }
                            if (_.length) {
                                k(b), w && k(w);
                                for (var P = new Array(C.length), M = 0, T = C.length; M < T; M++) P[M] = C[M].getValues();
                                var E = f.findCurveBoundsCollisions(P, P, 0, !0),
                                    I = {};
                                for (M = 0; M < C.length; M++) {
                                    var O = C[M],
                                        L = O._path._id;
                                    (I[L] = I[L] || {})[O.getIndex()] = {
                                        hor: A(E[M].hor),
                                        ver: A(E[M].ver)
                                    }
                                }
                                for (M = 0, T = _.length; M < T; M++) y(_[M]._segment, l, d, I, p);
                                for (M = 0, T = S.length; M < T; M++) {
                                    var D = S[M],
                                        B = D._intersection;
                                    D._winding || y(D, l, d, I, p), B && B._overlap || (D._path._overlapsOnly = !1)
                                }
                                m = x(S, p)
                            } else m = g(w ? b.concat(w) : b.slice(), (function(t) {
                                return !!p[t]
                            }));
                            return a(m, !0, t, e, o)
                        }

                        function u(t, e, i) {
                            var n = s(t),
                                r = s(e),
                                o = n.getIntersections(r, h),
                                l = "subtract" === i,
                                c = "divide" === i,
                                u = {},
                                d = [];

                            function p(t) {
                                if (!u[t._id] && (c || r.contains(t.getPointAt(t.getLength() / 2)) ^ l)) return d.unshift(t), u[t._id] = !0
                            }
                            for (var f = o.length - 1; f >= 0; f--) {
                                var g = o[f].split();
                                g && (p(g) && g.getFirstSegment().setHandleIn(0, 0), n.getLastSegment().setHandleOut(0, 0))
                            }
                            return p(n), a(d, !1, t, e)
                        }

                        function d(t, e) {
                            for (var i = t; i;) {
                                if (i === e) return;
                                i = i._previous
                            }
                            for (; t._next && t._next !== e;) t = t._next;
                            if (!t._next) {
                                for (; e._previous;) e = e._previous;
                                t._next = e, e._previous = t
                            }
                        }

                        function p(t) {
                            for (var e = t.length - 1; e >= 0; e--) t[e].clearHandles()
                        }

                        function g(t, e, n) {
                            var r = t && t.length;
                            if (r) {
                                var s = c.each(t, (function(t, e) {
                                        this[t._id] = {
                                            container: null,
                                            winding: t.isClockwise() ? 1 : -1,
                                            index: e
                                        }
                                    }), {}),
                                    a = t.slice().sort((function(t, e) {
                                        return i(e.getArea()) - i(t.getArea())
                                    })),
                                    o = a[0],
                                    h = f.findItemBoundsCollisions(a, null, m.GEOMETRIC_EPSILON);
                                null == n && (n = o.isClockwise());
                                for (var l = 0; l < r; l++) {
                                    var u = a[l],
                                        d = s[u._id],
                                        p = 0,
                                        g = h[l];
                                    if (g)
                                        for (var v = null, _ = g.length - 1; _ >= 0; _--)
                                            if (g[_] < l) {
                                                v = v || u.getInteriorPoint();
                                                var y = a[g[_]];
                                                if (y.contains(v)) {
                                                    var x = s[y._id];
                                                    p = x.winding, d.winding += p, d.container = x.exclude ? x.container : y;
                                                    break
                                                }
                                            }
                                    if (e(d.winding) === e(p)) d.exclude = !0, t[d.index] = null;
                                    else {
                                        var b = d.container;
                                        u.setClockwise(b ? !b.isClockwise() : n)
                                    }
                                }
                            }
                            return t
                        }

                        function v(t, e, i) {
                            var n, r, s, a = e && [],
                                o = 1e-8,
                                h = !1,
                                l = i || [],
                                c = i && {};

                            function u(t) {
                                return t._path._id + "." + t._segment1._index
                            }
                            for (var f = (i && i.length) - 1; f >= 0; f--) {
                                (g = i[f])._path && (c[u(g)] = !0)
                            }
                            for (f = t.length - 1; f >= 0; f--) {
                                var g, m, v = t[f],
                                    _ = v._time,
                                    y = _,
                                    x = e && !e(v);
                                if ((g = v._curve) && (g !== r ? (h = !g.hasHandles() || c && c[u(g)], n = [], s = null, r = g) : s >= o && (_ /= s)), x) n && n.push(v);
                                else {
                                    if (e && a.unshift(v), s = y, _ < o) m = g._segment1;
                                    else if (_ > .99999999) m = g._segment2;
                                    else {
                                        var b = g.divideAtTime(_, !0);
                                        h && l.push(g, b), m = b._segment1;
                                        for (var w = n.length - 1; w >= 0; w--) {
                                            var S = n[w];
                                            S._time = (S._time - _) / (1 - _)
                                        }
                                    }
                                    v._setSegment(m);
                                    var C = m._intersection,
                                        k = v._intersection;
                                    if (C) {
                                        d(C, k);
                                        for (var A = C; A;) d(A._intersection, C), A = A._next
                                    } else m._intersection = k
                                }
                            }
                            return i || p(l), a || t
                        }

                        function _(n, r, s, a, o) {
                            var h, l, c = Array.isArray(r) ? r : r[s ? "hor" : "ver"],
                                u = s ? 1 : 0,
                                d = 1 ^ u,
                                p = [n.x, n.y],
                                f = p[u],
                                g = p[d],
                                m = 1e-6,
                                v = f - 1e-9,
                                y = f + 1e-9,
                                x = 0,
                                b = 0,
                                w = 0,
                                S = 0,
                                C = !1,
                                k = !1,
                                A = 1,
                                P = [];

                            function M(i) {
                                var l = i[d + 0],
                                    c = i[d + 6];
                                if (!(g < t(l, c) || g > e(l, c))) {
                                    var p = i[u + 0],
                                        x = i[u + 2],
                                        b = i[u + 4],
                                        k = i[u + 6];
                                    if (l !== c) {
                                        var M = g === l ? 0 : g === c || v > e(p, x, b, k) || y < t(p, x, b, k) ? 1 : z.solveCubic(i, d, g, P, 0, 1) > 0 ? P[0] : 1,
                                            T = 0 === M ? p : 1 === M ? k : z.getPoint(i, M)[s ? "y" : "x"],
                                            E = l > c ? 1 : -1,
                                            I = h[d] > h[d + 6] ? 1 : -1,
                                            O = h[u + 6];
                                        return g !== l ? (T < v ? w += E : T > y ? S += E : C = !0, T > f - m && T < f + m && (A /= 2)) : (E !== I ? p < v ? w += E : p > y && (S += E) : p != O && (O < y && T > y ? (S += E, C = !0) : O > v && T < v && (w += E, C = !0)), A /= 4), h = i, !o && T > v && T < y && 0 === z.getTangent(i, M)[s ? "x" : "y"] && _(n, r, !s, a, !0)
                                    }(p < y && k > v || k < y && p > v) && (C = !0)
                                }
                            }

                            function T(i) {
                                var n = i[d + 0],
                                    r = i[d + 2],
                                    a = i[d + 4],
                                    o = i[d + 6];
                                if (g <= e(n, r, a, o) && g >= t(n, r, a, o))
                                    for (var h, l = i[u + 0], c = i[u + 2], p = i[u + 4], f = i[u + 6], m = v > e(l, c, p, f) || y < t(l, c, p, f) ? [i] : z.getMonoCurves(i, s), _ = 0, x = m.length; _ < x; _++)
                                        if (h = M(m[_])) return h
                            }
                            for (var E = 0, I = c.length; E < I; E++) {
                                var O, L = c[E],
                                    D = L._path,
                                    B = L.getValues();
                                if (!(E && c[E - 1]._path === D || (h = null, D._closed || (l = z.getValues(D.getLastCurve().getSegment2(), L.getSegment1(), null, !a))[d] !== l[d + 6] && (h = l), h))) {
                                    h = B;
                                    for (var R = D.getLastCurve(); R && R !== L;) {
                                        var N = R.getValues();
                                        if (N[d] !== N[d + 6]) {
                                            h = N;
                                            break
                                        }
                                        R = R.getPrevious()
                                    }
                                }
                                if (O = T(B)) return O;
                                if (E + 1 === I || c[E + 1]._path !== D) {
                                    if (l && (O = T(l))) return O;
                                    !C || w || S || (w = S = D.isClockwise(a) ^ s ? 1 : -1), x += w, b += S, w = S = 0, C && (k = !0, C = !1), l = null
                                }
                            }
                            return x = i(x), b = i(b), {
                                winding: e(x, b),
                                windingL: x,
                                windingR: b,
                                quality: A,
                                onPath: k
                            }
                        }

                        function y(t, e, n, r, s) {
                            var a = [],
                                o = t,
                                h = 0;
                            do {
                                if (y = t.getCurve()) {
                                    var l = y.getLength();
                                    a.push({
                                        segment: t,
                                        curve: y,
                                        length: l
                                    }), h += l
                                }
                                t = t.getNext()
                            } while (t && !t._intersection && t !== o);
                            for (var c = [.5, .25, .75], u = {
                                    winding: 0,
                                    quality: -1
                                }, d = 0; d < c.length && u.quality < .5; d++) {
                                l = h * c[d];
                                for (var p = 0, f = a.length; p < f; p++) {
                                    var g = a[p],
                                        v = g.length;
                                    if (l <= v) {
                                        var y, x = (y = g.curve)._path,
                                            b = x._parent,
                                            w = b instanceof j ? b : x,
                                            S = m.clamp(y.getTimeAt(l), .001, .999),
                                            C = y.getPointAtTime(S),
                                            k = i(y.getTangentAtTime(S).y) < Math.SQRT1_2,
                                            A = null;
                                        if (s.subtract && n) {
                                            var P = (w === e ? n : e)._getWinding(C, k, !0);
                                            if (w === e && P.winding || w === n && !P.winding) {
                                                if (P.quality < 1) continue;
                                                A = {
                                                    winding: 0,
                                                    quality: 1
                                                }
                                            }
                                        }(A = A || _(C, r[x._id][y.getIndex()], k, !0)).quality > u.quality && (u = A);
                                        break
                                    }
                                    l -= v
                                }
                            }
                            for (p = a.length - 1; p >= 0; p--) a[p].segment._winding = u
                        }

                        function x(t, e) {
                            var i, n = [];

                            function r(t) {
                                var i;
                                return !(!t || t._visited || e && (!e[(i = t._winding || {}).winding] || e.unite && 2 === i.winding && i.windingL && i.windingR))
                            }

                            function s(t) {
                                if (t)
                                    for (var e = 0, n = i.length; e < n; e++)
                                        if (t === i[e]) return !0;
                                return !1
                            }

                            function a(t) {
                                for (var e = t._segments, i = 0, n = e.length; i < n; i++) e[i]._visited = !0
                            }

                            function o(t, e) {
                                var n = t._intersection,
                                    a = n,
                                    o = [];

                                function h(n, a) {
                                    for (; n && n !== a;) {
                                        var h = n._segment,
                                            l = h && h._path;
                                        if (l) {
                                            var c = h.getNext() || l.getFirstSegment(),
                                                u = c._intersection;
                                            h !== t && (s(h) || s(c) || c && r(h) && (r(c) || u && r(u._segment))) && o.push(h), e && i.push(h)
                                        }
                                        n = n._next
                                    }
                                }
                                if (e && (i = [t]), n) {
                                    for (h(n); n && n._previous;) n = n._previous;
                                    h(n, a)
                                }
                                return o
                            }
                            t.sort((function(t, e) {
                                var i = t._intersection,
                                    n = e._intersection,
                                    r = !(!i || !i._overlap),
                                    s = !(!n || !n._overlap),
                                    a = t._path,
                                    o = e._path;
                                return r ^ s ? r ? 1 : -1 : !i ^ !n ? i ? 1 : -1 : a !== o ? a._id - o._id : t._index - e._index
                            }));
                            for (var h = 0, l = t.length; h < l; h++) {
                                var c, u, d, p = t[h],
                                    f = r(p),
                                    g = null,
                                    m = !1,
                                    v = !0,
                                    _ = [];
                                if (f && p._path._overlapsOnly) {
                                    var y = p._path,
                                        x = p._intersection._segment._path;
                                    y.compare(x) && (y.getArea() && n.push(y.clone(!1)), a(y), a(x), f = !1)
                                }
                                for (; f;) {
                                    var b = !g,
                                        w = o(p, b),
                                        S = w.shift(),
                                        C = !(m = !b && (s(p) || s(S))) && S;
                                    if (b && (g = new F(P.NO_INSERT), c = null), m) {
                                        (p.isFirst() || p.isLast()) && (v = p._path._closed), p._visited = !0;
                                        break
                                    }
                                    if (C && c && (_.push(c), c = null), c || (C && w.push(p), c = {
                                            start: g._segments.length,
                                            crossings: w,
                                            visited: u = [],
                                            handleIn: d
                                        }), C && (p = S), !r(p)) {
                                        g.removeSegments(c.start);
                                        for (var k = 0, A = u.length; k < A; k++) u[k]._visited = !1;
                                        u.length = 0;
                                        do {
                                            (p = c && c.crossings.shift()) && p._path || (p = null, (c = _.pop()) && (u = c.visited, d = c.handleIn))
                                        } while (c && !r(p));
                                        if (!p) break
                                    }
                                    var M = p.getNext();
                                    g.add(new B(p._point, d, M && p._handleOut)), p._visited = !0, u.push(p), p = M || p._path.getFirstSegment(), d = M && M._handleIn
                                }
                                m && (v && (g.getFirstSegment().setHandleIn(d), g.setClosed(v)), 0 !== g.getArea() && n.push(g))
                            }
                            return n
                        }
                        return {
                            _getWinding: function(t, e, i) {
                                return _(t, this.getCurves(), e, i)
                            },
                            unite: function(t, e) {
                                return l(this, t, "unite", e)
                            },
                            intersect: function(t, e) {
                                return l(this, t, "intersect", e)
                            },
                            subtract: function(t, e) {
                                return l(this, t, "subtract", e)
                            },
                            exclude: function(t, e) {
                                return l(this, t, "exclude", e)
                            },
                            divide: function(t, e) {
                                return e && (0 == e.trace || e.stroke) ? u(this, t, "divide") : a([this.subtract(t, e), this.intersect(t, e)], !0, this, t, e)
                            },
                            resolveCrossings: function() {
                                var t = this._children,
                                    e = t || [this];

                                function i(t, e) {
                                    var i = t && t._intersection;
                                    return i && i._overlap && i._path === e
                                }
                                var n = !1,
                                    r = !1,
                                    s = this.getIntersections(null, (function(t) {
                                        return t.hasOverlap() && (n = !0) || t.isCrossing() && (r = !0)
                                    })),
                                    a = n && r && [];
                                if (s = N.expand(s), n)
                                    for (var o = v(s, (function(t) {
                                            return t.hasOverlap()
                                        }), a), h = o.length - 1; h >= 0; h--) {
                                        var l = o[h],
                                            u = l._path,
                                            d = l._segment,
                                            f = d.getPrevious(),
                                            g = d.getNext();
                                        i(f, u) && i(g, u) && (d.remove(), f._handleOut._set(0, 0), g._handleIn._set(0, 0), f === d || f.getCurve().hasLength() || (g._handleIn.set(f._handleIn), f.remove()))
                                    }
                                r && (v(s, n && function(t) {
                                    var e = t.getCurve(),
                                        i = t.getSegment(),
                                        n = t._intersection,
                                        r = n._curve,
                                        s = n._segment;
                                    if (e && r && e._path && r._path) return !0;
                                    i && (i._intersection = null), s && (s._intersection = null)
                                }, a), a && p(a), e = x(c.each(e, (function(t) {
                                    c.push(this, t._segments)
                                }), [])));
                                var m, _ = e.length;
                                return _ > 1 && t ? (e !== t && this.setChildren(e), m = this) : 1 !== _ || t || (e[0] !== this && this.setSegments(e[0].removeSegments()), m = this), m || ((m = new j(P.NO_INSERT)).addChildren(e), (m = m.reduce()).copyAttributes(this), this.replaceWith(m)), m
                            },
                            reorient: function(t, e) {
                                var i = this._children;
                                return i && i.length ? this.setChildren(g(this.removeChildren(), (function(e) {
                                    return !!(t ? e : 1 & e)
                                }), e)) : e !== o && this.setClockwise(e), this
                            },
                            getInteriorPoint: function() {
                                var i = this.getBounds().getCenter(!0);
                                if (!this.contains(i)) {
                                    for (var n = this.getCurves(), r = i.y, s = [], a = [], o = 0, h = n.length; o < h; o++) {
                                        var l = n[o].getValues(),
                                            c = l[1],
                                            u = l[3],
                                            d = l[5],
                                            p = l[7];
                                        if (r >= t(c, u, d, p) && r <= e(c, u, d, p))
                                            for (var f = z.getMonoCurves(l), g = 0, m = f.length; g < m; g++) {
                                                var v = f[g],
                                                    _ = v[1],
                                                    y = v[7];
                                                if (_ !== y && (r >= _ && r <= y || r >= y && r <= _)) {
                                                    var x = r === _ ? v[0] : r === y ? v[6] : 1 === z.solveCubic(v, 1, r, a, 0, 1) ? z.getPoint(v, a[0]).x : (v[0] + v[6]) / 2;
                                                    s.push(x)
                                                }
                                            }
                                    }
                                    s.length > 1 && (s.sort((function(t, e) {
                                        return t - e
                                    })), i.x = (s[0] + s[1]) / 2)
                                }
                                return i
                            }
                        }
                    });
                    var q = c.extend({
                            _class: "PathFlattener",
                            initialize: function(t, e, i, n, r) {
                                var s, a = [],
                                    o = [],
                                    h = 0,
                                    l = 1 / (i || 32),
                                    c = t._segments,
                                    u = c[0];

                                function d(t, e) {
                                    var i = z.getValues(t, e, r);
                                    a.push(i), p(i, t._index, 0, 1)
                                }

                                function p(t, i, r, s) {
                                    if (!(s - r > l) || n && z.isStraight(t) || z.isFlatEnough(t, e || .25)) {
                                        var a = t[6] - t[0],
                                            c = t[7] - t[1],
                                            u = Math.sqrt(a * a + c * c);
                                        u > 0 && (h += u, o.push({
                                            offset: h,
                                            curve: t,
                                            index: i,
                                            time: s
                                        }))
                                    } else {
                                        var d = z.subdivide(t, .5),
                                            f = (r + s) / 2;
                                        p(d[0], i, r, f), p(d[1], i, f, s)
                                    }
                                }
                                for (var f = 1, g = c.length; f < g; f++) d(u, s = c[f]), u = s;
                                t._closed && d(s || u, c[0]), this.curves = a, this.parts = o, this.length = h, this.index = 0
                            },
                            _get: function(t) {
                                for (var e, i = this.parts, n = i.length, r = this.index; e = r, r && !(i[--r].offset < t););
                                for (; e < n; e++) {
                                    var s = i[e];
                                    if (s.offset >= t) {
                                        this.index = e;
                                        var a = i[e - 1],
                                            o = a && a.index === s.index ? a.time : 0,
                                            h = a ? a.offset : 0;
                                        return {
                                            index: s.index,
                                            time: o + (s.time - o) * (t - h) / (s.offset - h)
                                        }
                                    }
                                }
                                return {
                                    index: i[n - 1].index,
                                    time: 1
                                }
                            },
                            drawPart: function(t, e, i) {
                                for (var n = this._get(e), r = this._get(i), s = n.index, a = r.index; s <= a; s++) {
                                    var o = z.getPart(this.curves[s], s === n.index ? n.time : 0, s === r.index ? r.time : 1);
                                    s === n.index && t.moveTo(o[0], o[1]), t.bezierCurveTo.apply(t, o.slice(2))
                                }
                            }
                        }, c.each(z._evaluateMethods, (function(t) {
                            this[t + "At"] = function(e) {
                                var i = this._get(e);
                                return z[t](this.curves[i.index], i.time)
                            }
                        }), {})),
                        H = c.extend({
                            initialize: function(t) {
                                for (var e, i = this.points = [], n = t._segments, r = t._closed, s = 0, a = n.length; s < a; s++) {
                                    var o = n[s].point;
                                    e && e.equals(o) || i.push(e = o.clone())
                                }
                                r && (i.unshift(i[i.length - 1]), i.push(i[1])), this.closed = r
                            },
                            fit: function(t) {
                                var e = this.points,
                                    i = e.length,
                                    n = null;
                                return i > 0 && (n = [new B(e[0])], i > 1 && (this.fitCubic(n, t, 0, i - 1, e[1].subtract(e[0]), e[i - 2].subtract(e[i - 1])), this.closed && (n.shift(), n.pop()))), n
                            },
                            fitCubic: function(t, e, i, n, r, s) {
                                var a = this.points;
                                if (n - i != 1) {
                                    for (var o, h = this.chordLengthParameterize(i, n), l = Math.max(e, e * e), c = !0, u = 0; u <= 4; u++) {
                                        var d = this.generateBezier(i, n, h, r, s),
                                            p = this.findMaxError(i, n, d, h);
                                        if (p.error < e && c) return void this.addCurve(t, d);
                                        if (o = p.index, p.error >= l) break;
                                        c = this.reparameterize(i, n, h, d), l = p.error
                                    }
                                    var f = a[o - 1].subtract(a[o + 1]);
                                    this.fitCubic(t, e, i, o, r, f), this.fitCubic(t, e, o, n, f.negate(), s)
                                } else {
                                    var g = a[i],
                                        m = a[n],
                                        v = g.getDistance(m) / 3;
                                    this.addCurve(t, [g, g.add(r.normalize(v)), m.add(s.normalize(v)), m])
                                }
                            },
                            addCurve: function(t, e) {
                                t[t.length - 1].setHandleOut(e[1].subtract(e[0])), t.push(new B(e[3], e[2].subtract(e[3])))
                            },
                            generateBezier: function(t, e, i, n, r) {
                                for (var s = 1e-12, a = Math.abs, o = this.points, h = o[t], l = o[e], c = [
                                        [0, 0],
                                        [0, 0]
                                    ], u = [0, 0], d = 0, p = e - t + 1; d < p; d++) {
                                    var f = i[d],
                                        g = 1 - f,
                                        m = 3 * f * g,
                                        v = g * g * g,
                                        _ = m * g,
                                        y = m * f,
                                        x = f * f * f,
                                        b = n.normalize(_),
                                        w = r.normalize(y),
                                        S = o[t + d].subtract(h.multiply(v + _)).subtract(l.multiply(y + x));
                                    c[0][0] += b.dot(b), c[0][1] += b.dot(w), c[1][0] = c[0][1], c[1][1] += w.dot(w), u[0] += b.dot(S), u[1] += w.dot(S)
                                }
                                var C, k, A = c[0][0] * c[1][1] - c[1][0] * c[0][1];
                                if (a(A) > s) {
                                    var P = c[0][0] * u[1] - c[1][0] * u[0];
                                    C = (u[0] * c[1][1] - u[1] * c[0][1]) / A, k = P / A
                                } else {
                                    var M = c[0][0] + c[0][1],
                                        T = c[1][0] + c[1][1];
                                    C = k = a(M) > s ? u[0] / M : a(T) > s ? u[1] / T : 0
                                }
                                var E, I, O = l.getDistance(h),
                                    L = s * O;
                                if (C < L || k < L) C = k = O / 3;
                                else {
                                    var D = l.subtract(h);
                                    E = n.normalize(C), I = r.normalize(k), E.dot(D) - I.dot(D) > O * O && (C = k = O / 3, E = I = null)
                                }
                                return [h, h.add(E || n.normalize(C)), l.add(I || r.normalize(k)), l]
                            },
                            reparameterize: function(t, e, i, n) {
                                for (var r = t; r <= e; r++) i[r - t] = this.findRoot(n, this.points[r], i[r - t]);
                                r = 1;
                                for (var s = i.length; r < s; r++)
                                    if (i[r] <= i[r - 1]) return !1;
                                return !0
                            },
                            findRoot: function(t, e, i) {
                                for (var n = [], r = [], s = 0; s <= 2; s++) n[s] = t[s + 1].subtract(t[s]).multiply(3);
                                for (s = 0; s <= 1; s++) r[s] = n[s + 1].subtract(n[s]).multiply(2);
                                var a = this.evaluate(3, t, i),
                                    o = this.evaluate(2, n, i),
                                    h = this.evaluate(1, r, i),
                                    l = a.subtract(e),
                                    c = o.dot(o) + l.dot(h);
                                return m.isMachineZero(c) ? i : i - l.dot(o) / c
                            },
                            evaluate: function(t, e, i) {
                                for (var n = e.slice(), r = 1; r <= t; r++)
                                    for (var s = 0; s <= t - r; s++) n[s] = n[s].multiply(1 - i).add(n[s + 1].multiply(i));
                                return n[0]
                            },
                            chordLengthParameterize: function(t, e) {
                                for (var i = [0], n = t + 1; n <= e; n++) i[n - t] = i[n - t - 1] + this.points[n].getDistance(this.points[n - 1]);
                                n = 1;
                                for (var r = e - t; n <= r; n++) i[n] /= i[r];
                                return i
                            },
                            findMaxError: function(t, e, i, n) {
                                for (var r = Math.floor((e - t + 1) / 2), s = 0, a = t + 1; a < e; a++) {
                                    var o = this.evaluate(3, i, n[a - t]).subtract(this.points[a]),
                                        h = o.x * o.x + o.y * o.y;
                                    h >= s && (s = h, r = a)
                                }
                                return {
                                    error: s,
                                    index: r
                                }
                            }
                        }),
                        W = P.extend({
                            _class: "TextItem",
                            _applyMatrix: !1,
                            _canApplyMatrix: !1,
                            _serializeFields: {
                                content: null
                            },
                            _boundsOptions: {
                                stroke: !1,
                                handle: !1
                            },
                            initialize: function(t) {
                                this._content = "", this._lines = [];
                                var e = t && c.isPlainObject(t) && t.x === o && t.y === o;
                                this._initialize(e && t, !e && _.read(arguments))
                            },
                            _equals: function(t) {
                                return this._content === t._content
                            },
                            copyContent: function(t) {
                                this.setContent(t._content)
                            },
                            getContent: function() {
                                return this._content
                            },
                            setContent: function(t) {
                                this._content = "" + t, this._lines = this._content.split(/\r\n|\n|\r/gm), this._changed(521)
                            },
                            isEmpty: function() {
                                return !this._content
                            },
                            getCharacterStyle: "#getStyle",
                            setCharacterStyle: "#setStyle",
                            getParagraphStyle: "#getStyle",
                            setParagraphStyle: "#setStyle"
                        }),
                        U = W.extend({
                            _class: "PointText",
                            initialize: function() {
                                W.apply(this, arguments)
                            },
                            getPoint: function() {
                                var t = this._matrix.getTranslation();
                                return new y(t.x, t.y, this, "setPoint")
                            },
                            setPoint: function() {
                                var t = _.read(arguments);
                                this.translate(t.subtract(this._matrix.getTranslation()))
                            },
                            _draw: function(t, e, i) {
                                if (this._content) {
                                    this._setStyles(t, e, i);
                                    var n = this._lines,
                                        r = this._style,
                                        s = r.hasFill(),
                                        a = r.hasStroke(),
                                        o = r.getLeading(),
                                        h = t.shadowColor;
                                    t.font = r.getFontStyle(), t.textAlign = r.getJustification();
                                    for (var l = 0, c = n.length; l < c; l++) {
                                        t.shadowColor = h;
                                        var u = n[l];
                                        s && (t.fillText(u, 0, 0), t.shadowColor = "rgba(0,0,0,0)"), a && t.strokeText(u, 0, 0), t.translate(0, o)
                                    }
                                }
                            },
                            _getBounds: function(t, e) {
                                var i = this._style,
                                    n = this._lines,
                                    r = n.length,
                                    s = i.getJustification(),
                                    a = i.getLeading(),
                                    o = this.getView().getTextWidth(i.getFontStyle(), n),
                                    h = 0;
                                "left" !== s && (h -= o / ("center" === s ? 2 : 1));
                                var l = new w(h, r ? -.75 * a : 0, o, r * a);
                                return t ? t._transformBounds(l, l) : l
                            }
                        }),
                        Y = c.extend(new function() {
                            var t, e = {
                                    gray: ["gray"],
                                    rgb: ["red", "green", "blue"],
                                    hsb: ["hue", "saturation", "brightness"],
                                    hsl: ["hue", "saturation", "lightness"],
                                    gradient: ["gradient", "origin", "destination", "highlight"]
                                },
                                i = {},
                                n = {
                                    transparent: [0, 0, 0, 0]
                                };

                            function r(e) {
                                var i, r = e.match(/^#([\da-f]{2})([\da-f]{2})([\da-f]{2})([\da-f]{2})?$/i) || e.match(/^#([\da-f])([\da-f])([\da-f])([\da-f])?$/i),
                                    s = "rgb";
                                if (r) {
                                    var a = r[4] ? 4 : 3;
                                    i = new Array(a);
                                    for (var o = 0; o < a; o++) {
                                        var l = r[o + 1];
                                        i[o] = parseInt(1 == l.length ? l + l : l, 16) / 255
                                    }
                                } else if (r = e.match(/^(rgb|hsl)a?\((.*)\)$/)) {
                                    s = r[1], i = r[2].trim().split(/[,\s]+/g);
                                    for (var c = "hsl" === s, u = (o = 0, Math.min(i.length, 4)); o < u; o++) {
                                        var d = i[o];
                                        l = parseFloat(d);
                                        if (c)
                                            if (0 === o) {
                                                var p = d.match(/([a-z]*)$/)[1];
                                                l *= {
                                                    turn: 360,
                                                    rad: 180 / Math.PI,
                                                    grad: .9
                                                }[p] || 1
                                            } else o < 3 && (l /= 100);
                                        else o < 3 && (l /= /%$/.test(d) ? 100 : 255);
                                        i[o] = l
                                    }
                                } else {
                                    var f = n[e];
                                    if (!f)
                                        if (h) {
                                            t || ((t = ht.getContext(1, 1)).globalCompositeOperation = "copy"), t.fillStyle = "rgba(0,0,0,0)", t.fillStyle = e, t.fillRect(0, 0, 1, 1);
                                            var g = t.getImageData(0, 0, 1, 1).data;
                                            f = n[e] = [g[0] / 255, g[1] / 255, g[2] / 255]
                                        } else f = [0, 0, 0];
                                    i = f.slice()
                                }
                                return [s, i]
                            }
                            var s = [
                                    [0, 3, 1],
                                    [2, 0, 1],
                                    [1, 0, 3],
                                    [1, 2, 0],
                                    [3, 1, 0],
                                    [0, 1, 2]
                                ],
                                a = {
                                    "rgb-hsb": function(t, e, i) {
                                        var n = Math.max(t, e, i),
                                            r = n - Math.min(t, e, i);
                                        return [0 === r ? 0 : 60 * (n == t ? (e - i) / r + (e < i ? 6 : 0) : n == e ? (i - t) / r + 2 : (t - e) / r + 4), 0 === n ? 0 : r / n, n]
                                    },
                                    "hsb-rgb": function(t, e, i) {
                                        var n, r = (t = (t / 60 % 6 + 6) % 6) - (n = Math.floor(t)),
                                            a = [i, i * (1 - e), i * (1 - e * r), i * (1 - e * (1 - r))];
                                        return [a[(n = s[n])[0]], a[n[1]], a[n[2]]]
                                    },
                                    "rgb-hsl": function(t, e, i) {
                                        var n = Math.max(t, e, i),
                                            r = Math.min(t, e, i),
                                            s = n - r,
                                            a = 0 === s,
                                            o = (n + r) / 2;
                                        return [a ? 0 : 60 * (n == t ? (e - i) / s + (e < i ? 6 : 0) : n == e ? (i - t) / s + 2 : (t - e) / s + 4), a ? 0 : o < .5 ? s / (n + r) : s / (2 - n - r), o]
                                    },
                                    "hsl-rgb": function(t, e, i) {
                                        if (0 === e) return [i, i, i];
                                        for (var n = [(t = (t / 360 % 1 + 1) % 1) + 1 / 3, t, t - 1 / 3], r = i < .5 ? i * (1 + e) : i + e - i * e, s = 2 * i - r, a = [], o = 0; o < 3; o++) {
                                            var h = n[o];
                                            h < 0 && (h += 1), h > 1 && (h -= 1), a[o] = 6 * h < 1 ? s + 6 * (r - s) * h : 2 * h < 1 ? r : 3 * h < 2 ? s + (r - s) * (2 / 3 - h) * 6 : s
                                        }
                                        return a
                                    },
                                    "rgb-gray": function(t, e, i) {
                                        return [.2989 * t + .587 * e + .114 * i]
                                    },
                                    "gray-rgb": function(t) {
                                        return [t, t, t]
                                    },
                                    "gray-hsb": function(t) {
                                        return [0, 0, t]
                                    },
                                    "gray-hsl": function(t) {
                                        return [0, 0, t]
                                    },
                                    "gradient-rgb": function() {
                                        return []
                                    },
                                    "rgb-gradient": function() {
                                        return []
                                    }
                                };
                            return c.each(e, (function(t, n) {
                                i[n] = [], c.each(t, (function(t, r) {
                                    var s = c.capitalize(t),
                                        a = /^(hue|saturation)$/.test(t),
                                        o = i[n][r] = "gradient" === n ? "gradient" === t ? function(t) {
                                            var e = this._components[0];
                                            return e !== (t = X.read(Array.isArray(t) ? t : arguments, 0, {
                                                readNull: !0
                                            })) && (e && e._removeOwner(this), t && t._addOwner(this)), t
                                        } : function() {
                                            return _.read(arguments, 0, {
                                                readNull: "highlight" === t,
                                                clone: !0
                                            })
                                        } : function(t) {
                                            return null == t || isNaN(t) ? 0 : +t
                                        };
                                    this["get" + s] = function() {
                                        return this._type === n || a && /^hs[bl]$/.test(this._type) ? this._components[r] : this._convert(n)[r]
                                    }, this["set" + s] = function(t) {
                                        this._type === n || a && /^hs[bl]$/.test(this._type) || (this._components = this._convert(n), this._properties = e[n], this._type = n), this._components[r] = o.call(this, t), this._changed()
                                    }
                                }), this)
                            }), {
                                _class: "Color",
                                _readIndex: !0,
                                initialize: function t(n) {
                                    var s, a, o, h, l = arguments,
                                        u = this.__read,
                                        d = 0;
                                    Array.isArray(n) && (n = (l = n)[0]);
                                    var p = null != n && typeof n;
                                    if ("string" === p && n in e && (s = n, n = l[1], Array.isArray(n) ? (a = n, o = l[2]) : (u && (d = 1), l = c.slice(l, 1), p = typeof n)), !a) {
                                        if (h = "number" === p ? l : "object" === p && null != n.length ? n : null) {
                                            s || (s = h.length >= 3 ? "rgb" : "gray");
                                            var f = e[s].length;
                                            o = h[f], u && (d += h === arguments ? f + (null != o ? 1 : 0) : 1), h.length > f && (h = c.slice(h, 0, f))
                                        } else if ("string" === p) {
                                            var g = r(n);
                                            s = g[0], 4 === (a = g[1]).length && (o = a[3], a.length--)
                                        } else if ("object" === p)
                                            if (n.constructor === t) {
                                                if (s = n._type, a = n._components.slice(), o = n._alpha, "gradient" === s)
                                                    for (var m = 1, v = a.length; m < v; m++) {
                                                        var _ = a[m];
                                                        _ && (a[m] = _.clone())
                                                    }
                                            } else if (n.constructor === X) s = "gradient", h = l;
                                        else {
                                            var y = e[s = "hue" in n ? "lightness" in n ? "hsl" : "hsb" : "gradient" in n || "stops" in n || "radial" in n ? "gradient" : "gray" in n ? "gray" : "rgb"],
                                                x = i[s];
                                            this._components = a = [];
                                            for (m = 0, v = y.length; m < v; m++) {
                                                null == (b = n[y[m]]) && !m && "gradient" === s && "stops" in n && (b = {
                                                    stops: n.stops,
                                                    radial: n.radial
                                                }), null != (b = x[m].call(this, b)) && (a[m] = b)
                                            }
                                            o = n.alpha
                                        }
                                        u && s && (d = 1)
                                    }
                                    if (this._type = s || "rgb", !a) {
                                        this._components = a = [];
                                        for (m = 0, v = (x = i[this._type]).length; m < v; m++) {
                                            var b;
                                            null != (b = x[m].call(this, h && h[m])) && (a[m] = b)
                                        }
                                    }
                                    return this._components = a, this._properties = e[this._type], this._alpha = o, u && (this.__read = d), this
                                },
                                set: "#initialize",
                                _serialize: function(t, e) {
                                    var i = this.getComponents();
                                    return c.serialize(/^(gray|rgb)$/.test(this._type) ? i : [this._type].concat(i), t, !0, e)
                                },
                                _changed: function() {
                                    this._canvasStyle = null, this._owner && (this._setter ? this._owner[this._setter](this) : this._owner._changed(129))
                                },
                                _convert: function(t) {
                                    var e;
                                    return this._type === t ? this._components.slice() : (e = a[this._type + "-" + t]) ? e.apply(this, this._components) : a["rgb-" + t].apply(this, a[this._type + "-rgb"].apply(this, this._components))
                                },
                                convert: function(t) {
                                    return new Y(t, this._convert(t), this._alpha)
                                },
                                getType: function() {
                                    return this._type
                                },
                                setType: function(t) {
                                    this._components = this._convert(t), this._properties = e[t], this._type = t
                                },
                                getComponents: function() {
                                    var t = this._components.slice();
                                    return null != this._alpha && t.push(this._alpha), t
                                },
                                getAlpha: function() {
                                    return null != this._alpha ? this._alpha : 1
                                },
                                setAlpha: function(t) {
                                    this._alpha = null == t ? null : Math.min(Math.max(t, 0), 1), this._changed()
                                },
                                hasAlpha: function() {
                                    return null != this._alpha
                                },
                                equals: function(t) {
                                    var e = c.isPlainValue(t, !0) ? Y.read(arguments) : t;
                                    return e === this || e && this._class === e._class && this._type === e._type && this.getAlpha() === e.getAlpha() && c.equals(this._components, e._components) || !1
                                },
                                toString: function() {
                                    for (var t = this._properties, e = [], i = "gradient" === this._type, n = g.instance, r = 0, s = t.length; r < s; r++) {
                                        var a = this._components[r];
                                        null != a && e.push(t[r] + ": " + (i ? a : n.number(a)))
                                    }
                                    return null != this._alpha && e.push("alpha: " + n.number(this._alpha)), "{ " + e.join(", ") + " }"
                                },
                                toCSS: function(t) {
                                    var e = this._convert("rgb"),
                                        i = t || null == this._alpha ? 1 : this._alpha;

                                    function n(t) {
                                        return Math.round(255 * (t < 0 ? 0 : t > 1 ? 1 : t))
                                    }
                                    return e = [n(e[0]), n(e[1]), n(e[2])], i < 1 && e.push(i < 0 ? 0 : i), t ? "#" + ((1 << 24) + (e[0] << 16) + (e[1] << 8) + e[2]).toString(16).slice(1) : (4 == e.length ? "rgba(" : "rgb(") + e.join(",") + ")"
                                },
                                toCanvasStyle: function(t, e) {
                                    if (this._canvasStyle) return this._canvasStyle;
                                    if ("gradient" !== this._type) return this._canvasStyle = this.toCSS();
                                    var i, n = this._components,
                                        r = n[0],
                                        s = r._stops,
                                        a = n[1],
                                        o = n[2],
                                        h = n[3],
                                        l = e && e.inverted();
                                    if (l && (a = l._transformPoint(a), o = l._transformPoint(o), h && (h = l._transformPoint(h))), r._radial) {
                                        var c = o.getDistance(a);
                                        if (h) {
                                            var u = h.subtract(a);
                                            u.getLength() > c && (h = a.add(u.normalize(c - .1)))
                                        }
                                        var d = h || a;
                                        i = t.createRadialGradient(d.x, d.y, 0, a.x, a.y, c)
                                    } else i = t.createLinearGradient(a.x, a.y, o.x, o.y);
                                    for (var p = 0, f = s.length; p < f; p++) {
                                        var g = s[p],
                                            m = g._offset;
                                        i.addColorStop(null == m ? p / (f - 1) : m, g._color.toCanvasStyle())
                                    }
                                    return this._canvasStyle = i
                                },
                                transform: function(t) {
                                    if ("gradient" === this._type) {
                                        for (var e = this._components, i = 1, n = e.length; i < n; i++) {
                                            var r = e[i];
                                            t._transformPoint(r, r, !0)
                                        }
                                        this._changed()
                                    }
                                },
                                statics: {
                                    _types: e,
                                    random: function() {
                                        var t = Math.random;
                                        return new Y(t(), t(), t())
                                    },
                                    _setOwner: function(t, e, i) {
                                        return t && (t._owner && e && t._owner !== e && (t = t.clone()), !t._owner ^ !e && (t._owner = e || null, t._setter = i || null)), t
                                    }
                                }
                            })
                        }, new function() {
                            return c.each({
                                add: function(t, e) {
                                    return t + e
                                },
                                subtract: function(t, e) {
                                    return t - e
                                },
                                multiply: function(t, e) {
                                    return t * e
                                },
                                divide: function(t, e) {
                                    return t / e
                                }
                            }, (function(t, e) {
                                this[e] = function(e) {
                                    e = Y.read(arguments);
                                    for (var i = this._type, n = this._components, r = e._convert(i), s = 0, a = n.length; s < a; s++) r[s] = t(n[s], r[s]);
                                    return new Y(i, r, null != this._alpha ? t(this._alpha, e.getAlpha()) : null)
                                }
                            }), {})
                        }),
                        X = c.extend({
                            _class: "Gradient",
                            initialize: function(t, e) {
                                this._id = v.get(), t && c.isPlainObject(t) && (this.set(t), t = e = null), null == this._stops && this.setStops(t || ["white", "black"]), null == this._radial && this.setRadial("string" == typeof e && "radial" === e || e || !1)
                            },
                            _serialize: function(t, e) {
                                return e.add(this, (function() {
                                    return c.serialize([this._stops, this._radial], t, !0, e)
                                }))
                            },
                            _changed: function() {
                                for (var t = 0, e = this._owners && this._owners.length; t < e; t++) this._owners[t]._changed()
                            },
                            _addOwner: function(t) {
                                this._owners || (this._owners = []), this._owners.push(t)
                            },
                            _removeOwner: function(t) {
                                var e = this._owners ? this._owners.indexOf(t) : -1; - 1 != e && (this._owners.splice(e, 1), this._owners.length || (this._owners = o))
                            },
                            clone: function() {
                                for (var t = [], e = 0, i = this._stops.length; e < i; e++) t[e] = this._stops[e].clone();
                                return new X(t, this._radial)
                            },
                            getStops: function() {
                                return this._stops
                            },
                            setStops: function(t) {
                                if (t.length < 2) throw new Error("Gradient stop list needs to contain at least two stops.");
                                var e = this._stops;
                                if (e)
                                    for (var i = 0, n = e.length; i < n; i++) e[i]._owner = o;
                                for (i = 0, n = (e = this._stops = G.readList(t, 0, {
                                        clone: !0
                                    })).length; i < n; i++) e[i]._owner = this;
                                this._changed()
                            },
                            getRadial: function() {
                                return this._radial
                            },
                            setRadial: function(t) {
                                this._radial = t, this._changed()
                            },
                            equals: function(t) {
                                if (t === this) return !0;
                                if (t && this._class === t._class) {
                                    var e = this._stops,
                                        i = t._stops,
                                        n = e.length;
                                    if (n === i.length) {
                                        for (var r = 0; r < n; r++)
                                            if (!e[r].equals(i[r])) return !1;
                                        return !0
                                    }
                                }
                                return !1
                            }
                        }),
                        G = c.extend({
                            _class: "GradientStop",
                            initialize: function(t, e) {
                                var i = t,
                                    n = e;
                                "object" == typeof t && e === o && (Array.isArray(t) && "number" != typeof t[0] ? (i = t[0], n = t[1]) : ("color" in t || "offset" in t || "rampPoint" in t) && (i = t.color, n = t.offset || t.rampPoint || 0)), this.setColor(i), this.setOffset(n)
                            },
                            clone: function() {
                                return new G(this._color.clone(), this._offset)
                            },
                            _serialize: function(t, e) {
                                var i = this._color,
                                    n = this._offset;
                                return c.serialize(null == n ? [i] : [i, n], t, !0, e)
                            },
                            _changed: function() {
                                this._owner && this._owner._changed(129)
                            },
                            getOffset: function() {
                                return this._offset
                            },
                            setOffset: function(t) {
                                this._offset = t, this._changed()
                            },
                            getRampPoint: "#getOffset",
                            setRampPoint: "#setOffset",
                            getColor: function() {
                                return this._color
                            },
                            setColor: function() {
                                Y._setOwner(this._color, null), this._color = Y._setOwner(Y.read(arguments, 0), this, "setColor"), this._changed()
                            },
                            equals: function(t) {
                                return t === this || t && this._class === t._class && this._color.equals(t._color) && this._offset == t._offset || !1
                            }
                        }),
                        Z = c.extend(new function() {
                            var t = {
                                    fillColor: null,
                                    fillRule: "nonzero",
                                    strokeColor: null,
                                    strokeWidth: 1,
                                    strokeCap: "butt",
                                    strokeJoin: "miter",
                                    strokeScaling: !0,
                                    miterLimit: 10,
                                    dashOffset: 0,
                                    dashArray: [],
                                    shadowColor: null,
                                    shadowBlur: 0,
                                    shadowOffset: new _,
                                    selectedColor: null
                                },
                                e = c.set({}, t, {
                                    fontFamily: "sans-serif",
                                    fontWeight: "normal",
                                    fontSize: 12,
                                    leading: null,
                                    justification: "left"
                                }),
                                i = c.set({}, e, {
                                    fillColor: new Y
                                }),
                                n = {
                                    strokeWidth: 193,
                                    strokeCap: 193,
                                    strokeJoin: 193,
                                    strokeScaling: 201,
                                    miterLimit: 193,
                                    fontFamily: 9,
                                    fontWeight: 9,
                                    fontSize: 9,
                                    font: 9,
                                    leading: 9,
                                    justification: 9
                                },
                                r = {
                                    beans: !0
                                },
                                s = {
                                    _class: "Style",
                                    beans: !0,
                                    initialize: function(n, r, s) {
                                        this._values = {}, this._owner = r, this._project = r && r._project || s || dt.project, this._defaults = !r || r instanceof M ? e : r instanceof W ? i : t, n && this.set(n)
                                    }
                                };
                            return c.each(e, (function(t, e) {
                                var i = /Color$/.test(e),
                                    a = "shadowOffset" === e,
                                    h = c.capitalize(e),
                                    l = n[e],
                                    u = "set" + h,
                                    d = "get" + h;
                                s[u] = function(t) {
                                    var n = this._owner,
                                        r = n && n._children,
                                        s = r && r.length > 0 && !(n instanceof j);
                                    if (s)
                                        for (var a = 0, o = r.length; a < o; a++) r[a]._style[u](t);
                                    if (("selectedColor" === e || !s) && e in this._defaults) {
                                        var h = this._values[e];
                                        h !== t && (i && (h && (Y._setOwner(h, null), h._canvasStyle = null), t && t.constructor === Y && (t = Y._setOwner(t, n, s && u))), this._values[e] = t, n && n._changed(l || 129))
                                    }
                                }, s[d] = function(t) {
                                    var n = this._owner,
                                        r = n && n._children,
                                        s = r && r.length > 0 && !(n instanceof j);
                                    if (s && !t)
                                        for (var h = 0, l = r.length; h < l; h++) {
                                            var p = r[h]._style[d]();
                                            if (h) {
                                                if (!c.equals(f, p)) return o
                                            } else f = p
                                        } else if (e in this._defaults) {
                                            var f;
                                            if ((f = this._values[e]) === o)(f = this._defaults[e]) && f.clone && (f = f.clone());
                                            else {
                                                var g = i ? Y : a ? _ : null;
                                                !g || f && f.constructor === g || (this._values[e] = f = g.read([f], 0, {
                                                    readNull: !0,
                                                    clone: !0
                                                }))
                                            }
                                        }
                                    return f && i && (f = Y._setOwner(f, n, s && u)), f
                                }, r[d] = function(t) {
                                    return this._style[d](t)
                                }, r[u] = function(t) {
                                    this._style[u](t)
                                }
                            })), c.each({
                                Font: "FontFamily",
                                WindingRule: "FillRule"
                            }, (function(t, e) {
                                var i = "get" + e,
                                    n = "set" + e;
                                s[i] = r[i] = "#get" + t, s[n] = r[n] = "#set" + t
                            })), P.inject(r), s
                        }, {
                            set: function(t) {
                                var e = t instanceof Z,
                                    i = e ? t._values : t;
                                if (i)
                                    for (var n in i)
                                        if (n in this._defaults) {
                                            var r = i[n];
                                            this[n] = r && e && r.clone ? r.clone() : r
                                        }
                            },
                            equals: function(t) {
                                function e(t, e, i) {
                                    var n = t._values,
                                        r = e._values,
                                        s = e._defaults;
                                    for (var a in n) {
                                        var h = n[a],
                                            l = r[a];
                                        if (!(i && a in r || c.equals(h, l === o ? s[a] : l))) return !1
                                    }
                                    return !0
                                }
                                return t === this || t && this._class === t._class && e(this, t) && e(t, this, !0) || !1
                            },
                            _dispose: function() {
                                var t;
                                (t = this.getFillColor()) && (t._canvasStyle = null), (t = this.getStrokeColor()) && (t._canvasStyle = null), (t = this.getShadowColor()) && (t._canvasStyle = null)
                            },
                            hasFill: function() {
                                var t = this.getFillColor();
                                return !!t && t.alpha > 0
                            },
                            hasStroke: function() {
                                var t = this.getStrokeColor();
                                return !!t && t.alpha > 0 && this.getStrokeWidth() > 0
                            },
                            hasShadow: function() {
                                var t = this.getShadowColor();
                                return !!t && t.alpha > 0 && (this.getShadowBlur() > 0 || !this.getShadowOffset().isZero())
                            },
                            getView: function() {
                                return this._project._view
                            },
                            getFontStyle: function() {
                                var t = this.getFontSize();
                                return this.getFontWeight() + " " + t + (/[a-z]/i.test(t + "") ? " " : "px ") + this.getFontFamily()
                            },
                            getFont: "#getFontFamily",
                            setFont: "#setFontFamily",
                            getLeading: function t() {
                                var e = t.base.call(this),
                                    i = this.getFontSize();
                                return /pt|em|%|px/.test(i) && (i = this.getView().getPixelSize(i)), null != e ? e : 1.2 * i
                            }
                        }),
                        Q = new function() {
                            function t(t, e, i, n) {
                                for (var r = ["", "webkit", "moz", "Moz", "ms", "o"], s = e[0].toUpperCase() + e.substring(1), a = 0; a < 6; a++) {
                                    var o = r[a],
                                        h = o ? o + s : e;
                                    if (h in t) {
                                        if (!i) return t[h];
                                        t[h] = n;
                                        break
                                    }
                                }
                            }
                            return {
                                getStyles: function(t) {
                                    var e = t && 9 !== t.nodeType ? t.ownerDocument : t,
                                        i = e && e.defaultView;
                                    return i && i.getComputedStyle(t, "")
                                },
                                getBounds: function(t, e) {
                                    var i, n = t.ownerDocument,
                                        r = n.body,
                                        s = n.documentElement;
                                    try {
                                        i = t.getBoundingClientRect()
                                    } catch (t) {
                                        i = {
                                            left: 0,
                                            top: 0,
                                            width: 0,
                                            height: 0
                                        }
                                    }
                                    var a = i.left - (s.clientLeft || r.clientLeft || 0),
                                        o = i.top - (s.clientTop || r.clientTop || 0);
                                    if (!e) {
                                        var h = n.defaultView;
                                        a += h.pageXOffset || s.scrollLeft || r.scrollLeft, o += h.pageYOffset || s.scrollTop || r.scrollTop
                                    }
                                    return new w(a, o, i.width, i.height)
                                },
                                getViewportBounds: function(t) {
                                    var e = t.ownerDocument,
                                        i = e.defaultView,
                                        n = e.documentElement;
                                    return new w(0, 0, i.innerWidth || n.clientWidth, i.innerHeight || n.clientHeight)
                                },
                                getOffset: function(t, e) {
                                    return Q.getBounds(t, e).getPoint()
                                },
                                getSize: function(t) {
                                    return Q.getBounds(t, !0).getSize()
                                },
                                isInvisible: function(t) {
                                    return Q.getSize(t).equals(new x(0, 0))
                                },
                                isInView: function(t) {
                                    return !Q.isInvisible(t) && Q.getViewportBounds(t).intersects(Q.getBounds(t, !0))
                                },
                                isInserted: function(t) {
                                    return l.body.contains(t)
                                },
                                getPrefixed: function(e, i) {
                                    return e && t(e, i)
                                },
                                setPrefixed: function(e, i, n) {
                                    if ("object" == typeof i)
                                        for (var r in i) t(e, r, !0, i[r]);
                                    else t(e, i, !0, n)
                                }
                            }
                        },
                        $ = {
                            add: function(t, e) {
                                if (t)
                                    for (var i in e)
                                        for (var n = e[i], r = i.split(/[\s,]+/g), s = 0, a = r.length; s < a; s++) {
                                            var o = r[s],
                                                h = t === l && ("touchstart" === o || "touchmove" === o) && {
                                                    passive: !1
                                                };
                                            t.addEventListener(o, n, h)
                                        }
                            },
                            remove: function(t, e) {
                                if (t)
                                    for (var i in e)
                                        for (var n = e[i], r = i.split(/[\s,]+/g), s = 0, a = r.length; s < a; s++) t.removeEventListener(r[s], n, !1)
                            },
                            getPoint: function(t) {
                                var e = t.targetTouches ? t.targetTouches.length ? t.targetTouches[0] : t.changedTouches[0] : t;
                                return new _(e.pageX || e.clientX + l.documentElement.scrollLeft, e.pageY || e.clientY + l.documentElement.scrollTop)
                            },
                            getTarget: function(t) {
                                return t.target || t.srcElement
                            },
                            getRelatedTarget: function(t) {
                                return t.relatedTarget || t.toElement
                            },
                            getOffset: function(t, e) {
                                return $.getPoint(t).subtract(Q.getOffset(e || $.getTarget(t)))
                            }
                        };
                    $.requestAnimationFrame = new function() {
                        var t, e = Q.getPrefixed(h, "requestAnimationFrame"),
                            i = !1,
                            n = [];

                        function r() {
                            var t = n;
                            n = [];
                            for (var s = 0, a = t.length; s < a; s++) t[s]();
                            (i = e && n.length) && e(r)
                        }
                        return function(s) {
                            n.push(s), e ? i || (e(r), i = !0) : t || (t = setInterval(r, 1e3 / 60))
                        }
                    };
                    var K = c.extend(u, {
                            _class: "View",
                            initialize: function t(e, i) {
                                function n(t) {
                                    return i[t] || parseInt(i.getAttribute(t), 10)
                                }

                                function r() {
                                    var t = Q.getSize(i);
                                    return t.isNaN() || t.isZero() ? new x(n("width"), n("height")) : t
                                }
                                var s;
                                if (h && i) {
                                    this._id = i.getAttribute("id"), null == this._id && i.setAttribute("id", this._id = "paper-view-" + t._id++), $.add(i, this._viewEvents);
                                    var a = "none";
                                    if (Q.setPrefixed(i.style, {
                                            userDrag: a,
                                            userSelect: a,
                                            touchCallout: a,
                                            contentZooming: a,
                                            tapHighlightColor: "rgba(0,0,0,0)"
                                        }), d.hasAttribute(i, "resize")) {
                                        var o = this;
                                        $.add(h, this._windowEvents = {
                                            resize: function() {
                                                o.setViewSize(r())
                                            }
                                        })
                                    }
                                    if (s = r(), d.hasAttribute(i, "stats") && "undefined" != typeof Stats) {
                                        this._stats = new Stats;
                                        var c = this._stats.domElement,
                                            u = c.style,
                                            p = Q.getOffset(i);
                                        u.position = "absolute", u.left = p.x + "px", u.top = p.y + "px", l.body.appendChild(c)
                                    }
                                } else s = new x(i), i = null;
                                this._project = e, this._scope = e._scope, this._element = i, this._pixelRatio || (this._pixelRatio = h && h.devicePixelRatio || 1), this._setElementSize(s.width, s.height), this._viewSize = s, t._views.push(this), t._viewsById[this._id] = this, (this._matrix = new C)._owner = this, t._focused || (t._focused = this), this._frameItems = {}, this._frameItemCount = 0, this._itemEvents = {
                                    native: {},
                                    virtual: {}
                                }, this._autoUpdate = !dt.agent.node, this._needsUpdate = !1
                            },
                            remove: function() {
                                if (!this._project) return !1;
                                K._focused === this && (K._focused = null), K._views.splice(K._views.indexOf(this), 1), delete K._viewsById[this._id];
                                var t = this._project;
                                return t._view === this && (t._view = null), $.remove(this._element, this._viewEvents), $.remove(h, this._windowEvents), this._element = this._project = null, this.off("frame"), this._animate = !1, this._frameItems = {}, !0
                            },
                            _events: c.each(P._itemHandlers.concat(["onResize", "onKeyDown", "onKeyUp"]), (function(t) {
                                this[t] = {}
                            }), {
                                onFrame: {
                                    install: function() {
                                        this.play()
                                    },
                                    uninstall: function() {
                                        this.pause()
                                    }
                                }
                            }),
                            _animate: !1,
                            _time: 0,
                            _count: 0,
                            getAutoUpdate: function() {
                                return this._autoUpdate
                            },
                            setAutoUpdate: function(t) {
                                this._autoUpdate = t, t && this.requestUpdate()
                            },
                            update: function() {},
                            draw: function() {
                                this.update()
                            },
                            requestUpdate: function() {
                                if (!this._requested) {
                                    var t = this;
                                    $.requestAnimationFrame((function() {
                                        if (t._requested = !1, t._animate) {
                                            t.requestUpdate();
                                            var e = t._element;
                                            Q.getPrefixed(l, "hidden") && "true" !== d.getAttribute(e, "keepalive") || !Q.isInView(e) || t._handleFrame()
                                        }
                                        t._autoUpdate && t.update()
                                    })), this._requested = !0
                                }
                            },
                            play: function() {
                                this._animate = !0, this.requestUpdate()
                            },
                            pause: function() {
                                this._animate = !1
                            },
                            _handleFrame: function() {
                                dt = this._scope;
                                var t = Date.now() / 1e3,
                                    e = this._last ? t - this._last : 0;
                                this._last = t, this.emit("frame", new c({
                                    delta: e,
                                    time: this._time += e,
                                    count: this._count++
                                })), this._stats && this._stats.update()
                            },
                            _animateItem: function(t, e) {
                                var i = this._frameItems;
                                e ? (i[t._id] = {
                                    item: t,
                                    time: 0,
                                    count: 0
                                }, 1 == ++this._frameItemCount && this.on("frame", this._handleFrameItems)) : (delete i[t._id], 0 == --this._frameItemCount && this.off("frame", this._handleFrameItems))
                            },
                            _handleFrameItems: function(t) {
                                for (var e in this._frameItems) {
                                    var i = this._frameItems[e];
                                    i.item.emit("frame", new c(t, {
                                        time: i.time += t.delta,
                                        count: i.count++
                                    }))
                                }
                            },
                            _changed: function() {
                                this._project._changed(4097), this._bounds = this._decomposed = o
                            },
                            getElement: function() {
                                return this._element
                            },
                            getPixelRatio: function() {
                                return this._pixelRatio
                            },
                            getResolution: function() {
                                return 72 * this._pixelRatio
                            },
                            getViewSize: function() {
                                var t = this._viewSize;
                                return new b(t.width, t.height, this, "setViewSize")
                            },
                            setViewSize: function() {
                                var t = x.read(arguments),
                                    e = t.subtract(this._viewSize);
                                e.isZero() || (this._setElementSize(t.width, t.height), this._viewSize.set(t), this._changed(), this.emit("resize", {
                                    size: t,
                                    delta: e
                                }), this._autoUpdate && this.update())
                            },
                            _setElementSize: function(t, e) {
                                var i = this._element;
                                i && (i.width !== t && (i.width = t), i.height !== e && (i.height = e))
                            },
                            getBounds: function() {
                                return this._bounds || (this._bounds = this._matrix.inverted()._transformBounds(new w(new _, this._viewSize))), this._bounds
                            },
                            getSize: function() {
                                return this.getBounds().getSize()
                            },
                            isVisible: function() {
                                return Q.isInView(this._element)
                            },
                            isInserted: function() {
                                return Q.isInserted(this._element)
                            },
                            getPixelSize: function(t) {
                                var e, i = this._element;
                                if (i) {
                                    var n = i.parentNode,
                                        r = l.createElement("div");
                                    r.style.fontSize = t, n.appendChild(r), e = parseFloat(Q.getStyles(r).fontSize), n.removeChild(r)
                                } else e = parseFloat(e);
                                return e
                            },
                            getTextWidth: function(t, e) {
                                return 0
                            }
                        }, c.each(["rotate", "scale", "shear", "skew"], (function(t) {
                            var e = "rotate" === t;
                            this[t] = function() {
                                var i = arguments,
                                    n = (e ? c : _).read(i),
                                    r = _.read(i, 0, {
                                        readNull: !0
                                    });
                                return this.transform((new C)[t](n, r || this.getCenter(!0)))
                            }
                        }), {
                            _decompose: function() {
                                return this._decomposed || (this._decomposed = this._matrix.decompose())
                            },
                            translate: function() {
                                var t = new C;
                                return this.transform(t.translate.apply(t, arguments))
                            },
                            getCenter: function() {
                                return this.getBounds().getCenter()
                            },
                            setCenter: function() {
                                var t = _.read(arguments);
                                this.translate(this.getCenter().subtract(t))
                            },
                            getZoom: function() {
                                var t = this._decompose().scaling;
                                return (t.x + t.y) / 2
                            },
                            setZoom: function(t) {
                                this.transform((new C).scale(t / this.getZoom(), this.getCenter()))
                            },
                            getRotation: function() {
                                return this._decompose().rotation
                            },
                            setRotation: function(t) {
                                var e = this.getRotation();
                                null != e && null != t && this.rotate(t - e)
                            },
                            getScaling: function() {
                                var t = this._decompose().scaling;
                                return new y(t.x, t.y, this, "setScaling")
                            },
                            setScaling: function() {
                                var t = this.getScaling(),
                                    e = _.read(arguments, 0, {
                                        clone: !0,
                                        readNull: !0
                                    });
                                t && e && this.scale(e.x / t.x, e.y / t.y)
                            },
                            getMatrix: function() {
                                return this._matrix
                            },
                            setMatrix: function() {
                                var t = this._matrix;
                                t.set.apply(t, arguments)
                            },
                            transform: function(t) {
                                this._matrix.append(t)
                            },
                            scrollBy: function() {
                                this.translate(_.read(arguments).negate())
                            }
                        }), {
                            projectToView: function() {
                                return this._matrix._transformPoint(_.read(arguments))
                            },
                            viewToProject: function() {
                                return this._matrix._inverseTransform(_.read(arguments))
                            },
                            getEventPoint: function(t) {
                                return this.viewToProject($.getOffset(t, this._element))
                            }
                        }, {
                            statics: {
                                _views: [],
                                _viewsById: {},
                                _id: 0,
                                create: function(t, e) {
                                    return l && "string" == typeof e && (e = l.getElementById(e)), new(h ? J : K)(t, e)
                                }
                            }
                        }, new function() {
                            if (h) {
                                var t, e, i, n, r, s = !1,
                                    a = !1,
                                    o = h.navigator;
                                o.pointerEnabled || o.msPointerEnabled ? (i = "pointerdown MSPointerDown", n = "pointermove MSPointerMove", r = "pointerup pointercancel MSPointerUp MSPointerCancel") : (i = "touchstart", n = "touchmove", r = "touchend touchcancel", "ontouchstart" in h && o.userAgent.match(/mobile|tablet|ip(ad|hone|od)|android|silk/i) || (i += " mousedown", n += " mousemove", r += " mouseup"));
                                var c = {},
                                    u = {
                                        mouseout: function(t) {
                                            var e = K._focused,
                                                i = $.getRelatedTarget(t);
                                            if (e && (!i || "HTML" === i.nodeName)) {
                                                var n = $.getOffset(t, e._element),
                                                    r = n.x,
                                                    s = Math.abs,
                                                    a = s(r),
                                                    o = a - (1 << 25);
                                                n.x = s(o) < a ? o * (r < 0 ? -1 : 1) : r, P(e, t, e.viewToProject(n))
                                            }
                                        },
                                        scroll: A
                                    };
                                c[i] = function(t) {
                                    var e = K._focused = k(t);
                                    s || (s = !0, e._handleMouseEvent("mousedown", t))
                                }, u[n] = function(i) {
                                    var n = K._focused;
                                    if (!a) {
                                        var r = k(i);
                                        r ? n !== r && (n && P(n, i), t || (t = n), n = K._focused = e = r) : e && e === n && (t && !t.isInserted() && (t = null), n = K._focused = t, t = null, A())
                                    }
                                    n && P(n, i)
                                }, u[i] = function() {
                                    a = !0
                                }, u[r] = function(t) {
                                    var e = K._focused;
                                    e && s && e._handleMouseEvent("mouseup", t), a = s = !1
                                }, $.add(l, u), $.add(h, {
                                    load: A
                                });
                                var d, p, f, g, m, v, _, y, x = !1,
                                    b = !1,
                                    w = {
                                        doubleclick: "click",
                                        mousedrag: "mousemove"
                                    },
                                    S = !1,
                                    C = {
                                        mousedown: {
                                            mousedown: 1,
                                            mousedrag: 1,
                                            click: 1,
                                            doubleclick: 1
                                        },
                                        mouseup: {
                                            mouseup: 1,
                                            mousedrag: 1,
                                            click: 1,
                                            doubleclick: 1
                                        },
                                        mousemove: {
                                            mousedrag: 1,
                                            mousemove: 1,
                                            mouseenter: 1,
                                            mouseleave: 1
                                        }
                                    };
                                return {
                                    _viewEvents: c,
                                    _handleMouseEvent: function(t, e, i) {
                                        var n = this._itemEvents,
                                            r = n.native[t],
                                            a = "mousemove" === t,
                                            o = this._scope.tool,
                                            h = this;

                                        function l(t) {
                                            return n.virtual[t] || h.responds(t) || o && o.responds(t)
                                        }
                                        a && s && l("mousedrag") && (t = "mousedrag"), i || (i = this.getEventPoint(e));
                                        var c = this.getBounds().contains(i),
                                            u = r && c && h._project.hitTest(i, {
                                                tolerance: 0,
                                                fill: !0,
                                                stroke: !0
                                            }),
                                            w = u && u.item || null,
                                            C = !1,
                                            k = {};
                                        if (k[t.substr(5)] = !0, r && w !== g && (g && M(g, null, "mouseleave", e, i), w && M(w, null, "mouseenter", e, i), g = w), S ^ c && (M(this, null, c ? "mouseenter" : "mouseleave", e, i), c ? this : null, C = !0), !c && !k.drag || i.equals(p) || (T(this, w, a ? t : "mousemove", e, i, p), C = !0), S = c, k.down && c || k.up && d) {
                                            if (T(this, w, t, e, i, d), k.down) {
                                                if (y = w === v && Date.now() - _ < 300, f = v = w, !b && w) {
                                                    for (var A = w; A && !A.responds("mousedrag");) A = A._parent;
                                                    A && (m = w)
                                                }
                                                d = i
                                            } else k.up && (b || w !== f || (_ = Date.now(), T(this, w, y ? "doubleclick" : "click", e, i, d), y = !1), f = m = null);
                                            S = !1, C = !0
                                        }
                                        p = i, C && o && (x = o._handleMouseEvent(t, e, i, k) || x), !1 !== e.cancelable && (x && !k.move || k.down && l("mouseup")) && e.preventDefault()
                                    },
                                    _handleKeyEvent: function(t, e, i, n) {
                                        var r, s = this._scope,
                                            a = s.tool;

                                        function o(a) {
                                            a.responds(t) && (dt = s, a.emit(t, r = r || new et(t, e, i, n)))
                                        }
                                        this.isVisible() && (o(this), a && a.responds(t) && o(a))
                                    },
                                    _countItemEvent: function(t, e) {
                                        var i = this._itemEvents,
                                            n = i.native,
                                            r = i.virtual;
                                        for (var s in C) n[s] = (n[s] || 0) + (C[s][t] || 0) * e;
                                        r[t] = (r[t] || 0) + e
                                    },
                                    statics: {
                                        updateFocus: A,
                                        _resetState: function() {
                                            s = a = x = S = !1, t = e = d = p = f = g = m = v = _ = y = null
                                        }
                                    }
                                }
                            }

                            function k(t) {
                                var e = $.getTarget(t);
                                return e.getAttribute && K._viewsById[e.getAttribute("id")]
                            }

                            function A() {
                                var t = K._focused;
                                if (!t || !t.isVisible())
                                    for (var i = 0, n = K._views.length; i < n; i++)
                                        if ((t = K._views[i]).isVisible()) {
                                            K._focused = e = t;
                                            break
                                        }
                            }

                            function P(t, e, i) {
                                t._handleMouseEvent("mousemove", e, i)
                            }

                            function M(t, e, i, n, r, s, a) {
                                var o, h = !1;

                                function l(t, i) {
                                    if (t.responds(i)) {
                                        if (o || (o = new nt(i, n, r, e || t, s ? r.subtract(s) : null)), t.emit(i, o) && (x = !0, o.prevented && (b = !0), o.stopped)) return h = !0
                                    } else {
                                        var a = w[i];
                                        if (a) return l(t, a)
                                    }
                                }
                                for (; t && t !== a && !l(t, i);) t = t._parent;
                                return h
                            }

                            function T(t, e, i, n, r, s) {
                                return t._project.removeOn(i), b = x = !1, m && M(m, null, i, n, r, s) || e && e !== m && !e.isDescendant(m) && M(e, null, "mousedrag" === i ? "mousemove" : i, n, r, s, m) || M(t, m || e || t, i, n, r, s)
                            }
                        }),
                        J = K.extend({
                            _class: "CanvasView",
                            initialize: function(t, e) {
                                if (!(e instanceof h.HTMLCanvasElement)) {
                                    var i = x.read(arguments, 1);
                                    if (i.isZero()) throw new Error("Cannot create CanvasView with the provided argument: " + c.slice(arguments, 1));
                                    e = ht.getCanvas(i)
                                }
                                var n = this._context = e.getContext("2d");
                                if (n.save(), this._pixelRatio = 1, !/^off|false$/.test(d.getAttribute(e, "hidpi"))) {
                                    var r = h.devicePixelRatio || 1,
                                        s = Q.getPrefixed(n, "backingStorePixelRatio") || 1;
                                    this._pixelRatio = r / s
                                }
                                K.call(this, t, e), this._needsUpdate = !0
                            },
                            remove: function t() {
                                return this._context.restore(), t.base.call(this)
                            },
                            _setElementSize: function t(e, i) {
                                var n = this._pixelRatio;
                                if (t.base.call(this, e * n, i * n), 1 !== n) {
                                    var r = this._element,
                                        s = this._context;
                                    if (!d.hasAttribute(r, "resize")) {
                                        var a = r.style;
                                        a.width = e + "px", a.height = i + "px"
                                    }
                                    s.restore(), s.save(), s.scale(n, n)
                                }
                            },
                            getContext: function() {
                                return this._context
                            },
                            getPixelSize: function t(e) {
                                var i, n = dt.agent;
                                if (n && n.firefox) i = t.base.call(this, e);
                                else {
                                    var r = this._context,
                                        s = r.font;
                                    r.font = e + " serif", i = parseFloat(r.font), r.font = s
                                }
                                return i
                            },
                            getTextWidth: function(t, e) {
                                var i = this._context,
                                    n = i.font,
                                    r = 0;
                                i.font = t;
                                for (var s = 0, a = e.length; s < a; s++) r = Math.max(r, i.measureText(e[s]).width);
                                return i.font = n, r
                            },
                            update: function() {
                                if (!this._needsUpdate) return !1;
                                var t = this._project,
                                    e = this._context,
                                    i = this._viewSize;
                                return e.clearRect(0, 0, i.width + 1, i.height + 1), t && t.draw(e, this._matrix, this._pixelRatio), this._needsUpdate = !1, !0
                            }
                        }),
                        tt = c.extend({
                            _class: "Event",
                            initialize: function(t) {
                                this.event = t, this.type = t && t.type
                            },
                            prevented: !1,
                            stopped: !1,
                            preventDefault: function() {
                                this.prevented = !0, this.event.preventDefault()
                            },
                            stopPropagation: function() {
                                this.stopped = !0, this.event.stopPropagation()
                            },
                            stop: function() {
                                this.stopPropagation(), this.preventDefault()
                            },
                            getTimeStamp: function() {
                                return this.event.timeStamp
                            },
                            getModifiers: function() {
                                return it.modifiers
                            }
                        }),
                        et = tt.extend({
                            _class: "KeyEvent",
                            initialize: function(t, e, i, n) {
                                this.type = t, this.event = e, this.key = i, this.character = n
                            },
                            toString: function() {
                                return "{ type: '" + this.type + "', key: '" + this.key + "', character: '" + this.character + "', modifiers: " + this.getModifiers() + " }"
                            }
                        }),
                        it = new function() {
                            var t, e, i = {
                                    "\t": "tab",
                                    " ": "space",
                                    "\b": "backspace",
                                    "": "delete",
                                    Spacebar: "space",
                                    Del: "delete",
                                    Win: "meta",
                                    Esc: "escape"
                                },
                                n = {
                                    tab: "\t",
                                    space: " ",
                                    enter: "\r"
                                },
                                r = {},
                                s = {},
                                a = new c({
                                    shift: !1,
                                    control: !1,
                                    alt: !1,
                                    meta: !1,
                                    capsLock: !1,
                                    space: !1
                                }).inject({
                                    option: {
                                        get: function() {
                                            return this.alt
                                        }
                                    },
                                    command: {
                                        get: function() {
                                            var t = dt && dt.agent;
                                            return t && t.mac ? this.meta : this.control
                                        }
                                    }
                                });

                            function u(t) {
                                var e = t.key || t.keyIdentifier;
                                return e = /^U\+/.test(e) ? String.fromCharCode(parseInt(e.substr(2), 16)) : /^Arrow[A-Z]/.test(e) ? e.substr(5) : "Unidentified" === e || e === o ? String.fromCharCode(t.keyCode) : e, i[e] || (e.length > 1 ? c.hyphenate(e) : e.toLowerCase())
                            }

                            function d(e, i, n, o) {
                                var h, l = K._focused;
                                if (r[i] = e, e ? s[i] = n : delete s[i], i.length > 1 && (h = c.camelize(i)) in a) {
                                    a[h] = e;
                                    var u = dt && dt.agent;
                                    if ("meta" === h && u && u.mac)
                                        if (e) t = {};
                                        else {
                                            for (var p in t) p in s && d(!1, p, t[p], o);
                                            t = null
                                        }
                                } else e && t && (t[i] = n);
                                l && l._handleKeyEvent(e ? "keydown" : "keyup", o, i, n)
                            }
                            return $.add(l, {
                                keydown: function(t) {
                                    var i = u(t),
                                        r = dt && dt.agent;
                                    i.length > 1 || r && r.chrome && (t.altKey || r.mac && t.metaKey || !r.mac && t.ctrlKey) ? d(!0, i, n[i] || (i.length > 1 ? "" : i), t) : e = i
                                },
                                keypress: function(t) {
                                    if (e) {
                                        var i = u(t),
                                            n = t.charCode,
                                            r = n >= 32 ? String.fromCharCode(n) : i.length > 1 ? "" : i;
                                        i !== e && (i = r.toLowerCase()), d(!0, i, r, t), e = null
                                    }
                                },
                                keyup: function(t) {
                                    var e = u(t);
                                    e in s && d(!1, e, s[e], t)
                                }
                            }), $.add(h, {
                                blur: function(t) {
                                    for (var e in s) d(!1, e, s[e], t)
                                }
                            }), {
                                modifiers: a,
                                isDown: function(t) {
                                    return !!r[t]
                                }
                            }
                        },
                        nt = tt.extend({
                            _class: "MouseEvent",
                            initialize: function(t, e, i, n, r) {
                                this.type = t, this.event = e, this.point = i, this.target = n, this.delta = r
                            },
                            toString: function() {
                                return "{ type: '" + this.type + "', point: " + this.point + ", target: " + this.target + (this.delta ? ", delta: " + this.delta : "") + ", modifiers: " + this.getModifiers() + " }"
                            }
                        }),
                        rt = tt.extend({
                            _class: "ToolEvent",
                            _item: null,
                            initialize: function(t, e, i) {
                                this.tool = t, this.type = e, this.event = i
                            },
                            _choosePoint: function(t, e) {
                                return t || (e ? e.clone() : null)
                            },
                            getPoint: function() {
                                return this._choosePoint(this._point, this.tool._point)
                            },
                            setPoint: function(t) {
                                this._point = t
                            },
                            getLastPoint: function() {
                                return this._choosePoint(this._lastPoint, this.tool._lastPoint)
                            },
                            setLastPoint: function(t) {
                                this._lastPoint = t
                            },
                            getDownPoint: function() {
                                return this._choosePoint(this._downPoint, this.tool._downPoint)
                            },
                            setDownPoint: function(t) {
                                this._downPoint = t
                            },
                            getMiddlePoint: function() {
                                return !this._middlePoint && this.tool._lastPoint ? this.tool._point.add(this.tool._lastPoint).divide(2) : this._middlePoint
                            },
                            setMiddlePoint: function(t) {
                                this._middlePoint = t
                            },
                            getDelta: function() {
                                return !this._delta && this.tool._lastPoint ? this.tool._point.subtract(this.tool._lastPoint) : this._delta
                            },
                            setDelta: function(t) {
                                this._delta = t
                            },
                            getCount: function() {
                                return this.tool[/^mouse(down|up)$/.test(this.type) ? "_downCount" : "_moveCount"]
                            },
                            setCount: function(t) {
                                this.tool[/^mouse(down|up)$/.test(this.type) ? "downCount" : "count"] = t
                            },
                            getItem: function() {
                                if (!this._item) {
                                    var t = this.tool._scope.project.hitTest(this.getPoint());
                                    if (t) {
                                        for (var e = t.item, i = e._parent;
                                            /^(Group|CompoundPath)$/.test(i._class);) e = i, i = i._parent;
                                        this._item = e
                                    }
                                }
                                return this._item
                            },
                            setItem: function(t) {
                                this._item = t
                            },
                            toString: function() {
                                return "{ type: " + this.type + ", point: " + this.getPoint() + ", count: " + this.getCount() + ", modifiers: " + this.getModifiers() + " }"
                            }
                        }),
                        st = p.extend({
                            _class: "Tool",
                            _list: "tools",
                            _reference: "tool",
                            _events: ["onMouseDown", "onMouseUp", "onMouseDrag", "onMouseMove", "onActivate", "onDeactivate", "onEditOptions", "onKeyDown", "onKeyUp"],
                            initialize: function(t) {
                                p.call(this), this._moveCount = -1, this._downCount = -1, this.set(t)
                            },
                            getMinDistance: function() {
                                return this._minDistance
                            },
                            setMinDistance: function(t) {
                                this._minDistance = t, null != t && null != this._maxDistance && t > this._maxDistance && (this._maxDistance = t)
                            },
                            getMaxDistance: function() {
                                return this._maxDistance
                            },
                            setMaxDistance: function(t) {
                                this._maxDistance = t, null != this._minDistance && null != t && t < this._minDistance && (this._minDistance = t)
                            },
                            getFixedDistance: function() {
                                return this._minDistance == this._maxDistance ? this._minDistance : null
                            },
                            setFixedDistance: function(t) {
                                this._minDistance = this._maxDistance = t
                            },
                            _handleMouseEvent: function(t, e, i, n) {
                                dt = this._scope, n.drag && !this.responds(t) && (t = "mousemove");
                                var r = n.move || n.drag,
                                    s = this.responds(t),
                                    a = this.minDistance,
                                    o = this.maxDistance,
                                    h = !1,
                                    l = this;

                                function c(t, e) {
                                    var s = i,
                                        a = r ? l._point : l._downPoint || s;
                                    if (r) {
                                        if (l._moveCount >= 0 && s.equals(a)) return !1;
                                        if (a && (null != t || null != e)) {
                                            var o = s.subtract(a),
                                                h = o.getLength();
                                            if (h < (t || 0)) return !1;
                                            e && (s = a.add(o.normalize(Math.min(h, e))))
                                        }
                                        l._moveCount++
                                    }
                                    return l._point = s, l._lastPoint = a || s, n.down && (l._moveCount = -1, l._downPoint = s, l._downCount++), !0
                                }

                                function u() {
                                    s && (h = l.emit(t, new rt(l, t, e)) || h)
                                }
                                if (n.down) c(), u();
                                else if (n.up) c(null, o), u();
                                else if (s)
                                    for (; c(a, o);) u();
                                return h
                            }
                        }),
                        at = c.extend(u, {
                            _class: "Tween",
                            statics: {
                                easings: new c({
                                    linear: function(t) {
                                        return t
                                    },
                                    easeInQuad: function(t) {
                                        return t * t
                                    },
                                    easeOutQuad: function(t) {
                                        return t * (2 - t)
                                    },
                                    easeInOutQuad: function(t) {
                                        return t < .5 ? 2 * t * t : 2 * (2 - t) * t - 1
                                    },
                                    easeInCubic: function(t) {
                                        return t * t * t
                                    },
                                    easeOutCubic: function(t) {
                                        return --t * t * t + 1
                                    },
                                    easeInOutCubic: function(t) {
                                        return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
                                    },
                                    easeInQuart: function(t) {
                                        return t * t * t * t
                                    },
                                    easeOutQuart: function(t) {
                                        return 1 - --t * t * t * t
                                    },
                                    easeInOutQuart: function(t) {
                                        return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t
                                    },
                                    easeInQuint: function(t) {
                                        return t * t * t * t * t
                                    },
                                    easeOutQuint: function(t) {
                                        return 1 + --t * t * t * t * t
                                    },
                                    easeInOutQuint: function(t) {
                                        return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t
                                    }
                                })
                            },
                            initialize: function t(e, i, n, r, s, a) {
                                this.object = e;
                                var o = typeof s,
                                    h = "function" === o;
                                this.type = h ? o : "string" === o ? s : "linear", this.easing = h ? s : t.easings[this.type], this.duration = r, this.running = !1, this._then = null, this._startTime = null;
                                var l = i || n;
                                this._keys = l ? Object.keys(l) : [], this._parsedKeys = this._parseKeys(this._keys), this._from = l && this._getState(i), this._to = l && this._getState(n), !1 !== a && this.start()
                            },
                            then: function(t) {
                                return this._then = t, this
                            },
                            start: function() {
                                return this._startTime = null, this.running = !0, this
                            },
                            stop: function() {
                                return this.running = !1, this
                            },
                            update: function(t) {
                                if (this.running) {
                                    t >= 1 && (t = 1, this.running = !1);
                                    for (var e = this.easing(t), i = this._keys, n = function(i) {
                                            return "function" == typeof i ? i(e, t) : i
                                        }, r = 0, s = i && i.length; r < s; r++) {
                                        var a = i[r],
                                            o = n(this._from[a]),
                                            h = n(this._to[a]),
                                            l = o && h && o.__add && h.__add ? h.__subtract(o).__multiply(e).__add(o) : (h - o) * e + o;
                                        this._setProperty(this._parsedKeys[a], l)
                                    }
                                    this.responds("update") && this.emit("update", new c({
                                        progress: t,
                                        factor: e
                                    })), !this.running && this._then && this._then(this.object)
                                }
                                return this
                            },
                            _events: {
                                onUpdate: {}
                            },
                            _handleFrame: function(t) {
                                var e = this._startTime,
                                    i = e ? (t - e) / this.duration : 0;
                                e || (this._startTime = t), this.update(i)
                            },
                            _getState: function(t) {
                                for (var e = this._keys, i = {}, n = 0, r = e.length; n < r; n++) {
                                    var s, a = e[n],
                                        o = this._parsedKeys[a],
                                        h = this._getProperty(o);
                                    if (t) {
                                        var l = this._resolveValue(h, t[a]);
                                        this._setProperty(o, l), s = (s = this._getProperty(o)) && s.clone ? s.clone() : s, this._setProperty(o, h)
                                    } else s = h && h.clone ? h.clone() : h;
                                    i[a] = s
                                }
                                return i
                            },
                            _resolveValue: function(t, e) {
                                if (e) {
                                    if (Array.isArray(e) && 2 === e.length) {
                                        var i = e[0];
                                        return i && i.match && i.match(/^[+\-\*\/]=/) ? this._calculate(t, i[0], e[1]) : e
                                    }
                                    if ("string" == typeof e) {
                                        var n = e.match(/^[+\-*/]=(.*)/);
                                        if (n) {
                                            var r = JSON.parse(n[1].replace(/(['"])?([a-zA-Z0-9_]+)(['"])?:/g, '"$2": '));
                                            return this._calculate(t, e[0], r)
                                        }
                                    }
                                }
                                return e
                            },
                            _calculate: function(t, e, i) {
                                return dt.PaperScript.calculateBinary(t, e, i)
                            },
                            _parseKeys: function(t) {
                                for (var e = {}, i = 0, n = t.length; i < n; i++) {
                                    var r = t[i],
                                        s = r.replace(/\.([^.]*)/g, "/$1").replace(/\[['"]?([^'"\]]*)['"]?\]/g, "/$1");
                                    e[r] = s.split("/")
                                }
                                return e
                            },
                            _getProperty: function(t, e) {
                                for (var i = this.object, n = 0, r = t.length - (e || 0); n < r && i; n++) i = i[t[n]];
                                return i
                            },
                            _setProperty: function(t, e) {
                                var i = this._getProperty(t, 1);
                                i && (i[t[t.length - 1]] = e)
                            }
                        }),
                        ot = function(t) {
                            var e = new a.XMLHttpRequest;
                            return e.open((t.method || "get").toUpperCase(), t.url, c.pick(t.async, !0)), t.mimeType && e.overrideMimeType(t.mimeType), e.onload = function() {
                                var i = e.status;
                                0 === i || 200 === i ? t.onLoad && t.onLoad.call(e, e.responseText) : e.onerror()
                            }, e.onerror = function() {
                                var i = e.status,
                                    n = 'Could not load "' + t.url + '" (Status: ' + i + ")";
                                if (!t.onError) throw new Error(n);
                                t.onError(n, i)
                            }, e.send(null)
                        },
                        ht = c.exports.CanvasProvider = {
                            canvases: [],
                            getCanvas: function(t, e) {
                                if (!h) return null;
                                var i, n = !0;
                                "object" == typeof t && (e = t.height, t = t.width), this.canvases.length ? i = this.canvases.pop() : (i = l.createElement("canvas"), n = !1);
                                var r = i.getContext("2d");
                                if (!r) throw new Error("Canvas " + i + " is unable to provide a 2D context.");
                                return i.width === t && i.height === e ? n && r.clearRect(0, 0, t + 1, e + 1) : (i.width = t, i.height = e), r.save(), i
                            },
                            getContext: function(t, e) {
                                var i = this.getCanvas(t, e);
                                return i ? i.getContext("2d") : null
                            },
                            release: function(t) {
                                var e = t && t.canvas ? t.canvas : t;
                                e && e.getContext && (e.getContext("2d").restore(), this.canvases.push(e))
                            }
                        },
                        lt = new function() {
                            var t, e, i, n, r, s, a, o, h, l, u, d = Math.min,
                                p = Math.max,
                                f = Math.abs;

                            function g(t, e, i) {
                                return .2989 * t + .587 * e + .114 * i
                            }

                            function m(t, e, i, n) {
                                var r = n - g(t, e, i),
                                    s = (n = g(h = t + r, l = e + r, u = i + r), d(h, l, u)),
                                    a = p(h, l, u);
                                if (s < 0) {
                                    var o = n - s;
                                    h = n + (h - n) * n / o, l = n + (l - n) * n / o, u = n + (u - n) * n / o
                                }
                                if (a > 255) {
                                    var c = 255 - n,
                                        f = a - n;
                                    h = n + (h - n) * c / f, l = n + (l - n) * c / f, u = n + (u - n) * c / f
                                }
                            }

                            function v(t, e, i) {
                                return p(t, e, i) - d(t, e, i)
                            }

                            function _(t, e, i, n) {
                                var r, s = [t, e, i],
                                    a = p(t, e, i),
                                    o = d(t, e, i);
                                r = 0 === d(o = o === t ? 0 : o === e ? 1 : 2, a = a === t ? 0 : a === e ? 1 : 2) ? 1 === p(o, a) ? 2 : 1 : 0, s[a] > s[o] ? (s[r] = (s[r] - s[o]) * n / (s[a] - s[o]), s[a] = n) : s[r] = s[a] = 0, s[o] = 0, h = s[0], l = s[1], u = s[2]
                            }
                            var y = {
                                    multiply: function() {
                                        h = r * t / 255, l = s * e / 255, u = a * i / 255
                                    },
                                    screen: function() {
                                        h = r + t - r * t / 255, l = s + e - s * e / 255, u = a + i - a * i / 255
                                    },
                                    overlay: function() {
                                        h = r < 128 ? 2 * r * t / 255 : 255 - 2 * (255 - r) * (255 - t) / 255, l = s < 128 ? 2 * s * e / 255 : 255 - 2 * (255 - s) * (255 - e) / 255, u = a < 128 ? 2 * a * i / 255 : 255 - 2 * (255 - a) * (255 - i) / 255
                                    },
                                    "soft-light": function() {
                                        var n = t * r / 255;
                                        h = n + r * (255 - (255 - r) * (255 - t) / 255 - n) / 255, l = (n = e * s / 255) + s * (255 - (255 - s) * (255 - e) / 255 - n) / 255, u = (n = i * a / 255) + a * (255 - (255 - a) * (255 - i) / 255 - n) / 255
                                    },
                                    "hard-light": function() {
                                        h = t < 128 ? 2 * t * r / 255 : 255 - 2 * (255 - t) * (255 - r) / 255, l = e < 128 ? 2 * e * s / 255 : 255 - 2 * (255 - e) * (255 - s) / 255, u = i < 128 ? 2 * i * a / 255 : 255 - 2 * (255 - i) * (255 - a) / 255
                                    },
                                    "color-dodge": function() {
                                        h = 0 === r ? 0 : 255 === t ? 255 : d(255, 255 * r / (255 - t)), l = 0 === s ? 0 : 255 === e ? 255 : d(255, 255 * s / (255 - e)), u = 0 === a ? 0 : 255 === i ? 255 : d(255, 255 * a / (255 - i))
                                    },
                                    "color-burn": function() {
                                        h = 255 === r ? 255 : 0 === t ? 0 : p(0, 255 - 255 * (255 - r) / t), l = 255 === s ? 255 : 0 === e ? 0 : p(0, 255 - 255 * (255 - s) / e), u = 255 === a ? 255 : 0 === i ? 0 : p(0, 255 - 255 * (255 - a) / i)
                                    },
                                    darken: function() {
                                        h = r < t ? r : t, l = s < e ? s : e, u = a < i ? a : i
                                    },
                                    lighten: function() {
                                        h = r > t ? r : t, l = s > e ? s : e, u = a > i ? a : i
                                    },
                                    difference: function() {
                                        (h = r - t) < 0 && (h = -h), (l = s - e) < 0 && (l = -l), (u = a - i) < 0 && (u = -u)
                                    },
                                    exclusion: function() {
                                        h = r + t * (255 - r - r) / 255, l = s + e * (255 - s - s) / 255, u = a + i * (255 - a - a) / 255
                                    },
                                    hue: function() {
                                        _(t, e, i, v(r, s, a)), m(h, l, u, g(r, s, a))
                                    },
                                    saturation: function() {
                                        _(r, s, a, v(t, e, i)), m(h, l, u, g(r, s, a))
                                    },
                                    luminosity: function() {
                                        m(r, s, a, g(t, e, i))
                                    },
                                    color: function() {
                                        m(t, e, i, g(r, s, a))
                                    },
                                    add: function() {
                                        h = d(r + t, 255), l = d(s + e, 255), u = d(a + i, 255)
                                    },
                                    subtract: function() {
                                        h = p(r - t, 0), l = p(s - e, 0), u = p(a - i, 0)
                                    },
                                    average: function() {
                                        h = (r + t) / 2, l = (s + e) / 2, u = (a + i) / 2
                                    },
                                    negation: function() {
                                        h = 255 - f(255 - t - r), l = 255 - f(255 - e - s), u = 255 - f(255 - i - a)
                                    }
                                },
                                x = this.nativeModes = c.each(["source-over", "source-in", "source-out", "source-atop", "destination-over", "destination-in", "destination-out", "destination-atop", "lighter", "darker", "copy", "xor"], (function(t) {
                                    this[t] = !0
                                }), {}),
                                b = ht.getContext(1, 1);
                            b && (c.each(y, (function(t, e) {
                                var i = "darken" === e,
                                    n = !1;
                                b.save();
                                try {
                                    b.fillStyle = i ? "#300" : "#a00", b.fillRect(0, 0, 1, 1), b.globalCompositeOperation = e, b.globalCompositeOperation === e && (b.fillStyle = i ? "#a00" : "#300", b.fillRect(0, 0, 1, 1), n = b.getImageData(0, 0, 1, 1).data[0] !== i ? 170 : 51)
                                } catch (t) {}
                                b.restore(), x[e] = n
                            })), ht.release(b)), this.process = function(c, d, p, f, g) {
                                var m = d.canvas,
                                    v = "normal" === c;
                                if (v || x[c]) p.save(), p.setTransform(1, 0, 0, 1, 0, 0), p.globalAlpha = f, v || (p.globalCompositeOperation = c), p.drawImage(m, g.x, g.y), p.restore();
                                else {
                                    var _ = y[c];
                                    if (!_) return;
                                    for (var b = p.getImageData(g.x, g.y, m.width, m.height), w = b.data, S = d.getImageData(0, 0, m.width, m.height).data, C = 0, k = w.length; C < k; C += 4) {
                                        t = S[C], r = w[C], e = S[C + 1], s = w[C + 1], i = S[C + 2], a = w[C + 2], n = S[C + 3], o = w[C + 3], _();
                                        var A = n * f / 255,
                                            P = 1 - A;
                                        w[C] = A * h + P * r, w[C + 1] = A * l + P * s, w[C + 2] = A * u + P * a, w[C + 3] = n * f + P * o
                                    }
                                    p.putImageData(b, g.x, g.y)
                                }
                            }
                        },
                        ct = new function() {
                            var t = "http://www.w3.org/2000/svg",
                                e = "http://www.w3.org/2000/xmlns",
                                i = "http://www.w3.org/1999/xlink",
                                n = {
                                    href: i,
                                    xlink: e,
                                    xmlns: e + "/",
                                    "xmlns:xlink": e + "/"
                                };

                            function r(t, e, i) {
                                for (var r in e) {
                                    var s = e[r],
                                        a = n[r];
                                    "number" == typeof s && i && (s = i.number(s)), a ? t.setAttributeNS(a, r, s) : t.setAttribute(r, s)
                                }
                                return t
                            }
                            return {
                                svg: t,
                                xmlns: e,
                                xlink: i,
                                create: function(e, i, n) {
                                    return r(l.createElementNS(t, e), i, n)
                                },
                                get: function(t, e) {
                                    var i = n[e],
                                        r = i ? t.getAttributeNS(i, e) : t.getAttribute(e);
                                    return "null" === r ? null : r
                                },
                                set: r
                            }
                        },
                        ut = c.each({
                            fillColor: ["fill", "color"],
                            fillRule: ["fill-rule", "string"],
                            strokeColor: ["stroke", "color"],
                            strokeWidth: ["stroke-width", "number"],
                            strokeCap: ["stroke-linecap", "string"],
                            strokeJoin: ["stroke-linejoin", "string"],
                            strokeScaling: ["vector-effect", "lookup", {
                                true: "none",
                                false: "non-scaling-stroke"
                            }, function(t, e) {
                                return !e && (t instanceof V || t instanceof E || t instanceof W)
                            }],
                            miterLimit: ["stroke-miterlimit", "number"],
                            dashArray: ["stroke-dasharray", "array"],
                            dashOffset: ["stroke-dashoffset", "number"],
                            fontFamily: ["font-family", "string"],
                            fontWeight: ["font-weight", "string"],
                            fontSize: ["font-size", "number"],
                            justification: ["text-anchor", "lookup", {
                                left: "start",
                                center: "middle",
                                right: "end"
                            }],
                            opacity: ["opacity", "number"],
                            blendMode: ["mix-blend-mode", "style"]
                        }, (function(t, e) {
                            var i = c.capitalize(e),
                                n = t[2];
                            this[e] = {
                                type: t[1],
                                property: e,
                                attribute: t[0],
                                toSVG: n,
                                fromSVG: n && c.each(n, (function(t, e) {
                                    this[t] = e
                                }), {}),
                                exportFilter: t[3],
                                get: "get" + i,
                                set: "set" + i
                            }
                        }), {});
                    new function() {
                        var t;

                        function e(e, i, n) {
                            var r, s = new c,
                                a = e.getTranslation();
                            i && (e.isInvertible() ? (r = (e = e._shiftless())._inverseTransform(a), a = null) : r = new _, s[n ? "cx" : "x"] = r.x, s[n ? "cy" : "y"] = r.y);
                            if (!e.isIdentity()) {
                                var o = e.decompose();
                                if (o) {
                                    var h = [],
                                        l = o.rotation,
                                        u = o.scaling,
                                        d = o.skewing;
                                    a && !a.isZero() && h.push("translate(" + t.point(a) + ")"), l && h.push("rotate(" + t.number(l) + ")"), m.isZero(u.x - 1) && m.isZero(u.y - 1) || h.push("scale(" + t.point(u) + ")"), d.x && h.push("skewX(" + t.number(d.x) + ")"), d.y && h.push("skewY(" + t.number(d.y) + ")"), s.transform = h.join(" ")
                                } else s.transform = "matrix(" + e.getValues().join(",") + ")"
                            }
                            return s
                        }

                        function i(i, n) {
                            for (var r = e(i._matrix), s = i._children, a = ct.create("g", r, t), o = 0, h = s.length; o < h; o++) {
                                var c = s[o],
                                    u = d(c, n);
                                if (u)
                                    if (c.isClipMask()) {
                                        var p = ct.create("clipPath");
                                        p.appendChild(u), l(c, p, "clip"), ct.set(a, {
                                            "clip-path": "url(#" + p.id + ")"
                                        })
                                    } else a.appendChild(u)
                            }
                            return a
                        }

                        function n(i) {
                            var n = i._type,
                                r = i._radius,
                                s = e(i._matrix, !0, "rectangle" !== n);
                            if ("rectangle" === n) {
                                n = "rect";
                                var a = i._size,
                                    o = a.width,
                                    h = a.height;
                                s.x -= o / 2, s.y -= h / 2, s.width = o, s.height = h, r.isZero() && (r = null)
                            }
                            return r && ("circle" === n ? s.r = r : (s.rx = r.width, s.ry = r.height)), ct.create(n, s, t)
                        }
                        var r, s = {
                            Group: i,
                            Layer: i,
                            Raster: function(i, n) {
                                var r = e(i._matrix, !0),
                                    s = i.getSize(),
                                    a = i.getImage();
                                return r.x -= s.width / 2, r.y -= s.height / 2, r.width = s.width, r.height = s.height, r.href = 0 == n.embedImages && a && a.src || i.toDataURL(), ct.create("image", r, t)
                            },
                            Path: function(i, r) {
                                var s = r.matchShapes;
                                if (s) {
                                    var a = i.toShape(!1);
                                    if (a) return n(a)
                                }
                                var o, h = i._segments,
                                    l = h.length,
                                    c = e(i._matrix);
                                if (s && l >= 2 && !i.hasHandles())
                                    if (l > 2) {
                                        o = i._closed ? "polygon" : "polyline";
                                        for (var u = [], d = 0; d < l; d++) u.push(t.point(h[d]._point));
                                        c.points = u.join(" ")
                                    } else {
                                        o = "line";
                                        var p = h[0]._point,
                                            f = h[1]._point;
                                        c.set({
                                            x1: p.x,
                                            y1: p.y,
                                            x2: f.x,
                                            y2: f.y
                                        })
                                    }
                                else o = "path", c.d = i.getPathData(null, r.precision);
                                return ct.create(o, c, t)
                            },
                            Shape: n,
                            CompoundPath: function(i, n) {
                                var r = e(i._matrix),
                                    s = i.getPathData(null, n.precision);
                                return s && (r.d = s), ct.create("path", r, t)
                            },
                            SymbolItem: function(i, n) {
                                var r = e(i._matrix, !0),
                                    s = i._definition,
                                    a = h(s, "symbol"),
                                    o = s._item,
                                    c = o.getStrokeBounds();
                                return a || ((a = ct.create("symbol", {
                                    viewBox: t.rectangle(c)
                                })).appendChild(d(o, n)), l(s, a, "symbol")), r.href = "#" + a.id, r.x += c.x, r.y += c.y, r.width = c.width, r.height = c.height, r.overflow = "visible", ct.create("use", r, t)
                            },
                            PointText: function(i) {
                                var n = ct.create("text", e(i._matrix, !0), t);
                                return n.textContent = i._content, n
                            }
                        };

                        function o(e, i, n) {
                            var r = {},
                                s = !n && e.getParent(),
                                a = [];
                            return null != e._name && (r.id = e._name), c.each(ut, (function(i) {
                                var n = i.get,
                                    o = i.type,
                                    u = e[n]();
                                if (i.exportFilter ? i.exportFilter(e, u) : !s || !c.equals(s[n](), u)) {
                                    if ("color" === o && null != u) {
                                        var d = u.getAlpha();
                                        d < 1 && (r[i.attribute + "-opacity"] = d)
                                    }
                                    "style" === o ? a.push(i.attribute + ": " + u) : r[i.attribute] = null == u ? "none" : "color" === o ? u.gradient ? function(e) {
                                        var i = h(e, "color");
                                        if (!i) {
                                            var n, r = e.getGradient(),
                                                s = r._radial,
                                                a = e.getOrigin(),
                                                o = e.getDestination();
                                            if (s) {
                                                n = {
                                                    cx: a.x,
                                                    cy: a.y,
                                                    r: a.getDistance(o)
                                                };
                                                var c = e.getHighlight();
                                                c && (n.fx = c.x, n.fy = c.y)
                                            } else n = {
                                                x1: a.x,
                                                y1: a.y,
                                                x2: o.x,
                                                y2: o.y
                                            };
                                            n.gradientUnits = "userSpaceOnUse", i = ct.create((s ? "radial" : "linear") + "Gradient", n, t);
                                            for (var u = r._stops, d = 0, p = u.length; d < p; d++) {
                                                var f = u[d],
                                                    g = f._color,
                                                    m = g.getAlpha(),
                                                    v = f._offset;
                                                n = {
                                                    offset: null == v ? d / (p - 1) : v
                                                }, g && (n["stop-color"] = g.toCSS(!0)), m < 1 && (n["stop-opacity"] = m), i.appendChild(ct.create("stop", n, t))
                                            }
                                            l(e, i, "color")
                                        }
                                        return "url(#" + i.id + ")"
                                    }(u) : u.toCSS(!0) : "array" === o ? u.join(",") : "lookup" === o ? i.toSVG[u] : u
                                }
                            })), a.length && (r.style = a.join(";")), 1 === r.opacity && delete r.opacity, e._visible || (r.visibility = "hidden"), ct.set(i, r, t)
                        }

                        function h(t, e) {
                            return r || (r = {
                                ids: {},
                                svgs: {}
                            }), t && r.svgs[e + "-" + (t._id || t.__id || (t.__id = v.get("svg")))]
                        }

                        function l(t, e, i) {
                            r || h();
                            var n = r.ids[i] = (r.ids[i] || 0) + 1;
                            e.id = i + "-" + n, r.svgs[i + "-" + (t._id || t.__id)] = e
                        }

                        function u(t, e) {
                            var i = t,
                                n = null;
                            if (r) {
                                for (var s in i = "svg" === t.nodeName.toLowerCase() && t, r.svgs) n || (i || (i = ct.create("svg")).appendChild(t), n = i.insertBefore(ct.create("defs"), i.firstChild)), n.appendChild(r.svgs[s]);
                                r = null
                            }
                            return e.asString ? (new a.XMLSerializer).serializeToString(i) : i
                        }

                        function d(t, e, i) {
                            var n = s[t._class],
                                r = n && n(t, e);
                            if (r) {
                                var a = e.onExport;
                                a && (r = a(t, r, e) || r);
                                var h = JSON.stringify(t._data);
                                h && "{}" !== h && "null" !== h && r.setAttribute("data-paper-data", h)
                            }
                            return r && o(t, r, i)
                        }

                        function p(e) {
                            return e || (e = {}), t = new g(e.precision), e
                        }
                        P.inject({
                            exportSVG: function(t) {
                                return u(d(this, t = p(t), !0), t)
                            }
                        }), A.inject({
                            exportSVG: function(i) {
                                i = p(i);
                                var n = this._children,
                                    r = this.getView(),
                                    s = c.pick(i.bounds, "view"),
                                    a = i.matrix || "view" === s && r._matrix,
                                    o = a && C.read([a]),
                                    h = "view" === s ? new w([0, 0], r.getViewSize()) : "content" === s ? P._getBounds(n, o, {
                                        stroke: !0
                                    }).rect : w.read([s], 0, {
                                        readNull: !0
                                    }),
                                    l = {
                                        version: "1.1",
                                        xmlns: ct.svg,
                                        "xmlns:xlink": ct.xlink
                                    };
                                h && (l.width = h.width, l.height = h.height, (h.x || 0 === h.x || h.y || 0 === h.y) && (l.viewBox = t.rectangle(h)));
                                var f = ct.create("svg", l, t),
                                    g = f;
                                o && !o.isIdentity() && (g = f.appendChild(ct.create("g", e(o), t)));
                                for (var m = 0, v = n.length; m < v; m++) g.appendChild(d(n[m], i, !0));
                                return u(f, i)
                            }
                        })
                    }, new function() {
                        var t, e = {};

                        function i(e, i, n, r, s, a) {
                            var o = ct.get(e, i) || a,
                                h = null == o ? r ? null : n ? "" : 0 : n ? o : parseFloat(o);
                            return /%\s*$/.test(o) ? h / 100 * (s ? 1 : t[/x|^width/.test(i) ? "width" : "height"]) : h
                        }

                        function n(t, e, n, r, s, a, o) {
                            return e = i(t, e || "x", !1, r, s, a), n = i(t, n || "y", !1, r, s, o), !r || null != e && null != n ? new _(e, n) : null
                        }

                        function r(t, e, n, r, s) {
                            return e = i(t, e || "width", !1, r, s), n = i(t, n || "height", !1, r, s), !r || null != e && null != n ? new x(e, n) : null
                        }

                        function s(t, e, i) {
                            return "none" === t ? null : "number" === e ? parseFloat(t) : "array" === e ? t ? t.split(/[\s,]+/g).map(parseFloat) : [] : "color" === e ? S(t) || t : "lookup" === e ? i[t] : t
                        }

                        function u(t, e, i, n) {
                            var r = t.childNodes,
                                s = "clippath" === e,
                                a = "defs" === e,
                                o = new M,
                                h = o._project,
                                l = h._currentStyle,
                                c = [];
                            if (s || a || (o = b(o, t, n), h._currentStyle = o._style.clone()), n)
                                for (var u = t.querySelectorAll("defs"), d = 0, p = u.length; d < p; d++) k(u[d], i, !1);
                            for (d = 0, p = r.length; d < p; d++) {
                                var f, g = r[d];
                                1 !== g.nodeType || /^defs$/i.test(g.nodeName) || !(f = k(g, i, !1)) || f instanceof L || c.push(f)
                            }
                            return o.addChildren(c), s && (o = b(o.reduce(), t, n)), h._currentStyle = l, (s || a) && (o.remove(), o = null), o
                        }

                        function d(t, e) {
                            for (var i = t.getAttribute("points").match(/[+-]?(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?/g), n = [], r = 0, s = i.length; r < s; r += 2) n.push(new _(parseFloat(i[r]), parseFloat(i[r + 1])));
                            var a = new F(n);
                            return "polygon" === e && a.closePath(), a
                        }

                        function p(t, r) {
                            var s, a = (i(t, "href", !0) || "").substring(1),
                                o = "radialgradient" === r;
                            if (a)(s = e[a].getGradient())._radial ^ o && ((s = s.clone())._radial = o);
                            else {
                                for (var h = t.childNodes, l = [], c = 0, u = h.length; c < u; c++) {
                                    var d = h[c];
                                    1 === d.nodeType && l.push(b(new G, d))
                                }
                                s = new X(l, o)
                            }
                            var p, f, g, m = "userSpaceOnUse" !== i(t, "gradientUnits", !0);
                            return o ? (f = (p = n(t, "cx", "cy", !1, m, "50%", "50%")).add(i(t, "r", !1, !1, m, "50%"), 0), g = n(t, "fx", "fy", !0, m)) : (p = n(t, "x1", "y1", !1, m, "0%", "0%"), f = n(t, "x2", "y2", !1, m, "100%", "0%")), b(new Y(s, p, f, g), t)._scaleToBounds = m, null
                        }
                        var f = {
                            "#document": function(t, e, i, n) {
                                for (var r = t.childNodes, s = 0, a = r.length; s < a; s++) {
                                    var o = r[s];
                                    if (1 === o.nodeType) return k(o, i, n)
                                }
                            },
                            g: u,
                            svg: u,
                            clippath: u,
                            polygon: d,
                            polyline: d,
                            path: function(t) {
                                return V.create(t.getAttribute("d"))
                            },
                            lineargradient: p,
                            radialgradient: p,
                            image: function(t) {
                                var e = new I(i(t, "href", !0));
                                return e.on("load", (function() {
                                    var e = r(t);
                                    this.setSize(e);
                                    var i = n(t).add(e.divide(2));
                                    this._matrix.append((new C).translate(i))
                                })), e
                            },
                            symbol: function(t, e, i, n) {
                                return new L(u(t, e, i, n), !0)
                            },
                            defs: u,
                            use: function(t) {
                                var r = (i(t, "href", !0) || "").substring(1),
                                    s = e[r],
                                    a = n(t);
                                return s ? s instanceof L ? s.place(a) : s.clone().translate(a) : null
                            },
                            circle: function(t) {
                                return new E.Circle(n(t, "cx", "cy"), i(t, "r"))
                            },
                            ellipse: function(t) {
                                return new E.Ellipse({
                                    center: n(t, "cx", "cy"),
                                    radius: r(t, "rx", "ry")
                                })
                            },
                            rect: function(t) {
                                return new E.Rectangle(new w(n(t), r(t)), r(t, "rx", "ry"))
                            },
                            line: function(t) {
                                return new F.Line(n(t, "x1", "y1"), n(t, "x2", "y2"))
                            },
                            text: function(t) {
                                var e = new U(n(t).add(n(t, "dx", "dy")));
                                return e.setContent(t.textContent.trim() || ""), e
                            },
                            switch: u
                        };

                        function g(t, e, i, n) {
                            if (t.transform) {
                                for (var r = (n.getAttribute(i) || "").split(/\)\s*/g), s = new C, a = 0, o = r.length; a < o; a++) {
                                    var h = r[a];
                                    if (!h) break;
                                    for (var l = h.split(/\(\s*/), c = l[0], u = l[1].split(/[\s,]+/g), d = 0, p = u.length; d < p; d++) u[d] = parseFloat(u[d]);
                                    switch (c) {
                                        case "matrix":
                                            s.append(new C(u[0], u[1], u[2], u[3], u[4], u[5]));
                                            break;
                                        case "rotate":
                                            s.rotate(u[0], u[1] || 0, u[2] || 0);
                                            break;
                                        case "translate":
                                            s.translate(u[0], u[1] || 0);
                                            break;
                                        case "scale":
                                            s.scale(u);
                                            break;
                                        case "skewX":
                                            s.skew(u[0], 0);
                                            break;
                                        case "skewY":
                                            s.skew(0, u[0])
                                    }
                                }
                                t.transform(s)
                            }
                        }

                        function m(t, e, i) {
                            var n = "fill-opacity" === i ? "getFillColor" : "getStrokeColor",
                                r = t[n] && t[n]();
                            r && r.setAlpha(parseFloat(e))
                        }
                        var v = c.set(c.each(ut, (function(t) {
                            this[t.attribute] = function(e, i) {
                                if (e[t.set] && (e[t.set](s(i, t.type, t.fromSVG)), "color" === t.type)) {
                                    var n = e[t.get]();
                                    if (n && n._scaleToBounds) {
                                        var r = e.getBounds();
                                        n.transform((new C).translate(r.getPoint()).scale(r.getSize()))
                                    }
                                }
                            }
                        }), {}), {
                            id: function(t, i) {
                                e[i] = t, t.setName && t.setName(i)
                            },
                            "clip-path": function(t, e) {
                                var i = S(e);
                                if (i) {
                                    if ((i = i.clone()).setClipMask(!0), !(t instanceof M)) return new M(i, t);
                                    t.insertChild(0, i)
                                }
                            },
                            gradientTransform: g,
                            transform: g,
                            "fill-opacity": m,
                            "stroke-opacity": m,
                            visibility: function(t, e) {
                                t.setVisible && t.setVisible("visible" === e)
                            },
                            display: function(t, e) {
                                t.setVisible && t.setVisible(null !== e)
                            },
                            "stop-color": function(t, e) {
                                t.setColor && t.setColor(e)
                            },
                            "stop-opacity": function(t, e) {
                                t._color && t._color.setAlpha(parseFloat(e))
                            },
                            offset: function(t, e) {
                                if (t.setOffset) {
                                    var i = e.match(/(.*)%$/);
                                    t.setOffset(i ? i[1] / 100 : parseFloat(e))
                                }
                            },
                            viewBox: function(t, e, i, n, a) {
                                var o, h = new w(s(e, "array")),
                                    l = r(n, null, null, !0);
                                if (t instanceof M) {
                                    var c = l ? l.divide(h.getSize()) : 1,
                                        u = (new C).scale(c).translate(h.getPoint().negate());
                                    o = t
                                } else t instanceof L && (l && h.setSize(l), o = t._item);
                                if (o) {
                                    if ("visible" !== y(n, "overflow", a)) {
                                        var d = new E.Rectangle(h);
                                        d.setClipMask(!0), o.addChild(d)
                                    }
                                    u && o.transform(u)
                                }
                            }
                        });

                        function y(t, e, i) {
                            var n = t.attributes[e],
                                r = n && n.value;
                            if (!r && t.style) {
                                var s = c.camelize(e);
                                (r = t.style[s]) || i.node[s] === i.parent[s] || (r = i.node[s])
                            }
                            return r ? "none" === r ? null : r : o
                        }

                        function b(t, e, i) {
                            var n = e.parentNode,
                                r = {
                                    node: Q.getStyles(e) || {},
                                    parent: !i && !/^defs$/i.test(n.tagName) && Q.getStyles(n) || {}
                                };
                            return c.each(v, (function(i, n) {
                                var s = y(e, n, r);
                                t = s !== o && i(t, s, n, e, r) || t
                            })), t
                        }

                        function S(t) {
                            var i = t && t.match(/\((?:["'#]*)([^"')]+)/),
                                n = i && i[1],
                                r = n && e[h ? n.replace(h.location.href.split("#")[0] + "#", "") : n];
                            return r && r._scaleToBounds && ((r = r.clone())._scaleToBounds = !0), r
                        }

                        function k(i, n, s) {
                            var a, o, h, u = i.nodeName.toLowerCase(),
                                d = "#document" !== u,
                                p = l.body;
                            s && d && (t = dt.getView().getSize(), t = r(i, null, null, !0) || t, a = ct.create("svg", {
                                style: "stroke-width: 1px; stroke-miterlimit: 10"
                            }), o = i.parentNode, h = i.nextSibling, a.appendChild(i), p.appendChild(a));
                            var g = dt.settings,
                                m = g.applyMatrix,
                                v = g.insertItems;
                            g.applyMatrix = !1, g.insertItems = !1;
                            var _ = f[u],
                                y = _ && _(i, u, n, s) || null;
                            if (g.insertItems = v, g.applyMatrix = m, y) {
                                !d || y instanceof M || (y = b(y, i, s));
                                var x = n.onImport,
                                    w = d && i.getAttribute("data-paper-data");
                                x && (y = x(i, y, n) || y), n.expandShapes && y instanceof E && (y.remove(), y = y.toPath()), w && (y._data = JSON.parse(w))
                            }
                            return a && (p.removeChild(a), o && (h ? o.insertBefore(i, h) : o.appendChild(i))), s && (e = {}, y && c.pick(n.applyMatrix, m) && y.matrix.apply(!0, !0)), y
                        }

                        function T(t, e, i) {
                            if (!t) return null;
                            e = "function" == typeof e ? {
                                onLoad: e
                            } : e || {};
                            var n = dt,
                                r = null;

                            function s(s) {
                                try {
                                    var l = "object" == typeof s ? s : (new a.DOMParser).parseFromString(s.trim(), "image/svg+xml");
                                    if (!l.nodeName) throw l = null, new Error("Unsupported SVG source: " + t);
                                    dt = n, r = k(l, e, !0), e && !1 === e.insert || i._insertItem(o, r);
                                    var c = e.onLoad;
                                    c && c(r, s)
                                } catch (t) {
                                    h(t)
                                }
                            }

                            function h(t, i) {
                                var n = e.onError;
                                if (!n) throw new Error(t);
                                n(t, i)
                            }
                            if ("string" != typeof t || /^[\s\S]*</.test(t)) {
                                if ("undefined" != typeof File && t instanceof File) {
                                    var c = new FileReader;
                                    return c.onload = function() {
                                        s(c.result)
                                    }, c.onerror = function() {
                                        h(c.error)
                                    }, c.readAsText(t)
                                }
                                s(t)
                            } else {
                                var u = l.getElementById(t);
                                u ? s(u) : ot({
                                    url: t,
                                    async: !0,
                                    onLoad: s,
                                    onError: h
                                })
                            }
                            return r
                        }
                        P.inject({
                            importSVG: function(t, e) {
                                return T(t, e, this)
                            }
                        }), A.inject({
                            importSVG: function(t, e) {
                                return this.activate(), T(t, e, this)
                            }
                        })
                    }, c.exports.PaperScript = function() {
                        var t, e, u, p = this,
                            f = p.acorn;
                        if (!f) try {
                            f = i(234)
                        } catch (t) {}
                        f || (f = t = e = {}, u = function(t) {
                            "use strict";
                            var e, i, n, r;
                            t.version = "0.5.0", t.parse = function(t, r) {
                                return i = String(t), n = i.length, a(r), Yt(),
                                    function(t) {
                                        v = _ = o, e.locations && (y = new Ut), x = w = null, b = [], Kt();
                                        var i = t || ce(),
                                            n = !0;
                                        for (t || (i.body = []); d !== E;) {
                                            var r = we();
                                            i.body.push(r), n && pe(r) && oe(!0), n = !1
                                        }
                                        return de(i, "Program")
                                    }(e.program)
                            };
                            var s = t.defaultOptions = {
                                ecmaVersion: 5,
                                strictSemicolons: !1,
                                allowTrailingCommas: !0,
                                forbidReserved: !1,
                                allowReturnOutsideFunction: !1,
                                locations: !1,
                                onComment: null,
                                ranges: !1,
                                program: null,
                                sourceFile: null,
                                directSourceFile: null
                            };

                            function a(t) {
                                for (var i in e = t || {}, s) Object.prototype.hasOwnProperty.call(e, i) || (e[i] = s[i]);
                                r = e.sourceFile || null
                            }
                            var o, h, l, c, u, d, p, f, g, m, v, _, y, x, b, w, S = t.getLineInfo = function(t, e) {
                                for (var i = 1, n = 0;;) {
                                    qt.lastIndex = n;
                                    var r = qt.exec(t);
                                    if (!(r && r.index < e)) break;
                                    ++i, n = r.index + r[0].length
                                }
                                return {
                                    line: i,
                                    column: e - n
                                }
                            };

                            function C(t, e) {
                                var n = S(i, t);
                                e += " (" + n.line + ":" + n.column + ")";
                                var r = new SyntaxError(e);
                                throw r.pos = t, r.loc = n, r.raisedAt = o, r
                            }
                            t.tokenize = function(t, r) {
                                i = String(t), n = i.length, a(r), Yt();
                                var s = {};

                                function v(t) {
                                    return _ = l, Kt(t), s.start = h, s.end = l, s.startLoc = c, s.endLoc = u, s.type = d, s.value = p, s
                                }
                                return v.jumpTo = function(t, n) {
                                    var r;
                                    if (o = t, e.locations)
                                        for (g = 1, m = qt.lastIndex = 0;
                                            (r = qt.exec(i)) && r.index < t;) ++g, m = r.index + r[0].length;
                                    f = n, Qt()
                                }, v
                            };
                            var k = [],
                                A = {
                                    type: "num"
                                },
                                P = {
                                    type: "regexp"
                                },
                                M = {
                                    type: "string"
                                },
                                T = {
                                    type: "name"
                                },
                                E = {
                                    type: "eof"
                                },
                                I = {
                                    keyword: "break"
                                },
                                O = {
                                    keyword: "case",
                                    beforeExpr: !0
                                },
                                L = {
                                    keyword: "catch"
                                },
                                D = {
                                    keyword: "continue"
                                },
                                B = {
                                    keyword: "debugger"
                                },
                                R = {
                                    keyword: "default"
                                },
                                z = {
                                    keyword: "do",
                                    isLoop: !0
                                },
                                N = {
                                    keyword: "else",
                                    beforeExpr: !0
                                },
                                V = {
                                    keyword: "finally"
                                },
                                F = {
                                    keyword: "for",
                                    isLoop: !0
                                },
                                j = {
                                    keyword: "function"
                                },
                                q = {
                                    keyword: "if"
                                },
                                H = {
                                    keyword: "return",
                                    beforeExpr: !0
                                },
                                W = {
                                    keyword: "switch"
                                },
                                U = {
                                    keyword: "throw",
                                    beforeExpr: !0
                                },
                                Y = {
                                    keyword: "try"
                                },
                                X = {
                                    keyword: "var"
                                },
                                G = {
                                    keyword: "while",
                                    isLoop: !0
                                },
                                Z = {
                                    keyword: "with"
                                },
                                Q = {
                                    keyword: "new",
                                    beforeExpr: !0
                                },
                                $ = {
                                    keyword: "this"
                                },
                                K = {
                                    keyword: "null",
                                    atomValue: null
                                },
                                J = {
                                    keyword: "true",
                                    atomValue: !0
                                },
                                tt = {
                                    keyword: "false",
                                    atomValue: !1
                                },
                                et = {
                                    keyword: "in",
                                    binop: 7,
                                    beforeExpr: !0
                                },
                                it = {
                                    break: I,
                                    case: O,
                                    catch: L,
                                    continue: D,
                                    debugger: B,
                                    default: R,
                                    do: z,
                                    else: N,
                                    finally: V,
                                    for: F,
                                    function: j,
                                    if: q,
                                    return: H,
                                    switch: W,
                                    throw: U,
                                    try: Y,
                                    var: X,
                                    while: G,
                                    with: Z,
                                    null: K,
                                    true: J,
                                    false: tt,
                                    new: Q,
                                    in: et,
                                    instanceof: {
                                        keyword: "instanceof",
                                        binop: 7,
                                        beforeExpr: !0
                                    },
                                    this: $,
                                    typeof: {
                                        keyword: "typeof",
                                        prefix: !0,
                                        beforeExpr: !0
                                    },
                                    void: {
                                        keyword: "void",
                                        prefix: !0,
                                        beforeExpr: !0
                                    },
                                    delete: {
                                        keyword: "delete",
                                        prefix: !0,
                                        beforeExpr: !0
                                    }
                                },
                                nt = {
                                    type: "[",
                                    beforeExpr: !0
                                },
                                rt = {
                                    type: "]"
                                },
                                st = {
                                    type: "{",
                                    beforeExpr: !0
                                },
                                at = {
                                    type: "}"
                                },
                                ot = {
                                    type: "(",
                                    beforeExpr: !0
                                },
                                ht = {
                                    type: ")"
                                },
                                lt = {
                                    type: ",",
                                    beforeExpr: !0
                                },
                                ct = {
                                    type: ";",
                                    beforeExpr: !0
                                },
                                ut = {
                                    type: ":",
                                    beforeExpr: !0
                                },
                                dt = {
                                    type: "."
                                },
                                pt = {
                                    type: "?",
                                    beforeExpr: !0
                                },
                                ft = {
                                    binop: 10,
                                    beforeExpr: !0
                                },
                                gt = {
                                    isAssign: !0,
                                    beforeExpr: !0
                                },
                                mt = {
                                    isAssign: !0,
                                    beforeExpr: !0
                                },
                                vt = {
                                    postfix: !0,
                                    prefix: !0,
                                    isUpdate: !0
                                },
                                _t = {
                                    prefix: !0,
                                    beforeExpr: !0
                                },
                                yt = {
                                    binop: 1,
                                    beforeExpr: !0
                                },
                                xt = {
                                    binop: 2,
                                    beforeExpr: !0
                                },
                                bt = {
                                    binop: 3,
                                    beforeExpr: !0
                                },
                                wt = {
                                    binop: 4,
                                    beforeExpr: !0
                                },
                                St = {
                                    binop: 5,
                                    beforeExpr: !0
                                },
                                Ct = {
                                    binop: 6,
                                    beforeExpr: !0
                                },
                                kt = {
                                    binop: 7,
                                    beforeExpr: !0
                                },
                                At = {
                                    binop: 8,
                                    beforeExpr: !0
                                },
                                Pt = {
                                    binop: 9,
                                    prefix: !0,
                                    beforeExpr: !0
                                },
                                Mt = {
                                    binop: 10,
                                    beforeExpr: !0
                                };
                            for (var Tt in t.tokTypes = {
                                    bracketL: nt,
                                    bracketR: rt,
                                    braceL: st,
                                    braceR: at,
                                    parenL: ot,
                                    parenR: ht,
                                    comma: lt,
                                    semi: ct,
                                    colon: ut,
                                    dot: dt,
                                    question: pt,
                                    slash: ft,
                                    eq: gt,
                                    name: T,
                                    eof: E,
                                    num: A,
                                    regexp: P,
                                    string: M
                                }, it) t.tokTypes["_" + Tt] = it[Tt];

                            function Et(t) {
                                t = t.split(" ");
                                var e = "",
                                    i = [];
                                t: for (var n = 0; n < t.length; ++n) {
                                    for (var r = 0; r < i.length; ++r)
                                        if (i[r][0].length == t[n].length) {
                                            i[r].push(t[n]);
                                            continue t
                                        }
                                    i.push([t[n]])
                                }

                                function s(t) {
                                    if (1 == t.length) return e += "return str === " + JSON.stringify(t[0]) + ";";
                                    e += "switch(str){";
                                    for (var i = 0; i < t.length; ++i) e += "case " + JSON.stringify(t[i]) + ":";
                                    e += "return true}return false;"
                                }
                                if (i.length > 3) {
                                    for (i.sort((function(t, e) {
                                            return e.length - t.length
                                        })), e += "switch(str.length){", n = 0; n < i.length; ++n) {
                                        var a = i[n];
                                        e += "case " + a[0].length + ":", s(a)
                                    }
                                    e += "}"
                                } else s(t);
                                return new Function("str", e)
                            }
                            var It, Ot = Et("abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile"),
                                Lt = Et("class enum extends super const export import"),
                                Dt = Et("implements interface let package private protected public static yield"),
                                Bt = Et("eval arguments"),
                                Rt = Et("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this"),
                                zt = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
                                Nt = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
                                Vt = new RegExp("[" + Nt + "]"),
                                Ft = new RegExp("[" + Nt + "̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ؚؠ-ىٲ-ۓۧ-ۨۻ-ۼܰ-݊ࠀ-ࠔࠛ-ࠣࠥ-ࠧࠩ-࠭ࡀ-ࡗࣤ-ࣾऀ-ःऺ-़ा-ॏ॑-ॗॢ-ॣ०-९ঁ-ঃ়া-ৄেৈৗয়-ৠਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢ-ૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୟ-ୠ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఁ-ఃె-ైొ-్ౕౖౢ-ౣ౦-౯ಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢ-ೣ೦-೯ംഃെ-ൈൗൢ-ൣ൦-൯ංඃ්ා-ුූෘ-ෟෲෳิ-ฺเ-ๅ๐-๙ິ-ູ່-ໍ໐-໙༘༙༠-༩༹༵༷ཁ-ཇཱ-྄྆-྇ྍ-ྗྙ-ྼ࿆က-ဩ၀-၉ၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟ᜎ-ᜐᜠ-ᜰᝀ-ᝐᝲᝳក-ឲ៝០-៩᠋-᠍᠐-᠙ᤠ-ᤫᤰ-᤻ᥑ-ᥭᦰ-ᧀᧈ-ᧉ᧐-᧙ᨀ-ᨕᨠ-ᩓ᩠-᩿᩼-᪉᪐-᪙ᭆ-ᭋ᭐-᭙᭫-᭳᮰-᮹᯦-᯳ᰀ-ᰢ᱀-᱉ᱛ-ᱽ᳐-᳒ᴀ-ᶾḁ-ἕ‌‍‿⁀⁔⃐-⃥⃜⃡-⃰ⶁ-ⶖⷠ-ⷿ〡-〨゙゚Ꙁ-ꙭꙴ-꙽ꚟ꛰-꛱ꟸ-ꠀ꠆ꠋꠣ-ꠧꢀ-ꢁꢴ-꣄꣐-꣙ꣳ-ꣷ꤀-꤉ꤦ-꤭ꤰ-ꥅꦀ-ꦃ꦳-꧀ꨀ-ꨧꩀ-ꩁꩌ-ꩍ꩐-꩙ꩻꫠ-ꫩꫲ-ꫳꯀ-ꯡ꯬꯭꯰-꯹ﬠ-ﬨ︀-️︠-︦︳︴﹍-﹏０-９＿]"),
                                jt = /[\n\r\u2028\u2029]/,
                                qt = /\r\n|[\n\r\u2028\u2029]/g,
                                Ht = t.isIdentifierStart = function(t) {
                                    return t < 65 ? 36 === t : t < 91 || (t < 97 ? 95 === t : t < 123 || t >= 170 && Vt.test(String.fromCharCode(t)))
                                },
                                Wt = t.isIdentifierChar = function(t) {
                                    return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t < 91 || (t < 97 ? 95 === t : t < 123 || t >= 170 && Ft.test(String.fromCharCode(t))))
                                };

                            function Ut() {
                                this.line = g, this.column = o - m
                            }

                            function Yt() {
                                g = 1, o = m = 0, f = !0, Qt()
                            }

                            function Xt(t, i) {
                                l = o, e.locations && (u = new Ut), d = t, Qt(), p = i, f = t.beforeExpr
                            }

                            function Gt() {
                                var t, n = e.onComment && e.locations && new Ut,
                                    r = o,
                                    s = i.indexOf("*/", o += 2);
                                if (-1 === s && C(o - 2, "Unterminated comment"), o = s + 2, e.locations)
                                    for (qt.lastIndex = r;
                                        (t = qt.exec(i)) && t.index < o;) ++g, m = t.index + t[0].length;
                                e.onComment && e.onComment(!0, i.slice(r + 2, s), r, o, n, e.locations && new Ut)
                            }

                            function Zt() {
                                for (var t = o, r = e.onComment && e.locations && new Ut, s = i.charCodeAt(o += 2); o < n && 10 !== s && 13 !== s && 8232 !== s && 8233 !== s;) ++o, s = i.charCodeAt(o);
                                e.onComment && e.onComment(!1, i.slice(t + 2, o), t, o, r, e.locations && new Ut)
                            }

                            function Qt() {
                                for (; o < n;) {
                                    var t = i.charCodeAt(o);
                                    if (32 === t) ++o;
                                    else if (13 === t) ++o, 10 === (r = i.charCodeAt(o)) && ++o, e.locations && (++g, m = o);
                                    else if (10 === t || 8232 === t || 8233 === t) ++o, e.locations && (++g, m = o);
                                    else if (t > 8 && t < 14) ++o;
                                    else if (47 === t) {
                                        var r;
                                        if (42 === (r = i.charCodeAt(o + 1))) Gt();
                                        else {
                                            if (47 !== r) break;
                                            Zt()
                                        }
                                    } else if (160 === t) ++o;
                                    else {
                                        if (!(t >= 5760 && zt.test(String.fromCharCode(t)))) break;
                                        ++o
                                    }
                                }
                            }

                            function $t(t) {
                                switch (t) {
                                    case 46:
                                        return function() {
                                            var t = i.charCodeAt(o + 1);
                                            return t >= 48 && t <= 57 ? ie(!0) : (++o, Xt(dt))
                                        }();
                                    case 40:
                                        return ++o, Xt(ot);
                                    case 41:
                                        return ++o, Xt(ht);
                                    case 59:
                                        return ++o, Xt(ct);
                                    case 44:
                                        return ++o, Xt(lt);
                                    case 91:
                                        return ++o, Xt(nt);
                                    case 93:
                                        return ++o, Xt(rt);
                                    case 123:
                                        return ++o, Xt(st);
                                    case 125:
                                        return ++o, Xt(at);
                                    case 58:
                                        return ++o, Xt(ut);
                                    case 63:
                                        return ++o, Xt(pt);
                                    case 48:
                                        var r = i.charCodeAt(o + 1);
                                        if (120 === r || 88 === r) return function() {
                                            o += 2;
                                            var t = ee(16);
                                            return null == t && C(h + 2, "Expected hexadecimal number"), Ht(i.charCodeAt(o)) && C(o, "Identifier directly after number"), Xt(A, t)
                                        }();
                                    case 49:
                                    case 50:
                                    case 51:
                                    case 52:
                                    case 53:
                                    case 54:
                                    case 55:
                                    case 56:
                                    case 57:
                                        return ie(!1);
                                    case 34:
                                    case 39:
                                        return function(t) {
                                            o++;
                                            for (var r = "";;) {
                                                o >= n && C(h, "Unterminated string constant");
                                                var s = i.charCodeAt(o);
                                                if (s === t) return ++o, Xt(M, r);
                                                if (92 === s) {
                                                    s = i.charCodeAt(++o);
                                                    var a = /^[0-7]+/.exec(i.slice(o, o + 3));
                                                    for (a && (a = a[0]); a && parseInt(a, 8) > 255;) a = a.slice(0, -1);
                                                    if ("0" === a && (a = null), ++o, a) w && C(o - 2, "Octal literal in strict mode"), r += String.fromCharCode(parseInt(a, 8)), o += a.length - 1;
                                                    else switch (s) {
                                                        case 110:
                                                            r += "\n";
                                                            break;
                                                        case 114:
                                                            r += "\r";
                                                            break;
                                                        case 120:
                                                            r += String.fromCharCode(ne(2));
                                                            break;
                                                        case 117:
                                                            r += String.fromCharCode(ne(4));
                                                            break;
                                                        case 85:
                                                            r += String.fromCharCode(ne(8));
                                                            break;
                                                        case 116:
                                                            r += "\t";
                                                            break;
                                                        case 98:
                                                            r += "\b";
                                                            break;
                                                        case 118:
                                                            r += "\v";
                                                            break;
                                                        case 102:
                                                            r += "\f";
                                                            break;
                                                        case 48:
                                                            r += "\0";
                                                            break;
                                                        case 13:
                                                            10 === i.charCodeAt(o) && ++o;
                                                        case 10:
                                                            e.locations && (m = o, ++g);
                                                            break;
                                                        default:
                                                            r += String.fromCharCode(s)
                                                    }
                                                } else 13 !== s && 10 !== s && 8232 !== s && 8233 !== s || C(h, "Unterminated string constant"), r += String.fromCharCode(s), ++o
                                            }
                                        }(t);
                                    case 47:
                                        return function() {
                                            var t = i.charCodeAt(o + 1);
                                            return f ? (++o, te()) : 61 === t ? Jt(mt, 2) : Jt(ft, 1)
                                        }();
                                    case 37:
                                    case 42:
                                        return 61 === i.charCodeAt(o + 1) ? Jt(mt, 2) : Jt(Mt, 1);
                                    case 124:
                                    case 38:
                                        return function(t) {
                                            var e = i.charCodeAt(o + 1);
                                            return e === t ? Jt(124 === t ? yt : xt, 2) : 61 === e ? Jt(mt, 2) : Jt(124 === t ? bt : St, 1)
                                        }(t);
                                    case 94:
                                        return 61 === i.charCodeAt(o + 1) ? Jt(mt, 2) : Jt(wt, 1);
                                    case 43:
                                    case 45:
                                        return function(t) {
                                            var e = i.charCodeAt(o + 1);
                                            return e === t ? 45 == e && 62 == i.charCodeAt(o + 2) && jt.test(i.slice(_, o)) ? (o += 3, Zt(), Qt(), Kt()) : Jt(vt, 2) : 61 === e ? Jt(mt, 2) : Jt(Pt, 1)
                                        }(t);
                                    case 60:
                                    case 62:
                                        return function(t) {
                                            var e = i.charCodeAt(o + 1),
                                                n = 1;
                                            return e === t ? (n = 62 === t && 62 === i.charCodeAt(o + 2) ? 3 : 2, 61 === i.charCodeAt(o + n) ? Jt(mt, n + 1) : Jt(At, n)) : 33 == e && 60 == t && 45 == i.charCodeAt(o + 2) && 45 == i.charCodeAt(o + 3) ? (o += 4, Zt(), Qt(), Kt()) : (61 === e && (n = 61 === i.charCodeAt(o + 2) ? 3 : 2), Jt(kt, n))
                                        }(t);
                                    case 61:
                                    case 33:
                                        return function(t) {
                                            return 61 === i.charCodeAt(o + 1) ? Jt(Ct, 61 === i.charCodeAt(o + 2) ? 3 : 2) : Jt(61 === t ? gt : _t, 1)
                                        }(t);
                                    case 126:
                                        return Jt(_t, 1)
                                }
                                return !1
                            }

                            function Kt(t) {
                                if (t ? o = h + 1 : h = o, e.locations && (c = new Ut), t) return te();
                                if (o >= n) return Xt(E);
                                var r = i.charCodeAt(o);
                                if (Ht(r) || 92 === r) return se();
                                var s = $t(r);
                                if (!1 === s) {
                                    var a = String.fromCharCode(r);
                                    if ("\\" === a || Vt.test(a)) return se();
                                    C(o, "Unexpected character '" + a + "'")
                                }
                                return s
                            }

                            function Jt(t, e) {
                                var n = i.slice(o, o + e);
                                o += e, Xt(t, n)
                            }

                            function te() {
                                for (var t, e, r = o;;) {
                                    o >= n && C(r, "Unterminated regular expression");
                                    var s = i.charAt(o);
                                    if (jt.test(s) && C(r, "Unterminated regular expression"), t) t = !1;
                                    else {
                                        if ("[" === s) e = !0;
                                        else if ("]" === s && e) e = !1;
                                        else if ("/" === s && !e) break;
                                        t = "\\" === s
                                    }++o
                                }
                                var a = i.slice(r, o);
                                ++o;
                                var h = re();
                                h && !/^[gmsiy]*$/.test(h) && C(r, "Invalid regexp flag");
                                try {
                                    var l = new RegExp(a, h)
                                } catch (t) {
                                    t instanceof SyntaxError && C(r, t.message), C(t)
                                }
                                return Xt(P, l)
                            }

                            function ee(t, e) {
                                for (var n = o, r = 0, s = 0, a = null == e ? 1 / 0 : e; s < a; ++s) {
                                    var h, l = i.charCodeAt(o);
                                    if ((h = l >= 97 ? l - 97 + 10 : l >= 65 ? l - 65 + 10 : l >= 48 && l <= 57 ? l - 48 : 1 / 0) >= t) break;
                                    ++o, r = r * t + h
                                }
                                return o === n || null != e && o - n !== e ? null : r
                            }

                            function ie(t) {
                                var e = o,
                                    n = !1,
                                    r = 48 === i.charCodeAt(o);
                                t || null !== ee(10) || C(e, "Invalid number"), 46 === i.charCodeAt(o) && (++o, ee(10), n = !0);
                                var s = i.charCodeAt(o);
                                69 !== s && 101 !== s || (43 !== (s = i.charCodeAt(++o)) && 45 !== s || ++o, null === ee(10) && C(e, "Invalid number"), n = !0), Ht(i.charCodeAt(o)) && C(o, "Identifier directly after number");
                                var a, h = i.slice(e, o);
                                return n ? a = parseFloat(h) : r && 1 !== h.length ? /[89]/.test(h) || w ? C(e, "Invalid number") : a = parseInt(h, 8) : a = parseInt(h, 10), Xt(A, a)
                            }

                            function ne(t) {
                                var e = ee(16, t);
                                return null === e && C(h, "Bad character escape sequence"), e
                            }

                            function re() {
                                It = !1;
                                for (var t, e = !0, n = o;;) {
                                    var r = i.charCodeAt(o);
                                    if (Wt(r)) It && (t += i.charAt(o)), ++o;
                                    else {
                                        if (92 !== r) break;
                                        It || (t = i.slice(n, o)), It = !0, 117 != i.charCodeAt(++o) && C(o, "Expecting Unicode escape sequence \\uXXXX"), ++o;
                                        var s = ne(4),
                                            a = String.fromCharCode(s);
                                        a || C(o - 1, "Invalid Unicode escape"), (e ? Ht(s) : Wt(s)) || C(o - 4, "Invalid Unicode escape"), t += a
                                    }
                                    e = !1
                                }
                                return It ? t : i.slice(n, o)
                            }

                            function se() {
                                var t = re(),
                                    e = T;
                                return !It && Rt(t) && (e = it[t]), Xt(e, t)
                            }

                            function ae() {
                                v = h, _ = l, y = u, Kt()
                            }

                            function oe(t) {
                                if (w = t, o = h, e.locations)
                                    for (; o < m;) m = i.lastIndexOf("\n", m - 2) + 1, --g;
                                Qt(), Kt()
                            }

                            function he() {
                                this.type = null, this.start = h, this.end = null
                            }

                            function le() {
                                this.start = c, this.end = null, null !== r && (this.source = r)
                            }

                            function ce() {
                                var t = new he;
                                return e.locations && (t.loc = new le), e.directSourceFile && (t.sourceFile = e.directSourceFile), e.ranges && (t.range = [h, 0]), t
                            }

                            function ue(t) {
                                var i = new he;
                                return i.start = t.start, e.locations && (i.loc = new le, i.loc.start = t.loc.start), e.ranges && (i.range = [t.range[0], 0]), i
                            }

                            function de(t, i) {
                                return t.type = i, t.end = _, e.locations && (t.loc.end = y), e.ranges && (t.range[1] = _), t
                            }

                            function pe(t) {
                                return e.ecmaVersion >= 5 && "ExpressionStatement" === t.type && "Literal" === t.expression.type && "use strict" === t.expression.value
                            }

                            function fe(t) {
                                if (d === t) return ae(), !0
                            }

                            function ge() {
                                return !e.strictSemicolons && (d === E || d === at || jt.test(i.slice(_, h)))
                            }

                            function me() {
                                fe(ct) || ge() || _e()
                            }

                            function ve(t) {
                                d === t ? ae() : _e()
                            }

                            function _e() {
                                C(h, "Unexpected token")
                            }

                            function ye(t) {
                                "Identifier" !== t.type && "MemberExpression" !== t.type && C(t.start, "Assigning to rvalue"), w && "Identifier" === t.type && Bt(t.name) && C(t.start, "Assigning to " + t.name + " in strict mode")
                            }
                            var xe = {
                                    kind: "loop"
                                },
                                be = {
                                    kind: "switch"
                                };

                            function we() {
                                (d === ft || d === mt && "/=" == p) && Kt(!0);
                                var t = d,
                                    n = ce();
                                switch (t) {
                                    case I:
                                    case D:
                                        ae();
                                        var r = t === I;
                                        fe(ct) || ge() ? n.label = null : d !== T ? _e() : (n.label = ze(), me());
                                        for (var s = 0; s < b.length; ++s) {
                                            var a = b[s];
                                            if (null == n.label || a.name === n.label.name) {
                                                if (null != a.kind && (r || "loop" === a.kind)) break;
                                                if (n.label && r) break
                                            }
                                        }
                                        return s === b.length && C(n.start, "Unsyntactic " + t.keyword), de(n, r ? "BreakStatement" : "ContinueStatement");
                                    case B:
                                        return ae(), me(), de(n, "DebuggerStatement");
                                    case z:
                                        return ae(), b.push(xe), n.body = we(), b.pop(), ve(G), n.test = Se(), me(), de(n, "DoWhileStatement");
                                    case F:
                                        if (ae(), b.push(xe), ve(ot), d === ct) return ke(n, null);
                                        if (d === X) {
                                            var o = ce();
                                            return ae(), Pe(o, !0), de(o, "VariableDeclaration"), 1 === o.declarations.length && fe(et) ? Ae(n, o) : ke(n, o)
                                        }
                                        return o = Me(!1, !0), fe(et) ? (ye(o), Ae(n, o)) : ke(n, o);
                                    case j:
                                        return ae(), Be(n, !0);
                                    case q:
                                        return ae(), n.test = Se(), n.consequent = we(), n.alternate = fe(N) ? we() : null, de(n, "IfStatement");
                                    case H:
                                        return x || e.allowReturnOutsideFunction || C(h, "'return' outside of function"), ae(), fe(ct) || ge() ? n.argument = null : (n.argument = Me(), me()), de(n, "ReturnStatement");
                                    case W:
                                        ae(), n.discriminant = Se(), n.cases = [], ve(st), b.push(be);
                                        for (var l, c; d != at;)
                                            if (d === O || d === R) {
                                                var u = d === O;
                                                l && de(l, "SwitchCase"), n.cases.push(l = ce()), l.consequent = [], ae(), u ? l.test = Me() : (c && C(v, "Multiple default clauses"), c = !0, l.test = null), ve(ut)
                                            } else l || _e(), l.consequent.push(we());
                                        return l && de(l, "SwitchCase"), ae(), b.pop(), de(n, "SwitchStatement");
                                    case U:
                                        return ae(), jt.test(i.slice(_, h)) && C(_, "Illegal newline after throw"), n.argument = Me(), me(), de(n, "ThrowStatement");
                                    case Y:
                                        if (ae(), n.block = Ce(), n.handler = null, d === L) {
                                            var f = ce();
                                            ae(), ve(ot), f.param = ze(), w && Bt(f.param.name) && C(f.param.start, "Binding " + f.param.name + " in strict mode"), ve(ht), f.guard = null, f.body = Ce(), n.handler = de(f, "CatchClause")
                                        }
                                        return n.guardedHandlers = k, n.finalizer = fe(V) ? Ce() : null, n.handler || n.finalizer || C(n.start, "Missing catch or finally clause"), de(n, "TryStatement");
                                    case X:
                                        return ae(), Pe(n), me(), de(n, "VariableDeclaration");
                                    case G:
                                        return ae(), n.test = Se(), b.push(xe), n.body = we(), b.pop(), de(n, "WhileStatement");
                                    case Z:
                                        return w && C(h, "'with' in strict mode"), ae(), n.object = Se(), n.body = we(), de(n, "WithStatement");
                                    case st:
                                        return Ce();
                                    case ct:
                                        return ae(), de(n, "EmptyStatement");
                                    default:
                                        var g = p,
                                            m = Me();
                                        if (t === T && "Identifier" === m.type && fe(ut)) {
                                            for (s = 0; s < b.length; ++s) b[s].name === g && C(m.start, "Label '" + g + "' is already declared");
                                            var y = d.isLoop ? "loop" : d === W ? "switch" : null;
                                            return b.push({
                                                name: g,
                                                kind: y
                                            }), n.body = we(), b.pop(), n.label = m, de(n, "LabeledStatement")
                                        }
                                        return n.expression = m, me(), de(n, "ExpressionStatement")
                                }
                            }

                            function Se() {
                                ve(ot);
                                var t = Me();
                                return ve(ht), t
                            }

                            function Ce(t) {
                                var e, i = ce(),
                                    n = !0,
                                    r = !1;
                                for (i.body = [], ve(st); !fe(at);) {
                                    var s = we();
                                    i.body.push(s), n && t && pe(s) && (e = r, oe(r = !0)), n = !1
                                }
                                return r && !e && oe(!1), de(i, "BlockStatement")
                            }

                            function ke(t, e) {
                                return t.init = e, ve(ct), t.test = d === ct ? null : Me(), ve(ct), t.update = d === ht ? null : Me(), ve(ht), t.body = we(), b.pop(), de(t, "ForStatement")
                            }

                            function Ae(t, e) {
                                return t.left = e, t.right = Me(), ve(ht), t.body = we(), b.pop(), de(t, "ForInStatement")
                            }

                            function Pe(t, e) {
                                for (t.declarations = [], t.kind = "var";;) {
                                    var i = ce();
                                    if (i.id = ze(), w && Bt(i.id.name) && C(i.id.start, "Binding " + i.id.name + " in strict mode"), i.init = fe(gt) ? Me(!0, e) : null, t.declarations.push(de(i, "VariableDeclarator")), !fe(lt)) break
                                }
                                return t
                            }

                            function Me(t, e) {
                                var i = Te(e);
                                if (!t && d === lt) {
                                    var n = ue(i);
                                    for (n.expressions = [i]; fe(lt);) n.expressions.push(Te(e));
                                    return de(n, "SequenceExpression")
                                }
                                return i
                            }

                            function Te(t) {
                                var e = function(t) {
                                    var e = function(t) {
                                        return Ee(Ie(), -1, t)
                                    }(t);
                                    if (fe(pt)) {
                                        var i = ue(e);
                                        return i.test = e, i.consequent = Me(!0), ve(ut), i.alternate = Me(!0, t), de(i, "ConditionalExpression")
                                    }
                                    return e
                                }(t);
                                if (d.isAssign) {
                                    var i = ue(e);
                                    return i.operator = p, i.left = e, ae(), i.right = Te(t), ye(e), de(i, "AssignmentExpression")
                                }
                                return e
                            }

                            function Ee(t, e, i) {
                                var n = d.binop;
                                if (null != n && (!i || d !== et) && n > e) {
                                    var r = ue(t);
                                    r.left = t, r.operator = p;
                                    var s = d;
                                    return ae(), r.right = Ee(Ie(), n, i), Ee(de(r, s === yt || s === xt ? "LogicalExpression" : "BinaryExpression"), e, i)
                                }
                                return t
                            }

                            function Ie() {
                                if (d.prefix) {
                                    var t = ce(),
                                        e = d.isUpdate;
                                    return t.operator = p, t.prefix = !0, f = !0, ae(), t.argument = Ie(), e ? ye(t.argument) : w && "delete" === t.operator && "Identifier" === t.argument.type && C(t.start, "Deleting local variable in strict mode"), de(t, e ? "UpdateExpression" : "UnaryExpression")
                                }
                                for (var i = Oe(Le()); d.postfix && !ge();)(t = ue(i)).operator = p, t.prefix = !1, t.argument = i, ye(i), ae(), i = de(t, "UpdateExpression");
                                return i
                            }

                            function Oe(t, e) {
                                var i;
                                return fe(dt) ? ((i = ue(t)).object = t, i.property = ze(!0), i.computed = !1, Oe(de(i, "MemberExpression"), e)) : fe(nt) ? ((i = ue(t)).object = t, i.property = Me(), i.computed = !0, ve(rt), Oe(de(i, "MemberExpression"), e)) : !e && fe(ot) ? ((i = ue(t)).callee = t, i.arguments = Re(ht, !1), Oe(de(i, "CallExpression"), e)) : t
                            }

                            function Le() {
                                switch (d) {
                                    case $:
                                        var t = ce();
                                        return ae(), de(t, "ThisExpression");
                                    case T:
                                        return ze();
                                    case A:
                                    case M:
                                    case P:
                                        return (t = ce()).value = p, t.raw = i.slice(h, l), ae(), de(t, "Literal");
                                    case K:
                                    case J:
                                    case tt:
                                        return (t = ce()).value = d.atomValue, t.raw = d.keyword, ae(), de(t, "Literal");
                                    case ot:
                                        var n = c,
                                            r = h;
                                        ae();
                                        var s = Me();
                                        return s.start = r, s.end = l, e.locations && (s.loc.start = n, s.loc.end = u), e.ranges && (s.range = [r, l]), ve(ht), s;
                                    case nt:
                                        return t = ce(), ae(), t.elements = Re(rt, !0, !0), de(t, "ArrayExpression");
                                    case st:
                                        return function() {
                                            var t = ce(),
                                                i = !0,
                                                n = !1;
                                            for (t.properties = [], ae(); !fe(at);) {
                                                if (i) i = !1;
                                                else if (ve(lt), e.allowTrailingCommas && fe(at)) break;
                                                var r, s = {
                                                        key: De()
                                                    },
                                                    a = !1;
                                                if (fe(ut) ? (s.value = Me(!0), r = s.kind = "init") : e.ecmaVersion >= 5 && "Identifier" === s.key.type && ("get" === s.key.name || "set" === s.key.name) ? (a = n = !0, r = s.kind = s.key.name, s.key = De(), d !== ot && _e(), s.value = Be(ce(), !1)) : _e(), "Identifier" === s.key.type && (w || n))
                                                    for (var o = 0; o < t.properties.length; ++o) {
                                                        var h = t.properties[o];
                                                        if (h.key.name === s.key.name) {
                                                            var l = r == h.kind || a && "init" === h.kind || "init" === r && ("get" === h.kind || "set" === h.kind);
                                                            l && !w && "init" === r && "init" === h.kind && (l = !1), l && C(s.key.start, "Redefinition of property")
                                                        }
                                                    }
                                                t.properties.push(s)
                                            }
                                            return de(t, "ObjectExpression")
                                        }();
                                    case j:
                                        return t = ce(), ae(), Be(t, !1);
                                    case Q:
                                        return function() {
                                            var t = ce();
                                            return ae(), t.callee = Oe(Le(), !0), fe(ot) ? t.arguments = Re(ht, !1) : t.arguments = k, de(t, "NewExpression")
                                        }();
                                    default:
                                        _e()
                                }
                            }

                            function De() {
                                return d === A || d === M ? Le() : ze(!0)
                            }

                            function Be(t, e) {
                                d === T ? t.id = ze() : e ? _e() : t.id = null, t.params = [];
                                var i = !0;
                                for (ve(ot); !fe(ht);) i ? i = !1 : ve(lt), t.params.push(ze());
                                var n = x,
                                    r = b;
                                if (x = !0, b = [], t.body = Ce(!0), x = n, b = r, w || t.body.body.length && pe(t.body.body[0]))
                                    for (var s = t.id ? -1 : 0; s < t.params.length; ++s) {
                                        var a = s < 0 ? t.id : t.params[s];
                                        if ((Dt(a.name) || Bt(a.name)) && C(a.start, "Defining '" + a.name + "' in strict mode"), s >= 0)
                                            for (var o = 0; o < s; ++o) a.name === t.params[o].name && C(a.start, "Argument name clash in strict mode")
                                    }
                                return de(t, e ? "FunctionDeclaration" : "FunctionExpression")
                            }

                            function Re(t, i, n) {
                                for (var r = [], s = !0; !fe(t);) {
                                    if (s) s = !1;
                                    else if (ve(lt), i && e.allowTrailingCommas && fe(t)) break;
                                    n && d === lt ? r.push(null) : r.push(Me(!0))
                                }
                                return r
                            }

                            function ze(t) {
                                var n = ce();
                                return t && "everywhere" == e.forbidReserved && (t = !1), d === T ? (!t && (e.forbidReserved && (3 === e.ecmaVersion ? Ot : Lt)(p) || w && Dt(p)) && -1 == i.slice(h, l).indexOf("\\") && C(h, "The keyword '" + p + "' is reserved"), n.name = p) : t && d.keyword ? n.name = d.keyword : _e(), f = !1, ae(), de(n, "Identifier")
                            }
                        }, "object" == typeof t && "object" == typeof e ? u(t) : (n = [t], (s = "function" == typeof(r = u) ? r.apply(t, n) : r) === o || (e.exports = s)), f.version || (f = null));

                        function g(t, e) {
                            return (p.acorn || f).parse(t, e)
                        }
                        var m = {
                                "+": "__add",
                                "-": "__subtract",
                                "*": "__multiply",
                                "/": "__divide",
                                "%": "__modulo",
                                "==": "__equals",
                                "!=": "__equals"
                            },
                            v = {
                                "-": "__negate",
                                "+": "__self"
                            },
                            y = c.each(["add", "subtract", "multiply", "divide", "modulo", "equals", "negate"], (function(t) {
                                this["__" + t] = "#" + t
                            }), {
                                __self: function() {
                                    return this
                                }
                            });

                        function b(t, e, i) {
                            var n = m[e];
                            if (t && t[n]) {
                                var r = t[n](i);
                                return "!=" === e ? !r : r
                            }
                            switch (e) {
                                case "+":
                                    return t + i;
                                case "-":
                                    return t - i;
                                case "*":
                                    return t * i;
                                case "/":
                                    return t / i;
                                case "%":
                                    return t % i;
                                case "==":
                                    return t == i;
                                case "!=":
                                    return t != i
                            }
                        }

                        function w(t, e) {
                            var i = v[t];
                            if (e && e[i]) return e[i]();
                            switch (t) {
                                case "+":
                                    return +e;
                                case "-":
                                    return -e
                            }
                        }

                        function S(t, e) {
                            if (!t) return "";
                            var i = [];

                            function n(t) {
                                for (var e = 0, n = i.length; e < n; e++) {
                                    var r = i[e];
                                    if (r[0] >= t) break;
                                    t += r[1]
                                }
                                return t
                            }

                            function r(e) {
                                return t.substring(n(e.range[0]), n(e.range[1]))
                            }

                            function s(e, r) {
                                for (var s = n(e.range[0]), a = n(e.range[1]), o = 0, h = i.length - 1; h >= 0; h--)
                                    if (s > i[h][0]) {
                                        o = h + 1;
                                        break
                                    }
                                i.splice(o, 0, [s, r.length - a + s]), t = t.substring(0, s) + r + t.substring(a)
                            }

                            function o(e, i) {
                                switch (e.type) {
                                    case "UnaryExpression":
                                        if (e.operator in v && "Literal" !== e.argument.type) {
                                            var a = r(e.argument);
                                            s(e, '$__("' + e.operator + '", ' + a + ")")
                                        }
                                        break;
                                    case "BinaryExpression":
                                        if (e.operator in m && "Literal" !== e.left.type) {
                                            var o = r(e.left),
                                                h = r(e.right),
                                                l = function(e, i) {
                                                    return t.substring(n(e.range[1]), n(i.range[0]))
                                                }(e.left, e.right),
                                                c = e.operator;
                                            s(e, "__$__(" + o + "," + l.replace(new RegExp("\\" + c), '"' + c + '"') + ", " + h + ")")
                                        }
                                        break;
                                    case "UpdateExpression":
                                    case "AssignmentExpression":
                                        var u = i && i.type;
                                        if (!("ForStatement" === u || "BinaryExpression" === u && /^[=!<>]/.test(i.operator) || "MemberExpression" === u && i.computed))
                                            if ("UpdateExpression" === e.type) {
                                                var d = (a = r(e.argument)) + " = " + (p = "__$__(" + a + ', "' + e.operator[0] + '", 1)');
                                                e.prefix ? d = "(" + d + ")" : "AssignmentExpression" !== u && "VariableDeclarator" !== u && "BinaryExpression" !== u || (r(i.left || i.id) === a && (d = p), d = a + "; " + d), s(e, d)
                                            } else if (/^.=$/.test(e.operator) && "Literal" !== e.left.type) {
                                            o = r(e.left), h = r(e.right);
                                            var p = o + " = __$__(" + o + ', "' + e.operator[0] + '", ' + h + ")";
                                            s(e, /^\(.*\)$/.test(r(e)) ? "(" + p + ")" : p)
                                        }
                                }
                            }
                            var c, u = (e = e || {}).url || "",
                                d = e.sourceMaps,
                                p = e.paperFeatures || {},
                                f = e.source || t,
                                _ = e.offset || 0,
                                y = dt.agent,
                                x = y.versionNumber,
                                b = !1,
                                w = /\r\n|\n|\r/gm;
                            if (d && (y.chrome && x >= 30 || y.webkit && x >= 537.76 || y.firefox && x >= 23 || y.node)) {
                                if (y.node) _ -= 2;
                                else if (h && u && !h.location.href.indexOf(u)) {
                                    var S = l.getElementsByTagName("html")[0].innerHTML;
                                    _ = S.substr(0, S.indexOf(t) + 1).match(w).length + 1
                                }
                                var C = ["AA" + function(t) {
                                    var e = "";
                                    for (t = (Math.abs(t) << 1) + (t < 0 ? 1 : 0); t || !e;) {
                                        var i = 31 & t;
                                        (t >>= 5) && (i |= 32), e += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" [i]
                                    }
                                    return e
                                }((b = _ > 0 && !(y.chrome && x >= 36 || y.safari && x >= 600 || y.firefox && x >= 40 || y.node)) ? 0 : _) + "A"];
                                C.length = (t.match(w) || []).length + 1 + (b ? _ : 0), c = {
                                    version: 3,
                                    file: u,
                                    names: [],
                                    mappings: C.join(";AACA"),
                                    sourceRoot: "",
                                    sources: [u],
                                    sourcesContent: [f]
                                }
                            }
                            return !1 === p.operatorOverloading && !1 === p.moduleExports || function t(e, i, n) {
                                if (e) {
                                    for (var a in e)
                                        if ("range" !== a && "loc" !== a) {
                                            var h = e[a];
                                            if (Array.isArray(h))
                                                for (var l = 0, c = h.length; l < c; l++) t(h[l], e, n);
                                            else h && "object" == typeof h && t(h, e, n)
                                        }!1 !== n.operatorOverloading && o(e, i), !1 !== n.moduleExports && function(t) {
                                        switch (t.type) {
                                            case "ExportDefaultDeclaration":
                                                s({
                                                    range: [t.start, t.declaration.start]
                                                }, "module.exports = ");
                                                break;
                                            case "ExportNamedDeclaration":
                                                var e = t.declaration,
                                                    i = t.specifiers;
                                                if (e) {
                                                    var n = e.declarations;
                                                    n && (n.forEach((function(t) {
                                                        s(t, "module.exports." + r(t))
                                                    })), s({
                                                        range: [t.start, e.start + e.kind.length]
                                                    }, ""))
                                                } else if (i) {
                                                    var a = i.map((function(t) {
                                                        var e = r(t);
                                                        return "module.exports." + e + " = " + e + "; "
                                                    })).join("");
                                                    a && s(t, a)
                                                }
                                        }
                                    }(e)
                                }
                            }(g(t, {
                                ranges: !0,
                                preserveParens: !0,
                                sourceType: "module"
                            }), null, p), c && (b && (t = new Array(_ + 1).join("\n") + t), /^(inline|both)$/.test(d) && (t += "\n//# sourceMappingURL=data:application/json;base64," + a.btoa(unescape(encodeURIComponent(JSON.stringify(c))))), t += "\n//# sourceURL=" + (u || "paperscript")), {
                                url: u,
                                source: f,
                                code: t,
                                map: c
                            }
                        }

                        function C(t, e, i) {
                            dt = e;
                            var n, r = e.getView(),
                                s = /\btool\.\w+|\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\b/.test(t) && !/\bnew\s+Tool\b/.test(t) ? new st : null,
                                a = s ? s._events : [],
                                o = ["onFrame", "onResize"].concat(a),
                                h = [],
                                u = [],
                                d = "object" == typeof t ? t : S(t, i);

                            function p(e, i) {
                                for (var n in e) !i && /^_/.test(n) || !new RegExp("([\\b\\s\\W]|^)" + n.replace(/\$/g, "\\$") + "\\b").test(t) || (h.push(n), u.push(e[n]))
                            }
                            t = d.code, p({
                                __$__: b,
                                $__: w,
                                paper: e,
                                tool: s
                            }, !0), p(e), t = "var module = { exports: {} }; " + t, (v = c.each(o, (function(e) {
                                new RegExp("\\s+" + e + "\\b").test(t) && (h.push(e), this.push("module.exports." + e + " = " + e + ";"))
                            }), []).join("\n")) && (t += "\n" + v), t += "\nreturn module.exports;";
                            var f = dt.agent;
                            if (l && (f.chrome || f.firefox && f.versionNumber < 40)) {
                                var g = l.createElement("script"),
                                    m = l.head || l.getElementsByTagName("head")[0];
                                f.firefox && (t = "\n" + t), g.appendChild(l.createTextNode("document.__paperscript__ = function(" + h + ") {" + t + "\n}")), m.appendChild(g), n = l.__paperscript__, delete l.__paperscript__, m.removeChild(g)
                            } else n = Function(h, t);
                            var v, y = (v = n && n.apply(e, u)) || {};
                            return c.each(a, (function(t) {
                                var e = y[t];
                                e && (s[t] = e)
                            })), r && (y.onResize && r.setOnResize(y.onResize), r.emit("resize", {
                                size: r.size,
                                delta: new _
                            }), y.onFrame && r.setOnFrame(y.onFrame), r.requestUpdate()), v
                        }

                        function k(t) {
                            if (/^text\/(?:x-|)paperscript$/.test(t.type) && "true" !== d.getAttribute(t, "ignore")) {
                                var e = d.getAttribute(t, "canvas"),
                                    i = l.getElementById(e),
                                    n = t.src || t.getAttribute("data-src"),
                                    r = d.hasAttribute(t, "async"),
                                    s = "data-paper-scope";
                                if (!i) throw new Error('Unable to find canvas with id "' + e + '"');
                                var a = d.get(i.getAttribute(s)) || (new d).setup(i);
                                return i.setAttribute(s, a._id), n ? ot({
                                    url: n,
                                    async: r,
                                    mimeType: "text/plain",
                                    onLoad: function(t) {
                                        C(t, a, n)
                                    }
                                }) : C(t.innerHTML, a, t.baseURI), t.setAttribute("data-paper-ignore", "true"), a
                            }
                        }

                        function A() {
                            c.each(l && l.getElementsByTagName("script"), k)
                        }
                        return _.inject(y), x.inject(y), Y.inject(y), h && ("complete" === l.readyState ? setTimeout(A) : $.add(h, {
                            load: A
                        })), {
                            compile: S,
                            execute: C,
                            load: function(t) {
                                return t ? k(t) : A()
                            },
                            parse: g,
                            calculateBinary: b,
                            calculateUnary: w
                        }
                    }.call(this);
                    var dt = new(d.inject(c.exports, {
                        Base: c,
                        Numerical: m,
                        Key: it,
                        DomEvent: $,
                        DomElement: Q,
                        document: l,
                        window: h,
                        Symbol: L,
                        PlacedSymbol: O
                    }));
                    return dt.agent.node && i(858)(dt), (s = "function" == typeof(r = dt) ? r.call(e, i, e, t) : r) === o || (t.exports = s), dt
                }).call(this, "object" == typeof self ? self : null)
            },
            858: () => {},
            158: () => {}
        },
        e = {};

    function i(n) {
        var r = e[n];
        if (void 0 !== r) return r.exports;
        var s = e[n] = {
            exports: {}
        };
        return t[n].call(s.exports, s, s.exports, i), s.exports
    }
    i.n = t => {
        var e = t && t.__esModule ? () => t.default : () => t;
        return i.d(e, {
            a: e
        }), e
    }, i.d = (t, e) => {
        for (var n in e) i.o(e, n) && !i.o(t, n) && Object.defineProperty(t, n, {
            enumerable: !0,
            get: e[n]
        })
    }, i.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (t) {
            if ("object" == typeof window) return window
        }
    }(), i.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e);
    var n = {};
    (() => {
        "use strict";
        i.d(n, {
            B: () => zs,
            r: () => Ns
        });
        i(90), i(770);

        function t(t) {
            if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }

        function e(t, e) {
            t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e
        }
        /*!
         * GSAP 3.7.1
         * https://greensock.com
         *
         * @license Copyright 2008-2021, GreenSock. All rights reserved.
         * Subject to the terms at https://greensock.com/standard-license or for
         * Club GreenSock members, the agreement issued with that membership.
         * @author: Jack Doyle, jack@greensock.com
         */
        var r, s, a, o, h, l, c, u, d, p, f, g, m, v, _, y, x, b, w, S, C, k, A, P, M, T, E, I, O = {
                autoSleep: 120,
                force3D: "auto",
                nullTargetWarn: 1,
                units: {
                    lineHeight: ""
                }
            },
            L = {
                duration: .5,
                overwrite: !1,
                delay: 0
            },
            D = 1e8,
            B = 1e-8,
            R = 2 * Math.PI,
            z = R / 4,
            N = 0,
            V = Math.sqrt,
            F = Math.cos,
            j = Math.sin,
            q = function(t) {
                return "string" == typeof t
            },
            H = function(t) {
                return "function" == typeof t
            },
            W = function(t) {
                return "number" == typeof t
            },
            U = function(t) {
                return void 0 === t
            },
            Y = function(t) {
                return "object" == typeof t
            },
            X = function(t) {
                return !1 !== t
            },
            G = function() {
                return "undefined" != typeof window
            },
            Z = function(t) {
                return H(t) || q(t)
            },
            Q = "function" == typeof ArrayBuffer && ArrayBuffer.isView || function() {},
            $ = Array.isArray,
            K = /(?:-?\.?\d|\.)+/gi,
            J = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
            tt = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
            et = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
            it = /[+-]=-?[.\d]+/,
            nt = /[^,'"\[\]\s]+/gi,
            rt = /[\d.+\-=]+(?:e[-+]\d*)*/i,
            st = {},
            at = {},
            ot = function(t) {
                return (at = Ot(t, st)) && yi
            },
            ht = function(t, e) {
                return console.warn("Invalid property", t, "set to", e, "Missing plugin? gsap.registerPlugin()")
            },
            lt = function(t, e) {
                return !e && console.warn(t)
            },
            ct = function(t, e) {
                return t && (st[t] = e) && at && (at[t] = e) || st
            },
            ut = function() {
                return 0
            },
            dt = {},
            pt = [],
            ft = {},
            gt = {},
            mt = {},
            vt = 30,
            _t = [],
            yt = "",
            xt = function(t) {
                var e, i, n = t[0];
                if (Y(n) || H(n) || (t = [t]), !(e = (n._gsap || {}).harness)) {
                    for (i = _t.length; i-- && !_t[i].targetTest(n););
                    e = _t[i]
                }
                for (i = t.length; i--;) t[i] && (t[i]._gsap || (t[i]._gsap = new We(t[i], e))) || t.splice(i, 1);
                return t
            },
            bt = function(t) {
                return t._gsap || xt(le(t))[0]._gsap
            },
            wt = function(t, e, i) {
                return (i = t[e]) && H(i) ? t[e]() : U(i) && t.getAttribute && t.getAttribute(e) || i
            },
            St = function(t, e) {
                return (t = t.split(",")).forEach(e) || t
            },
            Ct = function(t) {
                return Math.round(1e5 * t) / 1e5 || 0
            },
            kt = function(t, e) {
                for (var i = e.length, n = 0; t.indexOf(e[n]) < 0 && ++n < i;);
                return n < i
            },
            At = function() {
                var t, e, i = pt.length,
                    n = pt.slice(0);
                for (ft = {}, pt.length = 0, t = 0; t < i; t++)(e = n[t]) && e._lazy && (e.render(e._lazy[0], e._lazy[1], !0)._lazy = 0)
            },
            Pt = function(t, e, i, n) {
                pt.length && At(), t.render(e, i, n), pt.length && At()
            },
            Mt = function(t) {
                var e = parseFloat(t);
                return (e || 0 === e) && (t + "").match(nt).length < 2 ? e : q(t) ? t.trim() : t
            },
            Tt = function(t) {
                return t
            },
            Et = function(t, e) {
                for (var i in e) i in t || (t[i] = e[i]);
                return t
            },
            It = function(t, e) {
                for (var i in e) i in t || "duration" === i || "ease" === i || (t[i] = e[i])
            },
            Ot = function(t, e) {
                for (var i in e) t[i] = e[i];
                return t
            },
            Lt = function t(e, i) {
                for (var n in i) "__proto__" !== n && "constructor" !== n && "prototype" !== n && (e[n] = Y(i[n]) ? t(e[n] || (e[n] = {}), i[n]) : i[n]);
                return e
            },
            Dt = function(t, e) {
                var i, n = {};
                for (i in t) i in e || (n[i] = t[i]);
                return n
            },
            Bt = function(t) {
                var e = t.parent || s,
                    i = t.keyframes ? It : Et;
                if (X(t.inherit))
                    for (; e;) i(t, e.vars.defaults), e = e.parent || e._dp;
                return t
            },
            Rt = function(t, e, i, n) {
                void 0 === i && (i = "_first"), void 0 === n && (n = "_last");
                var r = e._prev,
                    s = e._next;
                r ? r._next = s : t[i] === e && (t[i] = s), s ? s._prev = r : t[n] === e && (t[n] = r), e._next = e._prev = e.parent = null
            },
            zt = function(t, e) {
                t.parent && (!e || t.parent.autoRemoveChildren) && t.parent.remove(t), t._act = 0
            },
            Nt = function(t, e) {
                if (t && (!e || e._end > t._dur || e._start < 0))
                    for (var i = t; i;) i._dirty = 1, i = i.parent;
                return t
            },
            Vt = function(t) {
                for (var e = t.parent; e && e.parent;) e._dirty = 1, e.totalDuration(), e = e.parent;
                return t
            },
            Ft = function t(e) {
                return !e || e._ts && t(e.parent)
            },
            jt = function(t) {
                return t._repeat ? qt(t._tTime, t = t.duration() + t._rDelay) * t : 0
            },
            qt = function(t, e) {
                var i = Math.floor(t /= e);
                return t && i === t ? i - 1 : i
            },
            Ht = function(t, e) {
                return (t - e._start) * e._ts + (e._ts >= 0 ? 0 : e._dirty ? e.totalDuration() : e._tDur)
            },
            Wt = function(t) {
                return t._end = Ct(t._start + (t._tDur / Math.abs(t._ts || t._rts || B) || 0))
            },
            Ut = function(t, e) {
                var i = t._dp;
                return i && i.smoothChildTiming && t._ts && (t._start = Ct(i._time - (t._ts > 0 ? e / t._ts : ((t._dirty ? t.totalDuration() : t._tDur) - e) / -t._ts)), Wt(t), i._dirty || Nt(i, t)), t
            },
            Yt = function(t, e) {
                var i;
                if ((e._time || e._initted && !e._dur) && (i = Ht(t.rawTime(), e), (!e._dur || re(0, e.totalDuration(), i) - e._tTime > B) && e.render(i, !0)), Nt(t, e)._dp && t._initted && t._time >= t._dur && t._ts) {
                    if (t._dur < t.duration())
                        for (i = t; i._dp;) i.rawTime() >= 0 && i.totalTime(i._tTime), i = i._dp;
                    t._zTime = -1e-8
                }
            },
            Xt = function(t, e, i, n) {
                return e.parent && zt(e), e._start = Ct((W(i) ? i : i || t !== s ? ee(t, i, e) : t._time) + e._delay), e._end = Ct(e._start + (e.totalDuration() / Math.abs(e.timeScale()) || 0)),
                    function(t, e, i, n, r) {
                        void 0 === i && (i = "_first"), void 0 === n && (n = "_last");
                        var s, a = t[n];
                        if (r)
                            for (s = e[r]; a && a[r] > s;) a = a._prev;
                        a ? (e._next = a._next, a._next = e) : (e._next = t[i], t[i] = e), e._next ? e._next._prev = e : t[n] = e, e._prev = a, e.parent = e._dp = t
                    }(t, e, "_first", "_last", t._sort ? "_start" : 0), $t(e) || (t._recent = e), n || Yt(t, e), t
            },
            Gt = function(t, e) {
                return (st.ScrollTrigger || ht("scrollTrigger", e)) && st.ScrollTrigger.create(e, t)
            },
            Zt = function(t, e, i, n) {
                return $e(t, e), t._initted ? !i && t._pt && (t._dur && !1 !== t.vars.lazy || !t._dur && t.vars.lazy) && c !== Ie.frame ? (pt.push(t), t._lazy = [e, n], 1) : void 0 : 1
            },
            Qt = function t(e) {
                var i = e.parent;
                return i && i._ts && i._initted && !i._lock && (i.rawTime() < 0 || t(i))
            },
            $t = function(t) {
                var e = t.data;
                return "isFromStart" === e || "isStart" === e
            },
            Kt = function(t, e, i, n) {
                var r = t._repeat,
                    s = Ct(e) || 0,
                    a = t._tTime / t._tDur;
                return a && !n && (t._time *= s / t._dur), t._dur = s, t._tDur = r ? r < 0 ? 1e10 : Ct(s * (r + 1) + t._rDelay * r) : s, a && !n ? Ut(t, t._tTime = t._tDur * a) : t.parent && Wt(t), i || Nt(t.parent, t), t
            },
            Jt = function(t) {
                return t instanceof Ye ? Nt(t) : Kt(t, t._dur)
            },
            te = {
                _start: 0,
                endTime: ut,
                totalDuration: ut
            },
            ee = function t(e, i, n) {
                var r, s, a, o = e.labels,
                    h = e._recent || te,
                    l = e.duration() >= D ? h.endTime(!1) : e._dur;
                return q(i) && (isNaN(i) || i in o) ? (s = i.charAt(0), a = "%" === i.substr(-1), r = i.indexOf("="), "<" === s || ">" === s ? (r >= 0 && (i = i.replace(/=/, "")), ("<" === s ? h._start : h.endTime(h._repeat >= 0)) + (parseFloat(i.substr(1)) || 0) * (a ? (r < 0 ? h : n).totalDuration() / 100 : 1)) : r < 0 ? (i in o || (o[i] = l), o[i]) : (s = parseFloat(i.charAt(r - 1) + i.substr(r + 1)), a && n && (s = s / 100 * ($(n) ? n[0] : n).totalDuration()), r > 1 ? t(e, i.substr(0, r - 1), n) + s : l + s)) : null == i ? l : +i
            },
            ie = function(t, e, i) {
                var n, r, s = W(e[1]),
                    a = (s ? 2 : 1) + (t < 2 ? 0 : 1),
                    o = e[a];
                if (s && (o.duration = e[1]), o.parent = i, t) {
                    for (n = o, r = i; r && !("immediateRender" in n);) n = r.vars.defaults || {}, r = X(r.vars.inherit) && r.parent;
                    o.immediateRender = X(n.immediateRender), t < 2 ? o.runBackwards = 1 : o.startAt = e[a - 1]
                }
                return new ei(e[0], o, e[a + 1])
            },
            ne = function(t, e) {
                return t || 0 === t ? e(t) : e
            },
            re = function(t, e, i) {
                return i < t ? t : i > e ? e : i
            },
            se = function(t) {
                if ("string" != typeof t) return "";
                var e = rt.exec(t);
                return e ? t.substr(e.index + e[0].length) : ""
            },
            ae = [].slice,
            oe = function(t, e) {
                return t && Y(t) && "length" in t && (!e && !t.length || t.length - 1 in t && Y(t[0])) && !t.nodeType && t !== a
            },
            he = function(t, e, i) {
                return void 0 === i && (i = []), t.forEach((function(t) {
                    var n;
                    return q(t) && !e || oe(t, 1) ? (n = i).push.apply(n, le(t)) : i.push(t)
                })) || i
            },
            le = function(t, e, i) {
                return !q(t) || i || !o && Oe() ? $(t) ? he(t, i) : oe(t) ? ae.call(t, 0) : t ? [t] : [] : ae.call((e || h).querySelectorAll(t), 0)
            },
            ce = function(t) {
                return t.sort((function() {
                    return .5 - Math.random()
                }))
            },
            ue = function(t) {
                if (H(t)) return t;
                var e = Y(t) ? t : {
                        each: t
                    },
                    i = Ve(e.ease),
                    n = e.from || 0,
                    r = parseFloat(e.base) || 0,
                    s = {},
                    a = n > 0 && n < 1,
                    o = isNaN(n) || a,
                    h = e.axis,
                    l = n,
                    c = n;
                return q(n) ? l = c = {
                        center: .5,
                        edges: .5,
                        end: 1
                    }[n] || 0 : !a && o && (l = n[0], c = n[1]),
                    function(t, a, u) {
                        var d, p, f, g, m, v, _, y, x, b = (u || e).length,
                            w = s[b];
                        if (!w) {
                            if (!(x = "auto" === e.grid ? 0 : (e.grid || [1, D])[1])) {
                                for (_ = -D; _ < (_ = u[x++].getBoundingClientRect().left) && x < b;);
                                x--
                            }
                            for (w = s[b] = [], d = o ? Math.min(x, b) * l - .5 : n % x, p = o ? b * c / x - .5 : n / x | 0, _ = 0, y = D, v = 0; v < b; v++) f = v % x - d, g = p - (v / x | 0), w[v] = m = h ? Math.abs("y" === h ? g : f) : V(f * f + g * g), m > _ && (_ = m), m < y && (y = m);
                            "random" === n && ce(w), w.max = _ - y, w.min = y, w.v = b = (parseFloat(e.amount) || parseFloat(e.each) * (x > b ? b - 1 : h ? "y" === h ? b / x : x : Math.max(x, b / x)) || 0) * ("edges" === n ? -1 : 1), w.b = b < 0 ? r - b : r, w.u = se(e.amount || e.each) || 0, i = i && b < 0 ? ze(i) : i
                        }
                        return b = (w[t] - w.min) / w.max || 0, Ct(w.b + (i ? i(b) : b) * w.v) + w.u
                    }
            },
            de = function(t) {
                var e = t < 1 ? Math.pow(10, (t + "").length - 2) : 1;
                return function(i) {
                    var n = Math.round(parseFloat(i) / t) * t * e;
                    return (n - n % 1) / e + (W(i) ? 0 : se(i))
                }
            },
            pe = function(t, e) {
                var i, n, r = $(t);
                return !r && Y(t) && (i = r = t.radius || D, t.values ? (t = le(t.values), (n = !W(t[0])) && (i *= i)) : t = de(t.increment)), ne(e, r ? H(t) ? function(e) {
                    return n = t(e), Math.abs(n - e) <= i ? n : e
                } : function(e) {
                    for (var r, s, a = parseFloat(n ? e.x : e), o = parseFloat(n ? e.y : 0), h = D, l = 0, c = t.length; c--;)(r = n ? (r = t[c].x - a) * r + (s = t[c].y - o) * s : Math.abs(t[c] - a)) < h && (h = r, l = c);
                    return l = !i || h <= i ? t[l] : e, n || l === e || W(e) ? l : l + se(e)
                } : de(t))
            },
            fe = function(t, e, i, n) {
                return ne($(t) ? !e : !0 === i ? !!(i = 0) : !n, (function() {
                    return $(t) ? t[~~(Math.random() * t.length)] : (i = i || 1e-5) && (n = i < 1 ? Math.pow(10, (i + "").length - 2) : 1) && Math.floor(Math.round((t - i / 2 + Math.random() * (e - t + .99 * i)) / i) * i * n) / n
                }))
            },
            ge = function(t, e, i) {
                return ne(i, (function(i) {
                    return t[~~e(i)]
                }))
            },
            me = function(t) {
                for (var e, i, n, r, s = 0, a = ""; ~(e = t.indexOf("random(", s));) n = t.indexOf(")", e), r = "[" === t.charAt(e + 7), i = t.substr(e + 7, n - e - 7).match(r ? nt : K), a += t.substr(s, e - s) + fe(r ? i : +i[0], r ? 0 : +i[1], +i[2] || 1e-5), s = n + 1;
                return a + t.substr(s, t.length - s)
            },
            ve = function(t, e, i, n, r) {
                var s = e - t,
                    a = n - i;
                return ne(r, (function(e) {
                    return i + ((e - t) / s * a || 0)
                }))
            },
            _e = function(t, e, i) {
                var n, r, s, a = t.labels,
                    o = D;
                for (n in a)(r = a[n] - e) < 0 == !!i && r && o > (r = Math.abs(r)) && (s = n, o = r);
                return s
            },
            ye = function(t, e, i) {
                var n, r, s = t.vars,
                    a = s[e];
                if (a) return n = s[e + "Params"], r = s.callbackScope || t, i && pt.length && At(), n ? a.apply(r, n) : a.call(r)
            },
            xe = function(t) {
                return zt(t), t.scrollTrigger && t.scrollTrigger.kill(!1), t.progress() < 1 && ye(t, "onInterrupt"), t
            },
            be = function(t) {
                var e = (t = !t.name && t.default || t).name,
                    i = H(t),
                    n = e && !i && t.init ? function() {
                        this._props = []
                    } : t,
                    r = {
                        init: ut,
                        render: ci,
                        add: Ze,
                        kill: di,
                        modifier: ui,
                        rawVars: 0
                    },
                    s = {
                        targetTest: 0,
                        get: 0,
                        getSetter: ai,
                        aliases: {},
                        register: 0
                    };
                if (Oe(), t !== n) {
                    if (gt[e]) return;
                    Et(n, Et(Dt(t, r), s)), Ot(n.prototype, Ot(r, Dt(t, s))), gt[n.prop = e] = n, t.targetTest && (_t.push(n), dt[e] = 1), e = ("css" === e ? "CSS" : e.charAt(0).toUpperCase() + e.substr(1)) + "Plugin"
                }
                ct(e, n), t.register && t.register(yi, n, gi)
            },
            we = 255,
            Se = {
                aqua: [0, we, we],
                lime: [0, we, 0],
                silver: [192, 192, 192],
                black: [0, 0, 0],
                maroon: [128, 0, 0],
                teal: [0, 128, 128],
                blue: [0, 0, we],
                navy: [0, 0, 128],
                white: [we, we, we],
                olive: [128, 128, 0],
                yellow: [we, we, 0],
                orange: [we, 165, 0],
                gray: [128, 128, 128],
                purple: [128, 0, 128],
                green: [0, 128, 0],
                red: [we, 0, 0],
                pink: [we, 192, 203],
                cyan: [0, we, we],
                transparent: [we, we, we, 0]
            },
            Ce = function(t, e, i) {
                return (6 * (t = t < 0 ? t + 1 : t > 1 ? t - 1 : t) < 1 ? e + (i - e) * t * 6 : t < .5 ? i : 3 * t < 2 ? e + (i - e) * (2 / 3 - t) * 6 : e) * we + .5 | 0
            },
            ke = function(t, e, i) {
                var n, r, s, a, o, h, l, c, u, d, p = t ? W(t) ? [t >> 16, t >> 8 & we, t & we] : 0 : Se.black;
                if (!p) {
                    if ("," === t.substr(-1) && (t = t.substr(0, t.length - 1)), Se[t]) p = Se[t];
                    else if ("#" === t.charAt(0)) {
                        if (t.length < 6 && (n = t.charAt(1), r = t.charAt(2), s = t.charAt(3), t = "#" + n + n + r + r + s + s + (5 === t.length ? t.charAt(4) + t.charAt(4) : "")), 9 === t.length) return [(p = parseInt(t.substr(1, 6), 16)) >> 16, p >> 8 & we, p & we, parseInt(t.substr(7), 16) / 255];
                        p = [(t = parseInt(t.substr(1), 16)) >> 16, t >> 8 & we, t & we]
                    } else if ("hsl" === t.substr(0, 3))
                        if (p = d = t.match(K), e) {
                            if (~t.indexOf("=")) return p = t.match(J), i && p.length < 4 && (p[3] = 1), p
                        } else a = +p[0] % 360 / 360, o = +p[1] / 100, n = 2 * (h = +p[2] / 100) - (r = h <= .5 ? h * (o + 1) : h + o - h * o), p.length > 3 && (p[3] *= 1), p[0] = Ce(a + 1 / 3, n, r), p[1] = Ce(a, n, r), p[2] = Ce(a - 1 / 3, n, r);
                    else p = t.match(K) || Se.transparent;
                    p = p.map(Number)
                }
                return e && !d && (n = p[0] / we, r = p[1] / we, s = p[2] / we, h = ((l = Math.max(n, r, s)) + (c = Math.min(n, r, s))) / 2, l === c ? a = o = 0 : (u = l - c, o = h > .5 ? u / (2 - l - c) : u / (l + c), a = l === n ? (r - s) / u + (r < s ? 6 : 0) : l === r ? (s - n) / u + 2 : (n - r) / u + 4, a *= 60), p[0] = ~~(a + .5), p[1] = ~~(100 * o + .5), p[2] = ~~(100 * h + .5)), i && p.length < 4 && (p[3] = 1), p
            },
            Ae = function(t) {
                var e = [],
                    i = [],
                    n = -1;
                return t.split(Me).forEach((function(t) {
                    var r = t.match(tt) || [];
                    e.push.apply(e, r), i.push(n += r.length + 1)
                })), e.c = i, e
            },
            Pe = function(t, e, i) {
                var n, r, s, a, o = "",
                    h = (t + o).match(Me),
                    l = e ? "hsla(" : "rgba(",
                    c = 0;
                if (!h) return t;
                if (h = h.map((function(t) {
                        return (t = ke(t, e, 1)) && l + (e ? t[0] + "," + t[1] + "%," + t[2] + "%," + t[3] : t.join(",")) + ")"
                    })), i && (s = Ae(t), (n = i.c).join(o) !== s.c.join(o)))
                    for (a = (r = t.replace(Me, "1").split(tt)).length - 1; c < a; c++) o += r[c] + (~n.indexOf(c) ? h.shift() || l + "0,0,0,0)" : (s.length ? s : h.length ? h : i).shift());
                if (!r)
                    for (a = (r = t.split(Me)).length - 1; c < a; c++) o += r[c] + h[c];
                return o + r[a]
            },
            Me = function() {
                var t, e = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";
                for (t in Se) e += "|" + t + "\\b";
                return new RegExp(e + ")", "gi")
            }(),
            Te = /hsl[a]?\(/,
            Ee = function(t) {
                var e, i = t.join(" ");
                if (Me.lastIndex = 0, Me.test(i)) return e = Te.test(i), t[1] = Pe(t[1], e), t[0] = Pe(t[0], e, Ae(t[1])), !0
            },
            Ie = (y = Date.now, x = 500, b = 33, w = y(), S = w, k = C = 1e3 / 240, P = function t(e) {
                var i, n, r, s, a = y() - S,
                    o = !0 === e;
                if (a > x && (w += a - b), ((i = (r = (S += a) - w) - k) > 0 || o) && (s = ++m.frame, v = r - 1e3 * m.time, m.time = r /= 1e3, k += i + (i >= C ? 4 : C - i), n = 1), o || (p = f(t)), n)
                    for (_ = 0; _ < A.length; _++) A[_](r, v, s, e)
            }, m = {
                time: 0,
                frame: 0,
                tick: function() {
                    P(!0)
                },
                deltaRatio: function(t) {
                    return v / (1e3 / (t || 60))
                },
                wake: function() {
                    l && (!o && G() && (a = o = window, h = a.document || {}, st.gsap = yi, (a.gsapVersions || (a.gsapVersions = [])).push(yi.version), ot(at || a.GreenSockGlobals || !a.gsap && a || {}), g = a.requestAnimationFrame), p && m.sleep(), f = g || function(t) {
                        return setTimeout(t, k - 1e3 * m.time + 1 | 0)
                    }, d = 1, P(2))
                },
                sleep: function() {
                    (g ? a.cancelAnimationFrame : clearTimeout)(p), d = 0, f = ut
                },
                lagSmoothing: function(t, e) {
                    x = t || 1e8, b = Math.min(e, x, 0)
                },
                fps: function(t) {
                    C = 1e3 / (t || 240), k = 1e3 * m.time + C
                },
                add: function(t) {
                    A.indexOf(t) < 0 && A.push(t), Oe()
                },
                remove: function(t) {
                    var e;
                    ~(e = A.indexOf(t)) && A.splice(e, 1) && _ >= e && _--
                },
                _listeners: A = []
            }),
            Oe = function() {
                return !d && Ie.wake()
            },
            Le = {},
            De = /^[\d.\-M][\d.\-,\s]/,
            Be = /["']/g,
            Re = function(t) {
                for (var e, i, n, r = {}, s = t.substr(1, t.length - 3).split(":"), a = s[0], o = 1, h = s.length; o < h; o++) i = s[o], e = o !== h - 1 ? i.lastIndexOf(",") : i.length, n = i.substr(0, e), r[a] = isNaN(n) ? n.replace(Be, "").trim() : +n, a = i.substr(e + 1).trim();
                return r
            },
            ze = function(t) {
                return function(e) {
                    return 1 - t(1 - e)
                }
            },
            Ne = function t(e, i) {
                for (var n, r = e._first; r;) r instanceof Ye ? t(r, i) : !r.vars.yoyoEase || r._yoyo && r._repeat || r._yoyo === i || (r.timeline ? t(r.timeline, i) : (n = r._ease, r._ease = r._yEase, r._yEase = n, r._yoyo = i)), r = r._next
            },
            Ve = function(t, e) {
                return t && (H(t) ? t : Le[t] || function(t) {
                    var e, i, n, r, s = (t + "").split("("),
                        a = Le[s[0]];
                    return a && s.length > 1 && a.config ? a.config.apply(null, ~t.indexOf("{") ? [Re(s[1])] : (e = t, i = e.indexOf("(") + 1, n = e.indexOf(")"), r = e.indexOf("(", i), e.substring(i, ~r && r < n ? e.indexOf(")", n + 1) : n)).split(",").map(Mt)) : Le._CE && De.test(t) ? Le._CE("", t) : a
                }(t)) || e
            },
            Fe = function(t, e, i, n) {
                void 0 === i && (i = function(t) {
                    return 1 - e(1 - t)
                }), void 0 === n && (n = function(t) {
                    return t < .5 ? e(2 * t) / 2 : 1 - e(2 * (1 - t)) / 2
                });
                var r, s = {
                    easeIn: e,
                    easeOut: i,
                    easeInOut: n
                };
                return St(t, (function(t) {
                    for (var e in Le[t] = st[t] = s, Le[r = t.toLowerCase()] = i, s) Le[r + ("easeIn" === e ? ".in" : "easeOut" === e ? ".out" : ".inOut")] = Le[t + "." + e] = s[e]
                })), s
            },
            je = function(t) {
                return function(e) {
                    return e < .5 ? (1 - t(1 - 2 * e)) / 2 : .5 + t(2 * (e - .5)) / 2
                }
            },
            qe = function t(e, i, n) {
                var r = i >= 1 ? i : 1,
                    s = (n || (e ? .3 : .45)) / (i < 1 ? i : 1),
                    a = s / R * (Math.asin(1 / r) || 0),
                    o = function(t) {
                        return 1 === t ? 1 : r * Math.pow(2, -10 * t) * j((t - a) * s) + 1
                    },
                    h = "out" === e ? o : "in" === e ? function(t) {
                        return 1 - o(1 - t)
                    } : je(o);
                return s = R / s, h.config = function(i, n) {
                    return t(e, i, n)
                }, h
            },
            He = function t(e, i) {
                void 0 === i && (i = 1.70158);
                var n = function(t) {
                        return t ? --t * t * ((i + 1) * t + i) + 1 : 0
                    },
                    r = "out" === e ? n : "in" === e ? function(t) {
                        return 1 - n(1 - t)
                    } : je(n);
                return r.config = function(i) {
                    return t(e, i)
                }, r
            };
        St("Linear,Quad,Cubic,Quart,Quint,Strong", (function(t, e) {
            var i = e < 5 ? e + 1 : e;
            Fe(t + ",Power" + (i - 1), e ? function(t) {
                return Math.pow(t, i)
            } : function(t) {
                return t
            }, (function(t) {
                return 1 - Math.pow(1 - t, i)
            }), (function(t) {
                return t < .5 ? Math.pow(2 * t, i) / 2 : 1 - Math.pow(2 * (1 - t), i) / 2
            }))
        })), Le.Linear.easeNone = Le.none = Le.Linear.easeIn, Fe("Elastic", qe("in"), qe("out"), qe()), M = 7.5625, E = 1 / (T = 2.75), Fe("Bounce", (function(t) {
            return 1 - I(1 - t)
        }), I = function(t) {
            return t < E ? M * t * t : t < .7272727272727273 ? M * Math.pow(t - 1.5 / T, 2) + .75 : t < .9090909090909092 ? M * (t -= 2.25 / T) * t + .9375 : M * Math.pow(t - 2.625 / T, 2) + .984375
        }), Fe("Expo", (function(t) {
            return t ? Math.pow(2, 10 * (t - 1)) : 0
        })), Fe("Circ", (function(t) {
            return -(V(1 - t * t) - 1)
        })), Fe("Sine", (function(t) {
            return 1 === t ? 1 : 1 - F(t * z)
        })), Fe("Back", He("in"), He("out"), He()), Le.SteppedEase = Le.steps = st.SteppedEase = {
            config: function(t, e) {
                void 0 === t && (t = 1);
                var i = 1 / t,
                    n = t + (e ? 0 : 1),
                    r = e ? 1 : 0;
                return function(t) {
                    return ((n * re(0, .99999999, t) | 0) + r) * i
                }
            }
        }, L.ease = Le["quad.out"], St("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", (function(t) {
            return yt += t + "," + t + "Params,"
        }));
        var We = function(t, e) {
                this.id = N++, t._gsap = this, this.target = t, this.harness = e, this.get = e ? e.get : wt, this.set = e ? e.getSetter : ai
            },
            Ue = function() {
                function t(t) {
                    this.vars = t, this._delay = +t.delay || 0, (this._repeat = t.repeat === 1 / 0 ? -2 : t.repeat || 0) && (this._rDelay = t.repeatDelay || 0, this._yoyo = !!t.yoyo || !!t.yoyoEase), this._ts = 1, Kt(this, +t.duration, 1, 1), this.data = t.data, d || Ie.wake()
                }
                var e = t.prototype;
                return e.delay = function(t) {
                    return t || 0 === t ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + t - this._delay), this._delay = t, this) : this._delay
                }, e.duration = function(t) {
                    return arguments.length ? this.totalDuration(this._repeat > 0 ? t + (t + this._rDelay) * this._repeat : t) : this.totalDuration() && this._dur
                }, e.totalDuration = function(t) {
                    return arguments.length ? (this._dirty = 0, Kt(this, this._repeat < 0 ? t : (t - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur
                }, e.totalTime = function(t, e) {
                    if (Oe(), !arguments.length) return this._tTime;
                    var i = this._dp;
                    if (i && i.smoothChildTiming && this._ts) {
                        for (Ut(this, t), !i._dp || i.parent || Yt(i, this); i.parent;) i.parent._time !== i._start + (i._ts >= 0 ? i._tTime / i._ts : (i.totalDuration() - i._tTime) / -i._ts) && i.totalTime(i._tTime, !0), i = i.parent;
                        !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && t < this._tDur || this._ts < 0 && t > 0 || !this._tDur && !t) && Xt(this._dp, this, this._start - this._delay)
                    }
                    return (this._tTime !== t || !this._dur && !e || this._initted && Math.abs(this._zTime) === B || !t && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = t), Pt(this, t, e)), this
                }, e.time = function(t, e) {
                    return arguments.length ? this.totalTime(Math.min(this.totalDuration(), t + jt(this)) % (this._dur + this._rDelay) || (t ? this._dur : 0), e) : this._time
                }, e.totalProgress = function(t, e) {
                    return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio
                }, e.progress = function(t, e) {
                    return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? t : 1 - t) + jt(this), e) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio
                }, e.iteration = function(t, e) {
                    var i = this.duration() + this._rDelay;
                    return arguments.length ? this.totalTime(this._time + (t - 1) * i, e) : this._repeat ? qt(this._tTime, i) + 1 : 1
                }, e.timeScale = function(t) {
                    if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
                    if (this._rts === t) return this;
                    var e = this.parent && this._ts ? Ht(this.parent._time, this) : this._tTime;
                    return this._rts = +t || 0, this._ts = this._ps || -1e-8 === t ? 0 : this._rts, Vt(this.totalTime(re(-this._delay, this._tDur, e), !0))
                }, e.paused = function(t) {
                    return arguments.length ? (this._ps !== t && (this._ps = t, t ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (Oe(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && Math.abs(this._zTime) !== B && (this._tTime -= B)))), this) : this._ps
                }, e.startTime = function(t) {
                    if (arguments.length) {
                        this._start = t;
                        var e = this.parent || this._dp;
                        return e && (e._sort || !this.parent) && Xt(e, this, t - this._delay), this
                    }
                    return this._start
                }, e.endTime = function(t) {
                    return this._start + (X(t) ? this.totalDuration() : this.duration()) / Math.abs(this._ts)
                }, e.rawTime = function(t) {
                    var e = this.parent || this._dp;
                    return e ? t && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? Ht(e.rawTime(t), this) : this._tTime : this._tTime
                }, e.globalTime = function(t) {
                    for (var e = this, i = arguments.length ? t : e.rawTime(); e;) i = e._start + i / (e._ts || 1), e = e._dp;
                    return i
                }, e.repeat = function(t) {
                    return arguments.length ? (this._repeat = t === 1 / 0 ? -2 : t, Jt(this)) : -2 === this._repeat ? 1 / 0 : this._repeat
                }, e.repeatDelay = function(t) {
                    if (arguments.length) {
                        var e = this._time;
                        return this._rDelay = t, Jt(this), e ? this.time(e) : this
                    }
                    return this._rDelay
                }, e.yoyo = function(t) {
                    return arguments.length ? (this._yoyo = t, this) : this._yoyo
                }, e.seek = function(t, e) {
                    return this.totalTime(ee(this, t), X(e))
                }, e.restart = function(t, e) {
                    return this.play().totalTime(t ? -this._delay : 0, X(e))
                }, e.play = function(t, e) {
                    return null != t && this.seek(t, e), this.reversed(!1).paused(!1)
                }, e.reverse = function(t, e) {
                    return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1)
                }, e.pause = function(t, e) {
                    return null != t && this.seek(t, e), this.paused(!0)
                }, e.resume = function() {
                    return this.paused(!1)
                }, e.reversed = function(t) {
                    return arguments.length ? (!!t !== this.reversed() && this.timeScale(-this._rts || (t ? -1e-8 : 0)), this) : this._rts < 0
                }, e.invalidate = function() {
                    return this._initted = this._act = 0, this._zTime = -1e-8, this
                }, e.isActive = function() {
                    var t, e = this.parent || this._dp,
                        i = this._start;
                    return !(e && !(this._ts && this._initted && e.isActive() && (t = e.rawTime(!0)) >= i && t < this.endTime(!0) - B))
                }, e.eventCallback = function(t, e, i) {
                    var n = this.vars;
                    return arguments.length > 1 ? (e ? (n[t] = e, i && (n[t + "Params"] = i), "onUpdate" === t && (this._onUpdate = e)) : delete n[t], this) : n[t]
                }, e.then = function(t) {
                    var e = this;
                    return new Promise((function(i) {
                        var n = H(t) ? t : Tt,
                            r = function() {
                                var t = e.then;
                                e.then = null, H(n) && (n = n(e)) && (n.then || n === e) && (e.then = t), i(n), e.then = t
                            };
                        e._initted && 1 === e.totalProgress() && e._ts >= 0 || !e._tTime && e._ts < 0 ? r() : e._prom = r
                    }))
                }, e.kill = function() {
                    xe(this)
                }, t
            }();
        Et(Ue.prototype, {
            _time: 0,
            _start: 0,
            _end: 0,
            _tTime: 0,
            _tDur: 0,
            _dirty: 0,
            _repeat: 0,
            _yoyo: !1,
            parent: null,
            _initted: !1,
            _rDelay: 0,
            _ts: 1,
            _dp: 0,
            ratio: 0,
            _zTime: -1e-8,
            _prom: 0,
            _ps: !1,
            _rts: 1
        });
        var Ye = function(i) {
            function n(e, n) {
                var r;
                return void 0 === e && (e = {}), (r = i.call(this, e) || this).labels = {}, r.smoothChildTiming = !!e.smoothChildTiming, r.autoRemoveChildren = !!e.autoRemoveChildren, r._sort = X(e.sortChildren), s && Xt(e.parent || s, t(r), n), e.reversed && r.reverse(), e.paused && r.paused(!0), e.scrollTrigger && Gt(t(r), e.scrollTrigger), r
            }
            e(n, i);
            var r = n.prototype;
            return r.to = function(t, e, i) {
                return ie(0, arguments, this), this
            }, r.from = function(t, e, i) {
                return ie(1, arguments, this), this
            }, r.fromTo = function(t, e, i, n) {
                return ie(2, arguments, this), this
            }, r.set = function(t, e, i) {
                return e.duration = 0, e.parent = this, Bt(e).repeatDelay || (e.repeat = 0), e.immediateRender = !!e.immediateRender, new ei(t, e, ee(this, i), 1), this
            }, r.call = function(t, e, i) {
                return Xt(this, ei.delayedCall(0, t, e), i)
            }, r.staggerTo = function(t, e, i, n, r, s, a) {
                return i.duration = e, i.stagger = i.stagger || n, i.onComplete = s, i.onCompleteParams = a, i.parent = this, new ei(t, i, ee(this, r)), this
            }, r.staggerFrom = function(t, e, i, n, r, s, a) {
                return i.runBackwards = 1, Bt(i).immediateRender = X(i.immediateRender), this.staggerTo(t, e, i, n, r, s, a)
            }, r.staggerFromTo = function(t, e, i, n, r, s, a, o) {
                return n.startAt = i, Bt(n).immediateRender = X(n.immediateRender), this.staggerTo(t, e, n, r, s, a, o)
            }, r.render = function(t, e, i) {
                var n, r, a, o, h, l, c, u, d, p, f, g, m = this._time,
                    v = this._dirty ? this.totalDuration() : this._tDur,
                    _ = this._dur,
                    y = this !== s && t > v - B && t >= 0 ? v : t < B ? 0 : t,
                    x = this._zTime < 0 != t < 0 && (this._initted || !_);
                if (y !== this._tTime || i || x) {
                    if (m !== this._time && _ && (y += this._time - m, t += this._time - m), n = y, d = this._start, l = !(u = this._ts), x && (_ || (m = this._zTime), (t || !e) && (this._zTime = t)), this._repeat) {
                        if (f = this._yoyo, h = _ + this._rDelay, this._repeat < -1 && t < 0) return this.totalTime(100 * h + t, e, i);
                        if (n = Ct(y % h), y === v ? (o = this._repeat, n = _) : ((o = ~~(y / h)) && o === y / h && (n = _, o--), n > _ && (n = _)), p = qt(this._tTime, h), !m && this._tTime && p !== o && (p = o), f && 1 & o && (n = _ - n, g = 1), o !== p && !this._lock) {
                            var b = f && 1 & p,
                                w = b === (f && 1 & o);
                            if (o < p && (b = !b), m = b ? 0 : _, this._lock = 1, this.render(m || (g ? 0 : Ct(o * h)), e, !_)._lock = 0, this._tTime = y, !e && this.parent && ye(this, "onRepeat"), this.vars.repeatRefresh && !g && (this.invalidate()._lock = 1), m && m !== this._time || l !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) return this;
                            if (_ = this._dur, v = this._tDur, w && (this._lock = 2, m = b ? _ : -1e-4, this.render(m, !0), this.vars.repeatRefresh && !g && this.invalidate()), this._lock = 0, !this._ts && !l) return this;
                            Ne(this, g)
                        }
                    }
                    if (this._hasPause && !this._forcing && this._lock < 2 && (c = function(t, e, i) {
                            var n;
                            if (i > e)
                                for (n = t._first; n && n._start <= i;) {
                                    if (!n._dur && "isPause" === n.data && n._start > e) return n;
                                    n = n._next
                                } else
                                    for (n = t._last; n && n._start >= i;) {
                                        if (!n._dur && "isPause" === n.data && n._start < e) return n;
                                        n = n._prev
                                    }
                        }(this, Ct(m), Ct(n))) && (y -= n - (n = c._start)), this._tTime = y, this._time = n, this._act = !u, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = t, m = 0), !m && n && !e && (ye(this, "onStart"), this._tTime !== y)) return this;
                    if (n >= m && t >= 0)
                        for (r = this._first; r;) {
                            if (a = r._next, (r._act || n >= r._start) && r._ts && c !== r) {
                                if (r.parent !== this) return this.render(t, e, i);
                                if (r.render(r._ts > 0 ? (n - r._start) * r._ts : (r._dirty ? r.totalDuration() : r._tDur) + (n - r._start) * r._ts, e, i), n !== this._time || !this._ts && !l) {
                                    c = 0, a && (y += this._zTime = -1e-8);
                                    break
                                }
                            }
                            r = a
                        } else {
                            r = this._last;
                            for (var S = t < 0 ? t : n; r;) {
                                if (a = r._prev, (r._act || S <= r._end) && r._ts && c !== r) {
                                    if (r.parent !== this) return this.render(t, e, i);
                                    if (r.render(r._ts > 0 ? (S - r._start) * r._ts : (r._dirty ? r.totalDuration() : r._tDur) + (S - r._start) * r._ts, e, i), n !== this._time || !this._ts && !l) {
                                        c = 0, a && (y += this._zTime = S ? -1e-8 : B);
                                        break
                                    }
                                }
                                r = a
                            }
                        }
                    if (c && !e && (this.pause(), c.render(n >= m ? 0 : -1e-8)._zTime = n >= m ? 1 : -1, this._ts)) return this._start = d, Wt(this), this.render(t, e, i);
                    this._onUpdate && !e && ye(this, "onUpdate", !0), (y === v && v >= this.totalDuration() || !y && m) && (d !== this._start && Math.abs(u) === Math.abs(this._ts) || this._lock || ((t || !_) && (y === v && this._ts > 0 || !y && this._ts < 0) && zt(this, 1), e || t < 0 && !m || !y && !m && v || (ye(this, y === v && t >= 0 ? "onComplete" : "onReverseComplete", !0), this._prom && !(y < v && this.timeScale() > 0) && this._prom())))
                }
                return this
            }, r.add = function(t, e) {
                var i = this;
                if (W(e) || (e = ee(this, e, t)), !(t instanceof Ue)) {
                    if ($(t)) return t.forEach((function(t) {
                        return i.add(t, e)
                    })), this;
                    if (q(t)) return this.addLabel(t, e);
                    if (!H(t)) return this;
                    t = ei.delayedCall(0, t)
                }
                return this !== t ? Xt(this, t, e) : this
            }, r.getChildren = function(t, e, i, n) {
                void 0 === t && (t = !0), void 0 === e && (e = !0), void 0 === i && (i = !0), void 0 === n && (n = -D);
                for (var r = [], s = this._first; s;) s._start >= n && (s instanceof ei ? e && r.push(s) : (i && r.push(s), t && r.push.apply(r, s.getChildren(!0, e, i)))), s = s._next;
                return r
            }, r.getById = function(t) {
                for (var e = this.getChildren(1, 1, 1), i = e.length; i--;)
                    if (e[i].vars.id === t) return e[i]
            }, r.remove = function(t) {
                return q(t) ? this.removeLabel(t) : H(t) ? this.killTweensOf(t) : (Rt(this, t), t === this._recent && (this._recent = this._last), Nt(this))
            }, r.totalTime = function(t, e) {
                return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = Ct(Ie.time - (this._ts > 0 ? t / this._ts : (this.totalDuration() - t) / -this._ts))), i.prototype.totalTime.call(this, t, e), this._forcing = 0, this) : this._tTime
            }, r.addLabel = function(t, e) {
                return this.labels[t] = ee(this, e), this
            }, r.removeLabel = function(t) {
                return delete this.labels[t], this
            }, r.addPause = function(t, e, i) {
                var n = ei.delayedCall(0, e || ut, i);
                return n.data = "isPause", this._hasPause = 1, Xt(this, n, ee(this, t))
            }, r.removePause = function(t) {
                var e = this._first;
                for (t = ee(this, t); e;) e._start === t && "isPause" === e.data && zt(e), e = e._next
            }, r.killTweensOf = function(t, e, i) {
                for (var n = this.getTweensOf(t, i), r = n.length; r--;) Xe !== n[r] && n[r].kill(t, e);
                return this
            }, r.getTweensOf = function(t, e) {
                for (var i, n = [], r = le(t), s = this._first, a = W(e); s;) s instanceof ei ? kt(s._targets, r) && (a ? (!Xe || s._initted && s._ts) && s.globalTime(0) <= e && s.globalTime(s.totalDuration()) > e : !e || s.isActive()) && n.push(s) : (i = s.getTweensOf(r, e)).length && n.push.apply(n, i), s = s._next;
                return n
            }, r.tweenTo = function(t, e) {
                e = e || {};
                var i, n = this,
                    r = ee(n, t),
                    s = e,
                    a = s.startAt,
                    o = s.onStart,
                    h = s.onStartParams,
                    l = s.immediateRender,
                    c = ei.to(n, Et({
                        ease: e.ease || "none",
                        lazy: !1,
                        immediateRender: !1,
                        time: r,
                        overwrite: "auto",
                        duration: e.duration || Math.abs((r - (a && "time" in a ? a.time : n._time)) / n.timeScale()) || B,
                        onStart: function() {
                            if (n.pause(), !i) {
                                var t = e.duration || Math.abs((r - (a && "time" in a ? a.time : n._time)) / n.timeScale());
                                c._dur !== t && Kt(c, t, 0, 1).render(c._time, !0, !0), i = 1
                            }
                            o && o.apply(c, h || [])
                        }
                    }, e));
                return l ? c.render(0) : c
            }, r.tweenFromTo = function(t, e, i) {
                return this.tweenTo(e, Et({
                    startAt: {
                        time: ee(this, t)
                    }
                }, i))
            }, r.recent = function() {
                return this._recent
            }, r.nextLabel = function(t) {
                return void 0 === t && (t = this._time), _e(this, ee(this, t))
            }, r.previousLabel = function(t) {
                return void 0 === t && (t = this._time), _e(this, ee(this, t), 1)
            }, r.currentLabel = function(t) {
                return arguments.length ? this.seek(t, !0) : this.previousLabel(this._time + B)
            }, r.shiftChildren = function(t, e, i) {
                void 0 === i && (i = 0);
                for (var n, r = this._first, s = this.labels; r;) r._start >= i && (r._start += t, r._end += t), r = r._next;
                if (e)
                    for (n in s) s[n] >= i && (s[n] += t);
                return Nt(this)
            }, r.invalidate = function() {
                var t = this._first;
                for (this._lock = 0; t;) t.invalidate(), t = t._next;
                return i.prototype.invalidate.call(this)
            }, r.clear = function(t) {
                void 0 === t && (t = !0);
                for (var e, i = this._first; i;) e = i._next, this.remove(i), i = e;
                return this._dp && (this._time = this._tTime = this._pTime = 0), t && (this.labels = {}), Nt(this)
            }, r.totalDuration = function(t) {
                var e, i, n, r = 0,
                    a = this,
                    o = a._last,
                    h = D;
                if (arguments.length) return a.timeScale((a._repeat < 0 ? a.duration() : a.totalDuration()) / (a.reversed() ? -t : t));
                if (a._dirty) {
                    for (n = a.parent; o;) e = o._prev, o._dirty && o.totalDuration(), (i = o._start) > h && a._sort && o._ts && !a._lock ? (a._lock = 1, Xt(a, o, i - o._delay, 1)._lock = 0) : h = i, i < 0 && o._ts && (r -= i, (!n && !a._dp || n && n.smoothChildTiming) && (a._start += i / a._ts, a._time -= i, a._tTime -= i), a.shiftChildren(-i, !1, -Infinity), h = 0), o._end > r && o._ts && (r = o._end), o = e;
                    Kt(a, a === s && a._time > r ? a._time : r, 1, 1), a._dirty = 0
                }
                return a._tDur
            }, n.updateRoot = function(t) {
                if (s._ts && (Pt(s, Ht(t, s)), c = Ie.frame), Ie.frame >= vt) {
                    vt += O.autoSleep || 120;
                    var e = s._first;
                    if ((!e || !e._ts) && O.autoSleep && Ie._listeners.length < 2) {
                        for (; e && !e._ts;) e = e._next;
                        e || Ie.sleep()
                    }
                }
            }, n
        }(Ue);
        Et(Ye.prototype, {
            _lock: 0,
            _hasPause: 0,
            _forcing: 0
        });
        var Xe, Ge = function(t, e, i, n, r, s, a) {
                var o, h, l, c, u, d, p, f, g = new gi(this._pt, t, e, 0, 1, li, null, r),
                    m = 0,
                    v = 0;
                for (g.b = i, g.e = n, i += "", (p = ~(n += "").indexOf("random(")) && (n = me(n)), s && (s(f = [i, n], t, e), i = f[0], n = f[1]), h = i.match(et) || []; o = et.exec(n);) c = o[0], u = n.substring(m, o.index), l ? l = (l + 1) % 5 : "rgba(" === u.substr(-5) && (l = 1), c !== h[v++] && (d = parseFloat(h[v - 1]) || 0, g._pt = {
                    _next: g._pt,
                    p: u || 1 === v ? u : ",",
                    s: d,
                    c: "=" === c.charAt(1) ? parseFloat(c.substr(2)) * ("-" === c.charAt(0) ? -1 : 1) : parseFloat(c) - d,
                    m: l && l < 4 ? Math.round : 0
                }, m = et.lastIndex);
                return g.c = m < n.length ? n.substring(m, n.length) : "", g.fp = a, (it.test(n) || p) && (g.e = 0), this._pt = g, g
            },
            Ze = function(t, e, i, n, r, s, a, o, h) {
                H(n) && (n = n(r || 0, t, s));
                var l, c = t[e],
                    u = "get" !== i ? i : H(c) ? h ? t[e.indexOf("set") || !H(t["get" + e.substr(3)]) ? e : "get" + e.substr(3)](h) : t[e]() : c,
                    d = H(c) ? h ? ri : ni : ii;
                if (q(n) && (~n.indexOf("random(") && (n = me(n)), "=" === n.charAt(1) && ((l = parseFloat(u) + parseFloat(n.substr(2)) * ("-" === n.charAt(0) ? -1 : 1) + (se(u) || 0)) || 0 === l) && (n = l)), u !== n) return isNaN(u * n) || "" === n ? (!c && !(e in t) && ht(e, n), Ge.call(this, t, e, u, n, d, o || O.stringFilter, h)) : (l = new gi(this._pt, t, e, +u || 0, n - (u || 0), "boolean" == typeof c ? hi : oi, 0, d), h && (l.fp = h), a && l.modifier(a, this, t), this._pt = l)
            },
            Qe = function(t, e, i, n, r, s) {
                var a, o, h, l;
                if (gt[t] && !1 !== (a = new gt[t]).init(r, a.rawVars ? e[t] : function(t, e, i, n, r) {
                        if (H(t) && (t = Ke(t, r, e, i, n)), !Y(t) || t.style && t.nodeType || $(t) || Q(t)) return q(t) ? Ke(t, r, e, i, n) : t;
                        var s, a = {};
                        for (s in t) a[s] = Ke(t[s], r, e, i, n);
                        return a
                    }(e[t], n, r, s, i), i, n, s) && (i._pt = o = new gi(i._pt, r, t, 0, 1, a.render, a, 0, a.priority), i !== u))
                    for (h = i._ptLookup[i._targets.indexOf(r)], l = a._props.length; l--;) h[a._props[l]] = o;
                return a
            },
            $e = function t(e, i) {
                var n, a, o, h, l, c, u, d, p, f, g, m, v, _ = e.vars,
                    y = _.ease,
                    x = _.startAt,
                    b = _.immediateRender,
                    w = _.lazy,
                    S = _.onUpdate,
                    C = _.onUpdateParams,
                    k = _.callbackScope,
                    A = _.runBackwards,
                    P = _.yoyoEase,
                    M = _.keyframes,
                    T = _.autoRevert,
                    E = e._dur,
                    I = e._startAt,
                    O = e._targets,
                    D = e.parent,
                    R = D && "nested" === D.data ? D.parent._targets : O,
                    z = "auto" === e._overwrite && !r,
                    N = e.timeline;
                if (N && (!M || !y) && (y = "none"), e._ease = Ve(y, L.ease), e._yEase = P ? ze(Ve(!0 === P ? y : P, L.ease)) : 0, P && e._yoyo && !e._repeat && (P = e._yEase, e._yEase = e._ease, e._ease = P), e._from = !N && !!_.runBackwards, !N) {
                    if (m = (d = O[0] ? bt(O[0]).harness : 0) && _[d.prop], n = Dt(_, dt), I && I.render(-1, !0).kill(), x)
                        if (zt(e._startAt = ei.set(O, Et({
                                data: "isStart",
                                overwrite: !1,
                                parent: D,
                                immediateRender: !0,
                                lazy: X(w),
                                startAt: null,
                                delay: 0,
                                onUpdate: S,
                                onUpdateParams: C,
                                callbackScope: k,
                                stagger: 0
                            }, x))), i < 0 && !b && !T && e._startAt.render(-1, !0), b) {
                            if (i > 0 && !T && (e._startAt = 0), E && i <= 0) return void(i && (e._zTime = i))
                        } else !1 === T && (e._startAt = 0);
                    else if (A && E)
                        if (I) !T && (e._startAt = 0);
                        else if (i && (b = !1), o = Et({
                            overwrite: !1,
                            data: "isFromStart",
                            lazy: b && X(w),
                            immediateRender: b,
                            stagger: 0,
                            parent: D
                        }, n), m && (o[d.prop] = m), zt(e._startAt = ei.set(O, o)), i < 0 && e._startAt.render(-1, !0), b) {
                        if (!i) return
                    } else t(e._startAt, B);
                    for (e._pt = 0, w = E && X(w) || w && !E, a = 0; a < O.length; a++) {
                        if (u = (l = O[a])._gsap || xt(O)[a]._gsap, e._ptLookup[a] = f = {}, ft[u.id] && pt.length && At(), g = R === O ? a : R.indexOf(l), d && !1 !== (p = new d).init(l, m || n, e, g, R) && (e._pt = h = new gi(e._pt, l, p.name, 0, 1, p.render, p, 0, p.priority), p._props.forEach((function(t) {
                                f[t] = h
                            })), p.priority && (c = 1)), !d || m)
                            for (o in n) gt[o] && (p = Qe(o, n, e, g, l, R)) ? p.priority && (c = 1) : f[o] = h = Ze.call(e, l, o, "get", n[o], g, R, 0, _.stringFilter);
                        e._op && e._op[a] && e.kill(l, e._op[a]), z && e._pt && (Xe = e, s.killTweensOf(l, f, e.globalTime(0)), v = !e.parent, Xe = 0), e._pt && w && (ft[u.id] = 1)
                    }
                    c && fi(e), e._onInit && e._onInit(e)
                }
                e._onUpdate = S, e._initted = (!e._op || e._pt) && !v
            },
            Ke = function(t, e, i, n, r) {
                return H(t) ? t.call(e, i, n, r) : q(t) && ~t.indexOf("random(") ? me(t) : t
            },
            Je = yt + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
            ti = (Je + ",id,stagger,delay,duration,paused,scrollTrigger").split(","),
            ei = function(i) {
                function n(e, n, a, o) {
                    var h;
                    "number" == typeof n && (a.duration = n, n = a, a = null);
                    var l, c, u, d, p, f, g, m, v = (h = i.call(this, o ? n : Bt(n)) || this).vars,
                        _ = v.duration,
                        y = v.delay,
                        x = v.immediateRender,
                        b = v.stagger,
                        w = v.overwrite,
                        S = v.keyframes,
                        C = v.defaults,
                        k = v.scrollTrigger,
                        A = v.yoyoEase,
                        P = n.parent || s,
                        M = ($(e) || Q(e) ? W(e[0]) : "length" in n) ? [e] : le(e);
                    if (h._targets = M.length ? xt(M) : lt("GSAP target " + e + " not found. https://greensock.com", !O.nullTargetWarn) || [], h._ptLookup = [], h._overwrite = w, S || b || Z(_) || Z(y)) {
                        if (n = h.vars, (l = h.timeline = new Ye({
                                data: "nested",
                                defaults: C || {}
                            })).kill(), l.parent = l._dp = t(h), l._start = 0, S) Et(l.vars.defaults, {
                            ease: "none"
                        }), b ? M.forEach((function(t, e) {
                            return S.forEach((function(i, n) {
                                return l.to(t, i, n ? ">" : e * b)
                            }))
                        })) : S.forEach((function(t) {
                            return l.to(M, t, ">")
                        }));
                        else {
                            if (d = M.length, g = b ? ue(b) : ut, Y(b))
                                for (p in b) ~Je.indexOf(p) && (m || (m = {}), m[p] = b[p]);
                            for (c = 0; c < d; c++) {
                                for (p in u = {}, n) ti.indexOf(p) < 0 && (u[p] = n[p]);
                                u.stagger = 0, A && (u.yoyoEase = A), m && Ot(u, m), f = M[c], u.duration = +Ke(_, t(h), c, f, M), u.delay = (+Ke(y, t(h), c, f, M) || 0) - h._delay, !b && 1 === d && u.delay && (h._delay = y = u.delay, h._start += y, u.delay = 0), l.to(f, u, g(c, f, M))
                            }
                            l.duration() ? _ = y = 0 : h.timeline = 0
                        }
                        _ || h.duration(_ = l.duration())
                    } else h.timeline = 0;
                    return !0 !== w || r || (Xe = t(h), s.killTweensOf(M), Xe = 0), Xt(P, t(h), a), n.reversed && h.reverse(), n.paused && h.paused(!0), (x || !_ && !S && h._start === Ct(P._time) && X(x) && Ft(t(h)) && "nested" !== P.data) && (h._tTime = -1e-8, h.render(Math.max(0, -y))), k && Gt(t(h), k), h
                }
                e(n, i);
                var a = n.prototype;
                return a.render = function(t, e, i) {
                    var n, r, s, a, o, h, l, c, u, d = this._time,
                        p = this._tDur,
                        f = this._dur,
                        g = t > p - B && t >= 0 ? p : t < B ? 0 : t;
                    if (f) {
                        if (g !== this._tTime || !t || i || !this._initted && this._tTime || this._startAt && this._zTime < 0 != t < 0) {
                            if (n = g, c = this.timeline, this._repeat) {
                                if (a = f + this._rDelay, this._repeat < -1 && t < 0) return this.totalTime(100 * a + t, e, i);
                                if (n = Ct(g % a), g === p ? (s = this._repeat, n = f) : ((s = ~~(g / a)) && s === g / a && (n = f, s--), n > f && (n = f)), (h = this._yoyo && 1 & s) && (u = this._yEase, n = f - n), o = qt(this._tTime, a), n === d && !i && this._initted) return this;
                                s !== o && (c && this._yEase && Ne(c, h), !this.vars.repeatRefresh || h || this._lock || (this._lock = i = 1, this.render(Ct(a * s), !0).invalidate()._lock = 0))
                            }
                            if (!this._initted) {
                                if (Zt(this, t < 0 ? t : n, i, e)) return this._tTime = 0, this;
                                if (f !== this._dur) return this.render(t, e, i)
                            }
                            if (this._tTime = g, this._time = n, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = l = (u || this._ease)(n / f), this._from && (this.ratio = l = 1 - l), n && !d && !e && (ye(this, "onStart"), this._tTime !== g)) return this;
                            for (r = this._pt; r;) r.r(l, r.d), r = r._next;
                            c && c.render(t < 0 ? t : !n && h ? -1e-8 : c._dur * l, e, i) || this._startAt && (this._zTime = t), this._onUpdate && !e && (t < 0 && this._startAt && this._startAt.render(t, !0, i), ye(this, "onUpdate")), this._repeat && s !== o && this.vars.onRepeat && !e && this.parent && ye(this, "onRepeat"), g !== this._tDur && g || this._tTime !== g || (t < 0 && this._startAt && !this._onUpdate && this._startAt.render(t, !0, !0), (t || !f) && (g === this._tDur && this._ts > 0 || !g && this._ts < 0) && zt(this, 1), e || t < 0 && !d || !g && !d || (ye(this, g === p ? "onComplete" : "onReverseComplete", !0), this._prom && !(g < p && this.timeScale() > 0) && this._prom()))
                        }
                    } else ! function(t, e, i, n) {
                        var r, s, a, o = t.ratio,
                            h = e < 0 || !e && (!t._start && Qt(t) && (t._initted || !$t(t)) || (t._ts < 0 || t._dp._ts < 0) && !$t(t)) ? 0 : 1,
                            l = t._rDelay,
                            c = 0;
                        if (l && t._repeat && (c = re(0, t._tDur, e), s = qt(c, l), a = qt(t._tTime, l), t._yoyo && 1 & s && (h = 1 - h), s !== a && (o = 1 - h, t.vars.repeatRefresh && t._initted && t.invalidate())), h !== o || n || t._zTime === B || !e && t._zTime) {
                            if (!t._initted && Zt(t, e, n, i)) return;
                            for (a = t._zTime, t._zTime = e || (i ? B : 0), i || (i = e && !a), t.ratio = h, t._from && (h = 1 - h), t._time = 0, t._tTime = c, r = t._pt; r;) r.r(h, r.d), r = r._next;
                            t._startAt && e < 0 && t._startAt.render(e, !0, !0), t._onUpdate && !i && ye(t, "onUpdate"), c && t._repeat && !i && t.parent && ye(t, "onRepeat"), (e >= t._tDur || e < 0) && t.ratio === h && (h && zt(t, 1), i || (ye(t, h ? "onComplete" : "onReverseComplete", !0), t._prom && t._prom()))
                        } else t._zTime || (t._zTime = e)
                    }(this, t, e, i);
                    return this
                }, a.targets = function() {
                    return this._targets
                }, a.invalidate = function() {
                    return this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(), i.prototype.invalidate.call(this)
                }, a.kill = function(t, e) {
                    if (void 0 === e && (e = "all"), !(t || e && "all" !== e)) return this._lazy = this._pt = 0, this.parent ? xe(this) : this;
                    if (this.timeline) {
                        var i = this.timeline.totalDuration();
                        return this.timeline.killTweensOf(t, e, Xe && !0 !== Xe.vars.overwrite)._first || xe(this), this.parent && i !== this.timeline.totalDuration() && Kt(this, this._dur * this.timeline._tDur / i, 0, 1), this
                    }
                    var n, r, s, a, o, h, l, c = this._targets,
                        u = t ? le(t) : c,
                        d = this._ptLookup,
                        p = this._pt;
                    if ((!e || "all" === e) && function(t, e) {
                            for (var i = t.length, n = i === e.length; n && i-- && t[i] === e[i];);
                            return i < 0
                        }(c, u)) return "all" === e && (this._pt = 0), xe(this);
                    for (n = this._op = this._op || [], "all" !== e && (q(e) && (o = {}, St(e, (function(t) {
                            return o[t] = 1
                        })), e = o), e = function(t, e) {
                            var i, n, r, s, a = t[0] ? bt(t[0]).harness : 0,
                                o = a && a.aliases;
                            if (!o) return e;
                            for (n in i = Ot({}, e), o)
                                if (n in i)
                                    for (r = (s = o[n].split(",")).length; r--;) i[s[r]] = i[n];
                            return i
                        }(c, e)), l = c.length; l--;)
                        if (~u.indexOf(c[l]))
                            for (o in r = d[l], "all" === e ? (n[l] = e, a = r, s = {}) : (s = n[l] = n[l] || {}, a = e), a)(h = r && r[o]) && ("kill" in h.d && !0 !== h.d.kill(o) || Rt(this, h, "_pt"), delete r[o]), "all" !== s && (s[o] = 1);
                    return this._initted && !this._pt && p && xe(this), this
                }, n.to = function(t, e) {
                    return new n(t, e, arguments[2])
                }, n.from = function(t, e) {
                    return ie(1, arguments)
                }, n.delayedCall = function(t, e, i, r) {
                    return new n(e, 0, {
                        immediateRender: !1,
                        lazy: !1,
                        overwrite: !1,
                        delay: t,
                        onComplete: e,
                        onReverseComplete: e,
                        onCompleteParams: i,
                        onReverseCompleteParams: i,
                        callbackScope: r
                    })
                }, n.fromTo = function(t, e, i) {
                    return ie(2, arguments)
                }, n.set = function(t, e) {
                    return e.duration = 0, e.repeatDelay || (e.repeat = 0), new n(t, e)
                }, n.killTweensOf = function(t, e, i) {
                    return s.killTweensOf(t, e, i)
                }, n
            }(Ue);
        Et(ei.prototype, {
            _targets: [],
            _lazy: 0,
            _startAt: 0,
            _op: 0,
            _onInit: 0
        }), St("staggerTo,staggerFrom,staggerFromTo", (function(t) {
            ei[t] = function() {
                var e = new Ye,
                    i = ae.call(arguments, 0);
                return i.splice("staggerFromTo" === t ? 5 : 4, 0, 0), e[t].apply(e, i)
            }
        }));
        var ii = function(t, e, i) {
                return t[e] = i
            },
            ni = function(t, e, i) {
                return t[e](i)
            },
            ri = function(t, e, i, n) {
                return t[e](n.fp, i)
            },
            si = function(t, e, i) {
                return t.setAttribute(e, i)
            },
            ai = function(t, e) {
                return H(t[e]) ? ni : U(t[e]) && t.setAttribute ? si : ii
            },
            oi = function(t, e) {
                return e.set(e.t, e.p, Math.round(1e6 * (e.s + e.c * t)) / 1e6, e)
            },
            hi = function(t, e) {
                return e.set(e.t, e.p, !!(e.s + e.c * t), e)
            },
            li = function(t, e) {
                var i = e._pt,
                    n = "";
                if (!t && e.b) n = e.b;
                else if (1 === t && e.e) n = e.e;
                else {
                    for (; i;) n = i.p + (i.m ? i.m(i.s + i.c * t) : Math.round(1e4 * (i.s + i.c * t)) / 1e4) + n, i = i._next;
                    n += e.c
                }
                e.set(e.t, e.p, n, e)
            },
            ci = function(t, e) {
                for (var i = e._pt; i;) i.r(t, i.d), i = i._next
            },
            ui = function(t, e, i, n) {
                for (var r, s = this._pt; s;) r = s._next, s.p === n && s.modifier(t, e, i), s = r
            },
            di = function(t) {
                for (var e, i, n = this._pt; n;) i = n._next, n.p === t && !n.op || n.op === t ? Rt(this, n, "_pt") : n.dep || (e = 1), n = i;
                return !e
            },
            pi = function(t, e, i, n) {
                n.mSet(t, e, n.m.call(n.tween, i, n.mt), n)
            },
            fi = function(t) {
                for (var e, i, n, r, s = t._pt; s;) {
                    for (e = s._next, i = n; i && i.pr > s.pr;) i = i._next;
                    (s._prev = i ? i._prev : r) ? s._prev._next = s: n = s, (s._next = i) ? i._prev = s : r = s, s = e
                }
                t._pt = n
            },
            gi = function() {
                function t(t, e, i, n, r, s, a, o, h) {
                    this.t = e, this.s = n, this.c = r, this.p = i, this.r = s || oi, this.d = a || this, this.set = o || ii, this.pr = h || 0, this._next = t, t && (t._prev = this)
                }
                return t.prototype.modifier = function(t, e, i) {
                    this.mSet = this.mSet || this.set, this.set = pi, this.m = t, this.mt = i, this.tween = e
                }, t
            }();
        St(yt + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", (function(t) {
            return dt[t] = 1
        })), st.TweenMax = st.TweenLite = ei, st.TimelineLite = st.TimelineMax = Ye, s = new Ye({
            sortChildren: !1,
            defaults: L,
            autoRemoveChildren: !0,
            id: "root",
            smoothChildTiming: !0
        }), O.stringFilter = Ee;
        var mi = {
            registerPlugin: function() {
                for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
                e.forEach((function(t) {
                    return be(t)
                }))
            },
            timeline: function(t) {
                return new Ye(t)
            },
            getTweensOf: function(t, e) {
                return s.getTweensOf(t, e)
            },
            getProperty: function(t, e, i, n) {
                q(t) && (t = le(t)[0]);
                var r = bt(t || {}).get,
                    s = i ? Tt : Mt;
                return "native" === i && (i = ""), t ? e ? s((gt[e] && gt[e].get || r)(t, e, i, n)) : function(e, i, n) {
                    return s((gt[e] && gt[e].get || r)(t, e, i, n))
                } : t
            },
            quickSetter: function(t, e, i) {
                if ((t = le(t)).length > 1) {
                    var n = t.map((function(t) {
                            return yi.quickSetter(t, e, i)
                        })),
                        r = n.length;
                    return function(t) {
                        for (var e = r; e--;) n[e](t)
                    }
                }
                t = t[0] || {};
                var s = gt[e],
                    a = bt(t),
                    o = a.harness && (a.harness.aliases || {})[e] || e,
                    h = s ? function(e) {
                        var n = new s;
                        u._pt = 0, n.init(t, i ? e + i : e, u, 0, [t]), n.render(1, n), u._pt && ci(1, u)
                    } : a.set(t, o);
                return s ? h : function(e) {
                    return h(t, o, i ? e + i : e, a, 1)
                }
            },
            isTweening: function(t) {
                return s.getTweensOf(t, !0).length > 0
            },
            defaults: function(t) {
                return t && t.ease && (t.ease = Ve(t.ease, L.ease)), Lt(L, t || {})
            },
            config: function(t) {
                return Lt(O, t || {})
            },
            registerEffect: function(t) {
                var e = t.name,
                    i = t.effect,
                    n = t.plugins,
                    r = t.defaults,
                    s = t.extendTimeline;
                (n || "").split(",").forEach((function(t) {
                    return t && !gt[t] && !st[t] && lt(e + " effect requires " + t + " plugin.")
                })), mt[e] = function(t, e, n) {
                    return i(le(t), Et(e || {}, r), n)
                }, s && (Ye.prototype[e] = function(t, i, n) {
                    return this.add(mt[e](t, Y(i) ? i : (n = i) && {}, this), n)
                })
            },
            registerEase: function(t, e) {
                Le[t] = Ve(e)
            },
            parseEase: function(t, e) {
                return arguments.length ? Ve(t, e) : Le
            },
            getById: function(t) {
                return s.getById(t)
            },
            exportRoot: function(t, e) {
                void 0 === t && (t = {});
                var i, n, r = new Ye(t);
                for (r.smoothChildTiming = X(t.smoothChildTiming), s.remove(r), r._dp = 0, r._time = r._tTime = s._time, i = s._first; i;) n = i._next, !e && !i._dur && i instanceof ei && i.vars.onComplete === i._targets[0] || Xt(r, i, i._start - i._delay), i = n;
                return Xt(s, r, 0), r
            },
            utils: {
                wrap: function t(e, i, n) {
                    var r = i - e;
                    return $(e) ? ge(e, t(0, e.length), i) : ne(n, (function(t) {
                        return (r + (t - e) % r) % r + e
                    }))
                },
                wrapYoyo: function t(e, i, n) {
                    var r = i - e,
                        s = 2 * r;
                    return $(e) ? ge(e, t(0, e.length - 1), i) : ne(n, (function(t) {
                        return e + ((t = (s + (t - e) % s) % s || 0) > r ? s - t : t)
                    }))
                },
                distribute: ue,
                random: fe,
                snap: pe,
                normalize: function(t, e, i) {
                    return ve(t, e, 0, 1, i)
                },
                getUnit: se,
                clamp: function(t, e, i) {
                    return ne(i, (function(i) {
                        return re(t, e, i)
                    }))
                },
                splitColor: ke,
                toArray: le,
                selector: function(t) {
                    return t = le(t)[0] || lt("Invalid scope") || {},
                        function(e) {
                            var i = t.current || t.nativeElement || t;
                            return le(e, i.querySelectorAll ? i : i === t ? lt("Invalid scope") || h.createElement("div") : t)
                        }
                },
                mapRange: ve,
                pipe: function() {
                    for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
                    return function(t) {
                        return e.reduce((function(t, e) {
                            return e(t)
                        }), t)
                    }
                },
                unitize: function(t, e) {
                    return function(i) {
                        return t(parseFloat(i)) + (e || se(i))
                    }
                },
                interpolate: function t(e, i, n, r) {
                    var s = isNaN(e + i) ? 0 : function(t) {
                        return (1 - t) * e + t * i
                    };
                    if (!s) {
                        var a, o, h, l, c, u = q(e),
                            d = {};
                        if (!0 === n && (r = 1) && (n = null), u) e = {
                            p: e
                        }, i = {
                            p: i
                        };
                        else if ($(e) && !$(i)) {
                            for (h = [], l = e.length, c = l - 2, o = 1; o < l; o++) h.push(t(e[o - 1], e[o]));
                            l--, s = function(t) {
                                t *= l;
                                var e = Math.min(c, ~~t);
                                return h[e](t - e)
                            }, n = i
                        } else r || (e = Ot($(e) ? [] : {}, e));
                        if (!h) {
                            for (a in i) Ze.call(d, e, a, "get", i[a]);
                            s = function(t) {
                                return ci(t, d) || (u ? e.p : e)
                            }
                        }
                    }
                    return ne(n, s)
                },
                shuffle: ce
            },
            install: ot,
            effects: mt,
            ticker: Ie,
            updateRoot: Ye.updateRoot,
            plugins: gt,
            globalTimeline: s,
            core: {
                PropTween: gi,
                globals: ct,
                Tween: ei,
                Timeline: Ye,
                Animation: Ue,
                getCache: bt,
                _removeLinkedListItem: Rt,
                suppressOverwrites: function(t) {
                    return r = t
                }
            }
        };
        St("to,from,fromTo,delayedCall,set,killTweensOf", (function(t) {
            return mi[t] = ei[t]
        })), Ie.add(Ye.updateRoot), u = mi.to({}, {
            duration: 0
        });
        var vi = function(t, e) {
                for (var i = t._pt; i && i.p !== e && i.op !== e && i.fp !== e;) i = i._next;
                return i
            },
            _i = function(t, e) {
                return {
                    name: t,
                    rawVars: 1,
                    init: function(t, i, n) {
                        n._onInit = function(t) {
                            var n, r;
                            if (q(i) && (n = {}, St(i, (function(t) {
                                    return n[t] = 1
                                })), i = n), e) {
                                for (r in n = {}, i) n[r] = e(i[r]);
                                i = n
                            }! function(t, e) {
                                var i, n, r, s = t._targets;
                                for (i in e)
                                    for (n = s.length; n--;)(r = t._ptLookup[n][i]) && (r = r.d) && (r._pt && (r = vi(r, i)), r && r.modifier && r.modifier(e[i], t, s[n], i))
                            }(t, i)
                        }
                    }
                }
            },
            yi = mi.registerPlugin({
                name: "attr",
                init: function(t, e, i, n, r) {
                    var s, a;
                    for (s in e)(a = this.add(t, "setAttribute", (t.getAttribute(s) || 0) + "", e[s], n, r, 0, 0, s)) && (a.op = s), this._props.push(s)
                }
            }, {
                name: "endArray",
                init: function(t, e) {
                    for (var i = e.length; i--;) this.add(t, i, t[i] || 0, e[i])
                }
            }, _i("roundProps", de), _i("modifiers"), _i("snap", pe)) || mi;
        ei.version = Ye.version = yi.version = "3.7.1", l = 1, G() && Oe();
        Le.Power0, Le.Power1, Le.Power2, Le.Power3, Le.Power4, Le.Linear, Le.Quad, Le.Cubic, Le.Quart, Le.Quint, Le.Strong, Le.Elastic, Le.Back, Le.SteppedEase, Le.Bounce, Le.Sine, Le.Expo, Le.Circ;
        var xi, bi, wi, Si, Ci, ki, Ai, Pi = {},
            Mi = 180 / Math.PI,
            Ti = Math.PI / 180,
            Ei = Math.atan2,
            Ii = /([A-Z])/g,
            Oi = /(?:left|right|width|margin|padding|x)/i,
            Li = /[\s,\(]\S/,
            Di = {
                autoAlpha: "opacity,visibility",
                scale: "scaleX,scaleY",
                alpha: "opacity"
            },
            Bi = function(t, e) {
                return e.set(e.t, e.p, Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u, e)
            },
            Ri = function(t, e) {
                return e.set(e.t, e.p, 1 === t ? e.e : Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u, e)
            },
            zi = function(t, e) {
                return e.set(e.t, e.p, t ? Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u : e.b, e)
            },
            Ni = function(t, e) {
                var i = e.s + e.c * t;
                e.set(e.t, e.p, ~~(i + (i < 0 ? -.5 : .5)) + e.u, e)
            },
            Vi = function(t, e) {
                return e.set(e.t, e.p, t ? e.e : e.b, e)
            },
            Fi = function(t, e) {
                return e.set(e.t, e.p, 1 !== t ? e.b : e.e, e)
            },
            ji = function(t, e, i) {
                return t.style[e] = i
            },
            qi = function(t, e, i) {
                return t.style.setProperty(e, i)
            },
            Hi = function(t, e, i) {
                return t._gsap[e] = i
            },
            Wi = function(t, e, i) {
                return t._gsap.scaleX = t._gsap.scaleY = i
            },
            Ui = function(t, e, i, n, r) {
                var s = t._gsap;
                s.scaleX = s.scaleY = i, s.renderTransform(r, s)
            },
            Yi = function(t, e, i, n, r) {
                var s = t._gsap;
                s[e] = i, s.renderTransform(r, s)
            },
            Xi = "transform",
            Gi = Xi + "Origin",
            Zi = function(t, e) {
                var i = bi.createElementNS ? bi.createElementNS((e || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), t) : bi.createElement(t);
                return i.style ? i : bi.createElement(t)
            },
            Qi = function t(e, i, n) {
                var r = getComputedStyle(e);
                return r[i] || r.getPropertyValue(i.replace(Ii, "-$1").toLowerCase()) || r.getPropertyValue(i) || !n && t(e, Ki(i) || i, 1) || ""
            },
            $i = "O,Moz,ms,Ms,Webkit".split(","),
            Ki = function(t, e, i) {
                var n = (e || Ci).style,
                    r = 5;
                if (t in n && !i) return t;
                for (t = t.charAt(0).toUpperCase() + t.substr(1); r-- && !($i[r] + t in n););
                return r < 0 ? null : (3 === r ? "ms" : r >= 0 ? $i[r] : "") + t
            },
            Ji = function() {
                "undefined" != typeof window && window.document && (xi = window, bi = xi.document, wi = bi.documentElement, Ci = Zi("div") || {
                    style: {}
                }, Zi("div"), Xi = Ki(Xi), Gi = Xi + "Origin", Ci.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", Ai = !!Ki("perspective"), Si = 1)
            },
            tn = function t(e) {
                var i, n = Zi("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
                    r = this.parentNode,
                    s = this.nextSibling,
                    a = this.style.cssText;
                if (wi.appendChild(n), n.appendChild(this), this.style.display = "block", e) try {
                    i = this.getBBox(), this._gsapBBox = this.getBBox, this.getBBox = t
                } catch (t) {} else this._gsapBBox && (i = this._gsapBBox());
                return r && (s ? r.insertBefore(this, s) : r.appendChild(this)), wi.removeChild(n), this.style.cssText = a, i
            },
            en = function(t, e) {
                for (var i = e.length; i--;)
                    if (t.hasAttribute(e[i])) return t.getAttribute(e[i])
            },
            nn = function(t) {
                var e;
                try {
                    e = t.getBBox()
                } catch (i) {
                    e = tn.call(t, !0)
                }
                return e && (e.width || e.height) || t.getBBox === tn || (e = tn.call(t, !0)), !e || e.width || e.x || e.y ? e : {
                    x: +en(t, ["x", "cx", "x1"]) || 0,
                    y: +en(t, ["y", "cy", "y1"]) || 0,
                    width: 0,
                    height: 0
                }
            },
            rn = function(t) {
                return !(!t.getCTM || t.parentNode && !t.ownerSVGElement || !nn(t))
            },
            sn = function(t, e) {
                if (e) {
                    var i = t.style;
                    e in Pi && e !== Gi && (e = Xi), i.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e), i.removeProperty(e.replace(Ii, "-$1").toLowerCase())) : i.removeAttribute(e)
                }
            },
            an = function(t, e, i, n, r, s) {
                var a = new gi(t._pt, e, i, 0, 1, s ? Fi : Vi);
                return t._pt = a, a.b = n, a.e = r, t._props.push(i), a
            },
            on = {
                deg: 1,
                rad: 1,
                turn: 1
            },
            hn = function t(e, i, n, r) {
                var s, a, o, h, l = parseFloat(n) || 0,
                    c = (n + "").trim().substr((l + "").length) || "px",
                    u = Ci.style,
                    d = Oi.test(i),
                    p = "svg" === e.tagName.toLowerCase(),
                    f = (p ? "client" : "offset") + (d ? "Width" : "Height"),
                    g = 100,
                    m = "px" === r,
                    v = "%" === r;
                return r === c || !l || on[r] || on[c] ? l : ("px" !== c && !m && (l = t(e, i, n, "px")), h = e.getCTM && rn(e), !v && "%" !== c || !Pi[i] && !~i.indexOf("adius") ? (u[d ? "width" : "height"] = g + (m ? c : r), a = ~i.indexOf("adius") || "em" === r && e.appendChild && !p ? e : e.parentNode, h && (a = (e.ownerSVGElement || {}).parentNode), a && a !== bi && a.appendChild || (a = bi.body), (o = a._gsap) && v && o.width && d && o.time === Ie.time ? Ct(l / o.width * g) : ((v || "%" === c) && (u.position = Qi(e, "position")), a === e && (u.position = "static"), a.appendChild(Ci), s = Ci[f], a.removeChild(Ci), u.position = "absolute", d && v && ((o = bt(a)).time = Ie.time, o.width = a[f]), Ct(m ? s * l / g : s && l ? g / s * l : 0))) : (s = h ? e.getBBox()[d ? "width" : "height"] : e[f], Ct(v ? l / s * g : l / 100 * s)))
            },
            ln = function(t, e, i, n) {
                var r;
                return Si || Ji(), e in Di && "transform" !== e && ~(e = Di[e]).indexOf(",") && (e = e.split(",")[0]), Pi[e] && "transform" !== e ? (r = xn(t, n), r = "transformOrigin" !== e ? r[e] : r.svg ? r.origin : bn(Qi(t, Gi)) + " " + r.zOrigin + "px") : (!(r = t.style[e]) || "auto" === r || n || ~(r + "").indexOf("calc(")) && (r = pn[e] && pn[e](t, e, i) || Qi(t, e) || wt(t, e) || ("opacity" === e ? 1 : 0)), i && !~(r + "").trim().indexOf(" ") ? hn(t, e, r, i) + i : r
            },
            cn = function(t, e, i, n) {
                if (!i || "none" === i) {
                    var r = Ki(e, t, 1),
                        s = r && Qi(t, r, 1);
                    s && s !== i ? (e = r, i = s) : "borderColor" === e && (i = Qi(t, "borderTopColor"))
                }
                var a, o, h, l, c, u, d, p, f, g, m, v, _ = new gi(this._pt, t.style, e, 0, 1, li),
                    y = 0,
                    x = 0;
                if (_.b = i, _.e = n, i += "", "auto" === (n += "") && (t.style[e] = n, n = Qi(t, e) || n, t.style[e] = i), Ee(a = [i, n]), n = a[1], h = (i = a[0]).match(tt) || [], (n.match(tt) || []).length) {
                    for (; o = tt.exec(n);) d = o[0], f = n.substring(y, o.index), c ? c = (c + 1) % 5 : "rgba(" !== f.substr(-5) && "hsla(" !== f.substr(-5) || (c = 1), d !== (u = h[x++] || "") && (l = parseFloat(u) || 0, m = u.substr((l + "").length), (v = "=" === d.charAt(1) ? +(d.charAt(0) + "1") : 0) && (d = d.substr(2)), p = parseFloat(d), g = d.substr((p + "").length), y = tt.lastIndex - g.length, g || (g = g || O.units[e] || m, y === n.length && (n += g, _.e += g)), m !== g && (l = hn(t, e, u, g) || 0), _._pt = {
                        _next: _._pt,
                        p: f || 1 === x ? f : ",",
                        s: l,
                        c: v ? v * p : p - l,
                        m: c && c < 4 || "zIndex" === e ? Math.round : 0
                    });
                    _.c = y < n.length ? n.substring(y, n.length) : ""
                } else _.r = "display" === e && "none" === n ? Fi : Vi;
                return it.test(n) && (_.e = 0), this._pt = _, _
            },
            un = {
                top: "0%",
                bottom: "100%",
                left: "0%",
                right: "100%",
                center: "50%"
            },
            dn = function(t, e) {
                if (e.tween && e.tween._time === e.tween._dur) {
                    var i, n, r, s = e.t,
                        a = s.style,
                        o = e.u,
                        h = s._gsap;
                    if ("all" === o || !0 === o) a.cssText = "", n = 1;
                    else
                        for (r = (o = o.split(",")).length; --r > -1;) i = o[r], Pi[i] && (n = 1, i = "transformOrigin" === i ? Gi : Xi), sn(s, i);
                    n && (sn(s, Xi), h && (h.svg && s.removeAttribute("transform"), xn(s, 1), h.uncache = 1))
                }
            },
            pn = {
                clearProps: function(t, e, i, n, r) {
                    if ("isFromStart" !== r.data) {
                        var s = t._pt = new gi(t._pt, e, i, 0, 0, dn);
                        return s.u = n, s.pr = -10, s.tween = r, t._props.push(i), 1
                    }
                }
            },
            fn = [1, 0, 0, 1, 0, 0],
            gn = {},
            mn = function(t) {
                return "matrix(1, 0, 0, 1, 0, 0)" === t || "none" === t || !t
            },
            vn = function(t) {
                var e = Qi(t, Xi);
                return mn(e) ? fn : e.substr(7).match(J).map(Ct)
            },
            _n = function(t, e) {
                var i, n, r, s, a = t._gsap || bt(t),
                    o = t.style,
                    h = vn(t);
                return a.svg && t.getAttribute("transform") ? "1,0,0,1,0,0" === (h = [(r = t.transform.baseVal.consolidate().matrix).a, r.b, r.c, r.d, r.e, r.f]).join(",") ? fn : h : (h !== fn || t.offsetParent || t === wi || a.svg || (r = o.display, o.display = "block", (i = t.parentNode) && t.offsetParent || (s = 1, n = t.nextSibling, wi.appendChild(t)), h = vn(t), r ? o.display = r : sn(t, "display"), s && (n ? i.insertBefore(t, n) : i ? i.appendChild(t) : wi.removeChild(t))), e && h.length > 6 ? [h[0], h[1], h[4], h[5], h[12], h[13]] : h)
            },
            yn = function(t, e, i, n, r, s) {
                var a, o, h, l = t._gsap,
                    c = r || _n(t, !0),
                    u = l.xOrigin || 0,
                    d = l.yOrigin || 0,
                    p = l.xOffset || 0,
                    f = l.yOffset || 0,
                    g = c[0],
                    m = c[1],
                    v = c[2],
                    _ = c[3],
                    y = c[4],
                    x = c[5],
                    b = e.split(" "),
                    w = parseFloat(b[0]) || 0,
                    S = parseFloat(b[1]) || 0;
                i ? c !== fn && (o = g * _ - m * v) && (h = w * (-m / o) + S * (g / o) - (g * x - m * y) / o, w = w * (_ / o) + S * (-v / o) + (v * x - _ * y) / o, S = h) : (w = (a = nn(t)).x + (~b[0].indexOf("%") ? w / 100 * a.width : w), S = a.y + (~(b[1] || b[0]).indexOf("%") ? S / 100 * a.height : S)), n || !1 !== n && l.smooth ? (y = w - u, x = S - d, l.xOffset = p + (y * g + x * v) - y, l.yOffset = f + (y * m + x * _) - x) : l.xOffset = l.yOffset = 0, l.xOrigin = w, l.yOrigin = S, l.smooth = !!n, l.origin = e, l.originIsAbsolute = !!i, t.style[Gi] = "0px 0px", s && (an(s, l, "xOrigin", u, w), an(s, l, "yOrigin", d, S), an(s, l, "xOffset", p, l.xOffset), an(s, l, "yOffset", f, l.yOffset)), t.setAttribute("data-svg-origin", w + " " + S)
            },
            xn = function(t, e) {
                var i = t._gsap || new We(t);
                if ("x" in i && !e && !i.uncache) return i;
                var n, r, s, a, o, h, l, c, u, d, p, f, g, m, v, _, y, x, b, w, S, C, k, A, P, M, T, E, I, L, D, B, R = t.style,
                    z = i.scaleX < 0,
                    N = "px",
                    V = "deg",
                    F = Qi(t, Gi) || "0";
                return n = r = s = h = l = c = u = d = p = 0, a = o = 1, i.svg = !(!t.getCTM || !rn(t)), m = _n(t, i.svg), i.svg && (A = (!i.uncache || "0px 0px" === F) && !e && t.getAttribute("data-svg-origin"), yn(t, A || F, !!A || i.originIsAbsolute, !1 !== i.smooth, m)), f = i.xOrigin || 0, g = i.yOrigin || 0, m !== fn && (x = m[0], b = m[1], w = m[2], S = m[3], n = C = m[4], r = k = m[5], 6 === m.length ? (a = Math.sqrt(x * x + b * b), o = Math.sqrt(S * S + w * w), h = x || b ? Ei(b, x) * Mi : 0, (u = w || S ? Ei(w, S) * Mi + h : 0) && (o *= Math.abs(Math.cos(u * Ti))), i.svg && (n -= f - (f * x + g * w), r -= g - (f * b + g * S))) : (B = m[6], L = m[7], T = m[8], E = m[9], I = m[10], D = m[11], n = m[12], r = m[13], s = m[14], l = (v = Ei(B, I)) * Mi, v && (A = C * (_ = Math.cos(-v)) + T * (y = Math.sin(-v)), P = k * _ + E * y, M = B * _ + I * y, T = C * -y + T * _, E = k * -y + E * _, I = B * -y + I * _, D = L * -y + D * _, C = A, k = P, B = M), c = (v = Ei(-w, I)) * Mi, v && (_ = Math.cos(-v), D = S * (y = Math.sin(-v)) + D * _, x = A = x * _ - T * y, b = P = b * _ - E * y, w = M = w * _ - I * y), h = (v = Ei(b, x)) * Mi, v && (A = x * (_ = Math.cos(v)) + b * (y = Math.sin(v)), P = C * _ + k * y, b = b * _ - x * y, k = k * _ - C * y, x = A, C = P), l && Math.abs(l) + Math.abs(h) > 359.9 && (l = h = 0, c = 180 - c), a = Ct(Math.sqrt(x * x + b * b + w * w)), o = Ct(Math.sqrt(k * k + B * B)), v = Ei(C, k), u = Math.abs(v) > 2e-4 ? v * Mi : 0, p = D ? 1 / (D < 0 ? -D : D) : 0), i.svg && (A = t.getAttribute("transform"), i.forceCSS = t.setAttribute("transform", "") || !mn(Qi(t, Xi)), A && t.setAttribute("transform", A))), Math.abs(u) > 90 && Math.abs(u) < 270 && (z ? (a *= -1, u += h <= 0 ? 180 : -180, h += h <= 0 ? 180 : -180) : (o *= -1, u += u <= 0 ? 180 : -180)), i.x = n - ((i.xPercent = n && (i.xPercent || (Math.round(t.offsetWidth / 2) === Math.round(-n) ? -50 : 0))) ? t.offsetWidth * i.xPercent / 100 : 0) + N, i.y = r - ((i.yPercent = r && (i.yPercent || (Math.round(t.offsetHeight / 2) === Math.round(-r) ? -50 : 0))) ? t.offsetHeight * i.yPercent / 100 : 0) + N, i.z = s + N, i.scaleX = Ct(a), i.scaleY = Ct(o), i.rotation = Ct(h) + V, i.rotationX = Ct(l) + V, i.rotationY = Ct(c) + V, i.skewX = u + V, i.skewY = d + V, i.transformPerspective = p + N, (i.zOrigin = parseFloat(F.split(" ")[2]) || 0) && (R[Gi] = bn(F)), i.xOffset = i.yOffset = 0, i.force3D = O.force3D, i.renderTransform = i.svg ? Mn : Ai ? Pn : Sn, i.uncache = 0, i
            },
            bn = function(t) {
                return (t = t.split(" "))[0] + " " + t[1]
            },
            wn = function(t, e, i) {
                var n = se(e);
                return Ct(parseFloat(e) + parseFloat(hn(t, "x", i + "px", n))) + n
            },
            Sn = function(t, e) {
                e.z = "0px", e.rotationY = e.rotationX = "0deg", e.force3D = 0, Pn(t, e)
            },
            Cn = "0deg",
            kn = "0px",
            An = ") ",
            Pn = function(t, e) {
                var i = e || this,
                    n = i.xPercent,
                    r = i.yPercent,
                    s = i.x,
                    a = i.y,
                    o = i.z,
                    h = i.rotation,
                    l = i.rotationY,
                    c = i.rotationX,
                    u = i.skewX,
                    d = i.skewY,
                    p = i.scaleX,
                    f = i.scaleY,
                    g = i.transformPerspective,
                    m = i.force3D,
                    v = i.target,
                    _ = i.zOrigin,
                    y = "",
                    x = "auto" === m && t && 1 !== t || !0 === m;
                if (_ && (c !== Cn || l !== Cn)) {
                    var b, w = parseFloat(l) * Ti,
                        S = Math.sin(w),
                        C = Math.cos(w);
                    w = parseFloat(c) * Ti, b = Math.cos(w), s = wn(v, s, S * b * -_), a = wn(v, a, -Math.sin(w) * -_), o = wn(v, o, C * b * -_ + _)
                }
                g !== kn && (y += "perspective(" + g + An), (n || r) && (y += "translate(" + n + "%, " + r + "%) "), (x || s !== kn || a !== kn || o !== kn) && (y += o !== kn || x ? "translate3d(" + s + ", " + a + ", " + o + ") " : "translate(" + s + ", " + a + An), h !== Cn && (y += "rotate(" + h + An), l !== Cn && (y += "rotateY(" + l + An), c !== Cn && (y += "rotateX(" + c + An), u === Cn && d === Cn || (y += "skew(" + u + ", " + d + An), 1 === p && 1 === f || (y += "scale(" + p + ", " + f + An), v.style[Xi] = y || "translate(0, 0)"
            },
            Mn = function(t, e) {
                var i, n, r, s, a, o = e || this,
                    h = o.xPercent,
                    l = o.yPercent,
                    c = o.x,
                    u = o.y,
                    d = o.rotation,
                    p = o.skewX,
                    f = o.skewY,
                    g = o.scaleX,
                    m = o.scaleY,
                    v = o.target,
                    _ = o.xOrigin,
                    y = o.yOrigin,
                    x = o.xOffset,
                    b = o.yOffset,
                    w = o.forceCSS,
                    S = parseFloat(c),
                    C = parseFloat(u);
                d = parseFloat(d), p = parseFloat(p), (f = parseFloat(f)) && (p += f = parseFloat(f), d += f), d || p ? (d *= Ti, p *= Ti, i = Math.cos(d) * g, n = Math.sin(d) * g, r = Math.sin(d - p) * -m, s = Math.cos(d - p) * m, p && (f *= Ti, a = Math.tan(p - f), r *= a = Math.sqrt(1 + a * a), s *= a, f && (a = Math.tan(f), i *= a = Math.sqrt(1 + a * a), n *= a)), i = Ct(i), n = Ct(n), r = Ct(r), s = Ct(s)) : (i = g, s = m, n = r = 0), (S && !~(c + "").indexOf("px") || C && !~(u + "").indexOf("px")) && (S = hn(v, "x", c, "px"), C = hn(v, "y", u, "px")), (_ || y || x || b) && (S = Ct(S + _ - (_ * i + y * r) + x), C = Ct(C + y - (_ * n + y * s) + b)), (h || l) && (a = v.getBBox(), S = Ct(S + h / 100 * a.width), C = Ct(C + l / 100 * a.height)), a = "matrix(" + i + "," + n + "," + r + "," + s + "," + S + "," + C + ")", v.setAttribute("transform", a), w && (v.style[Xi] = a)
            },
            Tn = function(t, e, i, n, r, s) {
                var a, o, h = 360,
                    l = q(r),
                    c = parseFloat(r) * (l && ~r.indexOf("rad") ? Mi : 1),
                    u = s ? c * s : c - n,
                    d = n + u + "deg";
                return l && ("short" === (a = r.split("_")[1]) && (u %= h) !== u % 180 && (u += u < 0 ? h : -360), "cw" === a && u < 0 ? u = (u + 36e9) % h - ~~(u / h) * h : "ccw" === a && u > 0 && (u = (u - 36e9) % h - ~~(u / h) * h)), t._pt = o = new gi(t._pt, e, i, n, u, Ri), o.e = d, o.u = "deg", t._props.push(i), o
            },
            En = function(t, e) {
                for (var i in e) t[i] = e[i];
                return t
            },
            In = function(t, e, i) {
                var n, r, s, a, o, h, l, c = En({}, i._gsap),
                    u = i.style;
                for (r in c.svg ? (s = i.getAttribute("transform"), i.setAttribute("transform", ""), u[Xi] = e, n = xn(i, 1), sn(i, Xi), i.setAttribute("transform", s)) : (s = getComputedStyle(i)[Xi], u[Xi] = e, n = xn(i, 1), u[Xi] = s), Pi)(s = c[r]) !== (a = n[r]) && "perspective,force3D,transformOrigin,svgOrigin".indexOf(r) < 0 && (o = se(s) !== (l = se(a)) ? hn(i, r, s, l) : parseFloat(s), h = parseFloat(a), t._pt = new gi(t._pt, n, r, o, h - o, Bi), t._pt.u = l || 0, t._props.push(r));
                En(n, c)
            };
        St("padding,margin,Width,Radius", (function(t, e) {
            var i = "Top",
                n = "Right",
                r = "Bottom",
                s = "Left",
                a = (e < 3 ? [i, n, r, s] : [i + s, i + n, r + n, r + s]).map((function(i) {
                    return e < 2 ? t + i : "border" + i + t
                }));
            pn[e > 1 ? "border" + t : t] = function(t, e, i, n, r) {
                var s, o;
                if (arguments.length < 4) return s = a.map((function(e) {
                    return ln(t, e, i)
                })), 5 === (o = s.join(" ")).split(s[0]).length ? s[0] : o;
                s = (n + "").split(" "), o = {}, a.forEach((function(t, e) {
                    return o[t] = s[e] = s[e] || s[(e - 1) / 2 | 0]
                })), t.init(e, o, r)
            }
        }));
        var On, Ln, Dn, Bn = {
            name: "css",
            register: Ji,
            targetTest: function(t) {
                return t.style && t.nodeType
            },
            init: function(t, e, i, n, r) {
                var s, a, o, h, l, c, u, d, p, f, g, m, v, _, y, x, b, w, S, C = this._props,
                    k = t.style,
                    A = i.vars.startAt;
                for (u in Si || Ji(), e)
                    if ("autoRound" !== u && (a = e[u], !gt[u] || !Qe(u, e, i, n, t, r)))
                        if (l = typeof a, c = pn[u], "function" === l && (l = typeof(a = a.call(i, n, t, r))), "string" === l && ~a.indexOf("random(") && (a = me(a)), c) c(this, t, u, a, i) && (y = 1);
                        else if ("--" === u.substr(0, 2)) s = (getComputedStyle(t).getPropertyValue(u) + "").trim(), a += "", Me.lastIndex = 0, Me.test(s) || (d = se(s), p = se(a)), p ? d !== p && (s = hn(t, u, s, p) + p) : d && (a += d), this.add(k, "setProperty", s, a, n, r, 0, 0, u), C.push(u);
                else if ("undefined" !== l) {
                    if (A && u in A ? (s = "function" == typeof A[u] ? A[u].call(i, n, t, r) : A[u], u in O.units && !se(s) && (s += O.units[u]), "=" === (s + "").charAt(1) && (s = ln(t, u))) : s = ln(t, u), h = parseFloat(s), (f = "string" === l && "=" === a.charAt(1) ? +(a.charAt(0) + "1") : 0) && (a = a.substr(2)), o = parseFloat(a), u in Di && ("autoAlpha" === u && (1 === h && "hidden" === ln(t, "visibility") && o && (h = 0), an(this, k, "visibility", h ? "inherit" : "hidden", o ? "inherit" : "hidden", !o)), "scale" !== u && "transform" !== u && ~(u = Di[u]).indexOf(",") && (u = u.split(",")[0])), g = u in Pi)
                        if (m || ((v = t._gsap).renderTransform && !e.parseTransform || xn(t, e.parseTransform), _ = !1 !== e.smoothOrigin && v.smooth, (m = this._pt = new gi(this._pt, k, Xi, 0, 1, v.renderTransform, v, 0, -1)).dep = 1), "scale" === u) this._pt = new gi(this._pt, v, "scaleY", v.scaleY, (f ? f * o : o - v.scaleY) || 0), C.push("scaleY", u), u += "X";
                        else {
                            if ("transformOrigin" === u) {
                                b = void 0, w = void 0, S = void 0, b = (x = a).split(" "), w = b[0], S = b[1] || "50%", "top" !== w && "bottom" !== w && "left" !== S && "right" !== S || (x = w, w = S, S = x), b[0] = un[w] || w, b[1] = un[S] || S, a = b.join(" "), v.svg ? yn(t, a, 0, _, 0, this) : ((p = parseFloat(a.split(" ")[2]) || 0) !== v.zOrigin && an(this, v, "zOrigin", v.zOrigin, p), an(this, k, u, bn(s), bn(a)));
                                continue
                            }
                            if ("svgOrigin" === u) {
                                yn(t, a, 1, _, 0, this);
                                continue
                            }
                            if (u in gn) {
                                Tn(this, v, u, h, a, f);
                                continue
                            }
                            if ("smoothOrigin" === u) {
                                an(this, v, "smooth", v.smooth, a);
                                continue
                            }
                            if ("force3D" === u) {
                                v[u] = a;
                                continue
                            }
                            if ("transform" === u) {
                                In(this, a, t);
                                continue
                            }
                        }
                    else u in k || (u = Ki(u) || u);
                    if (g || (o || 0 === o) && (h || 0 === h) && !Li.test(a) && u in k) o || (o = 0), (d = (s + "").substr((h + "").length)) !== (p = se(a) || (u in O.units ? O.units[u] : d)) && (h = hn(t, u, s, p)), this._pt = new gi(this._pt, g ? v : k, u, h, f ? f * o : o - h, g || "px" !== p && "zIndex" !== u || !1 === e.autoRound ? Bi : Ni), this._pt.u = p || 0, d !== p && (this._pt.b = s, this._pt.r = zi);
                    else if (u in k) cn.call(this, t, u, s, a);
                    else {
                        if (!(u in t)) {
                            ht(u, a);
                            continue
                        }
                        this.add(t, u, s || t[u], a, n, r)
                    }
                    C.push(u)
                }
                y && fi(this)
            },
            get: ln,
            aliases: Di,
            getSetter: function(t, e, i) {
                var n = Di[e];
                return n && n.indexOf(",") < 0 && (e = n), e in Pi && e !== Gi && (t._gsap.x || ln(t, "x")) ? i && ki === i ? "scale" === e ? Wi : Hi : (ki = i || {}) && ("scale" === e ? Ui : Yi) : t.style && !U(t.style[e]) ? ji : ~e.indexOf("-") ? qi : ai(t, e)
            },
            core: {
                _removeProperty: sn,
                _getMatrix: _n
            }
        };
        yi.utils.checkPrefix = Ki, Dn = St((On = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent") + "," + (Ln = "rotation,rotationX,rotationY,skewX,skewY") + ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", (function(t) {
            Pi[t] = 1
        })), St(Ln, (function(t) {
            O.units[t] = "deg", gn[t] = 1
        })), Di[Dn[13]] = On + "," + Ln, St("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY", (function(t) {
            var e = t.split(":");
            Di[e[1]] = Dn[e[0]]
        })), St("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", (function(t) {
            O.units[t] = "px"
        })), yi.registerPlugin(Bn);
        var Rn = yi.registerPlugin(Bn) || yi;
        Rn.core.Tween;
        const zn = (t, e, i) => (1 - i) * t + i * e,
            Nn = (t, e) => t.sort((() => .5 - Math.random())).slice(0, e),
            Vn = (t, e) => Math.floor(Math.random() * (e - t)) + t,
            Fn = (t, e, i, n, r) => (t - e) * (r - n) / (i - e) + n,
            jn = (t, e) => e.width * t / 100,
            qn = (t, e) => e.height * t / 100,
            Hn = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
        class Wn {
            constructor(t) {
                this.DOM = {
                    el: t,
                    circle: t.querySelector(".circle"),
                    square: t.querySelector(".square")
                }, this.DOM.circle.style.opacity = 0, this.DOM.square.style.opacity = 0, this.circleBounds = this.DOM.circle.getBoundingClientRect(), this.renderedStyles = {
                    tx: {
                        previous: 0,
                        current: 0,
                        amt: .2
                    },
                    ty: {
                        previous: 0,
                        current: 0,
                        amt: .2
                    },
                    scale: {
                        previous: 1,
                        current: 1,
                        amt: .2
                    },
                    opacity: {
                        previous: 1,
                        current: 1,
                        amt: .2
                    }
                }, this.onMouseMoveEv = () => {
                    this.renderedStyles.tx.previous = this.renderedStyles.tx.current = window.mousepos.x - this.circleBounds.width / 2, this.renderedStyles.ty.previous = this.renderedStyles.ty.previous = window.mousepos.y - this.circleBounds.height / 2, Rn.to([this.DOM.circle, this.DOM.square], {
                        duration: .9,
                        ease: "Power3.easeOut",
                        opacity: 1
                    }), requestAnimationFrame((() => this.render())), window.removeEventListener("mousemove", this.onMouseMoveEv)
                }, window.addEventListener("mousemove", this.onMouseMoveEv)
            }
            enter(t = !1) {
                t ? (this.renderedStyles.scale.current = 2, this.renderedStyles.opacity.current = 0, this.DOM.square.classList.add("text")) : (this.renderedStyles.scale.current = 2, this.renderedStyles.opacity.current = 1), this.DOM.el.classList.add("cursor--hover")
            }
            leave() {
                this.renderedStyles.scale.current = 1, this.renderedStyles.opacity.current = 1, this.DOM.square.classList.remove("text"), this.DOM.el.classList.remove("cursor--hover")
            }
            render() {
                this.DOM.square.style.transform = `translateX(${window.mousepos.x}px) translateY(${window.mousepos.y}px)`, this.renderedStyles.tx.current = window.mousepos.x - this.circleBounds.width / 2, this.renderedStyles.ty.current = window.mousepos.y - this.circleBounds.height / 2;
                for (const t in this.renderedStyles) this.renderedStyles[t].previous = zn(this.renderedStyles[t].previous, this.renderedStyles[t].current, this.renderedStyles[t].amt);
                this.DOM.circle.style.transform = `translateX(${this.renderedStyles.tx.previous}px) translateY(${this.renderedStyles.ty.previous}px) scale(${this.renderedStyles.scale.previous})`, this.DOM.circle.style.opacity = this.renderedStyles.opacity.previous, requestAnimationFrame((() => this.render()))
            }
        }
        var Un = i(187);
        class Yn extends Un.EventEmitter {
            constructor(t) {
                super(), this.DOM = {
                    el: t,
                    scrollEl: document.querySelector("[data-scroll-container]"),
                    text: t.querySelector(".button__text"),
                    textinner: t.querySelector(".button__text-inner"),
                    deco: t.querySelector(".button__bg"),
                    arrow: t.querySelector(".button__arrow"),
                    title: t.querySelector(".button__title")
                }, this.circleText(), this.spin = Rn.to(this.DOM.textinner, {
                    rotate: 360,
                    ease: "none",
                    repeat: -1,
                    paused: !0,
                    duration: 10
                }), this.renderedStyles = {
                    tx: {
                        previous: 0,
                        current: 0,
                        amt: .1
                    },
                    ty: {
                        previous: 0,
                        current: 0,
                        amt: .1
                    },
                    scale: {
                        previous: 1,
                        current: 1,
                        amt: .2
                    }
                }, this.state = {
                    hover: !1
                }, this.calculateSizePosition(), this.initEvents(), Hn ? this.spin.play() : requestAnimationFrame((() => this.render()))
            }
            calculateSizePosition() {
                this.rect = this.DOM.el.getBoundingClientRect(), this.scrollRect = this.DOM.scrollEl.getBoundingClientRect(), this.distanceToTrigger = 1.5 * this.rect.width
            }
            initEvents() {
                this.onResize = () => this.calculateSizePosition(), window.addEventListener("resize", this.onResize)
            }
            render() {
                var t, e, i, n, r, s;
                let a = 0,
                    o = 0;
                (t = window.mousepos.x + window.lscrollpos.x, e = window.mousepos.y + window.lscrollpos.y, i = this.getElOffsetLeft(), n = this.getElOffsetTop(), r = t - i, s = e - n, Math.hypot(r, s)) < this.distanceToTrigger && !window.serviceHovered ? (this.state.hover || this.enter(), a = .3 * (window.mousepos.x + window.lscrollpos.x - this.getElOffsetLeft()), o = .3 * (window.mousepos.y + window.lscrollpos.y - this.getElOffsetTop())) : this.state.hover && this.leave(), this.renderedStyles.tx.current = a, this.renderedStyles.ty.current = o;
                for (const t in this.renderedStyles) this.renderedStyles[t].previous = zn(this.renderedStyles[t].previous, this.renderedStyles[t].current, this.renderedStyles[t].amt);
                this.DOM.el.style.transform = `translate3d(${this.renderedStyles.tx.previous}px, ${this.renderedStyles.ty.previous}px, 0)`, this.DOM.text.style.transform = `translate3d(${.2*-this.renderedStyles.tx.previous}px, ${.2*-this.renderedStyles.ty.previous}px, 0)`, this.DOM.arrow.style.transform = `translate3d(${.4*-this.renderedStyles.tx.previous}px, ${.4*-this.renderedStyles.ty.previous}px, 0)`, this.DOM.title.style.transform = `translate3d(${.6*-this.renderedStyles.tx.previous}px, ${.6*-this.renderedStyles.ty.previous}px, 0)`, requestAnimationFrame((() => this.render()))
            }
            enter() {
                this.calculateSizePosition(), this.emit("enter"), this.state.hover = !0, this.DOM.el.classList.add("button--hover"), this.spin.play(), Rn.timeline().to(this.DOM.deco, .4, {
                    ease: "Expo.easeOut",
                    scale: .9
                }, 0).to(this.DOM.textinner, .4, {
                    ease: "Expo.easeOut",
                    scale: .8
                }, 0)
            }
            leave() {
                this.emit("leave"), this.state.hover = !1, this.DOM.el.classList.remove("button--hover"), this.spin.pause(), Rn.timeline().to(this.DOM.deco, .4, {
                    ease: "Expo.easeOut",
                    scale: 1
                }, 0).to(this.DOM.textinner, .4, {
                    ease: "Expo.easeOut",
                    scale: 1
                }, 0)
            }
            getElOffsetTop() {
                return this.rect.top + Math.abs(this.scrollRect.top) + this.rect.height / 2
            }
            getElOffsetLeft() {
                return this.rect.left + Math.abs(this.scrollRect.left) + this.rect.width / 2
            }
            circleText() {
                const t = this.DOM.el.getAttribute("data-text");
                let e = new DocumentFragment;
                for (var i = 0; i < t.length; i++) {
                    const n = t[i],
                        r = document.createElement("span"),
                        s = document.createTextNode(n),
                        a = 360 / t.length * i;
                    r.appendChild(s), r.style.transform = "rotateZ(" + a + "deg)", e.appendChild(r)
                }
                this.DOM.textinner.appendChild(e)
            }
        }
        class Xn extends Un.EventEmitter {
            constructor(t) {
                super();
                "light" === localStorage.getItem("theme") && document.body.classList.add("light-theme"), this.getTheme(), t && t.addEventListener("click", (() => {
                    document.body.classList.toggle("light-theme"), this.getTheme(), localStorage.setItem("theme", this.active), this.emit("change", this.active)
                }))
            }
            getTheme() {
                this.active = document.body.classList.contains("light-theme") ? "light" : "dark"
            }
        }
        var Gn = i(842),
            Zn = i.n(Gn);
        class Qn extends Un.EventEmitter {
            constructor(t) {
                super(), this.words = ["web marketing", "dynamic webSite", "stylish design", "Branding", "MEDIA ADVERTISING", "Big Data", "Technical support", "interesting ideas", "individual illustrations", "strong technical component", "Create of a Concept", "packaging", "MEDIA ADVERTISING", "application", "video", "brand book", "Create of a Concept", "Copywriting", "Banner Advertising", "Trendy Look", "exclusive", "professional team", "impressive", "professional team", "video", "UI / UX", "Testing", "brand book", "Illustrations", "photo", "Adwords"], this.numLines = 11, this.linesArray = [], this.homepage = "home.html", this.matterBodies = [], this.matterSurface = [], this.angle = 8, this.debug = !1, this.DOM = {
                    el: t,
                    titles: t.querySelectorAll(".title")
                }, this.calculatePosition(), this.initPhysics(), this.initBg(), this.initTitles(), this.addObjects()
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect()
            }
            initBg() {
                const t = document.getElementById("intro-bg");
                let e = new DocumentFragment;
                for (let t = 0; t < this.numLines; t++) {
                    const t = document.createElement("div");
                    t.className = "line";
                    const i = document.createElement("div");
                    i.className = "content";
                    Nn(this.words, 20).forEach((t => {
                        const e = document.createElement("span");
                        e.textContent = t, i.append(e)
                    })), t.append(i), t.append(i.cloneNode(!0)), e.append(t)
                }
                t.append(e), this.DOM.lines = document.querySelectorAll(".line"), this.DOM.lines.forEach(((t, e) => {
                    this.linesArray.push(new $n(t, Vn(40, 140), e % 2))
                }))
            }
            initTitles() {
                const t = Rn.timeline();
                this.DOM.titles.forEach(((t, e) => {
                    const i = t.getBoundingClientRect(),
                        n = e % 2 == 0 ? this.angle : -this.angle;
                    t.bounds = {
                        width: i.width,
                        height: i.height,
                        left: i.left + i.width / 2,
                        top: i.top + i.height / 2,
                        angle: n
                    }, Rn.set(t, {
                        rotate: n
                    })
                })), t.from(this.DOM.lines, {
                    opacity: 0,
                    duration: .5,
                    delay: .5,
                    stagger: {
                        each: .1,
                        from: "center"
                    },
                    force3D: !0
                }).from(this.DOM.titles, {
                    duration: 1.2,
                    scale: 2,
                    opacity: 0,
                    rotate: 0,
                    delay: 1,
                    stagger: .4,
                    ease: "elastic.out(1, 0.4)",
                    onComplete: () => {
                        Rn.set(this.DOM.titles, {
                            position: "absolute",
                            left: 0,
                            top: 0,
                            marginLeft: (t, e, i) => -e.bounds.width / 2 + "px",
                            marginTop: (t, e, i) => -e.bounds.height / 2 + "px"
                        }), this.renderLoop(), this.engine.gravity.y = 1
                    }
                }, "<").from(this.DOM.el.querySelector("#intro-logo"), {
                    duration: 1,
                    scale: .5,
                    opacity: 0,
                    ease: "elastic.out(1, 0.4)",
                    delay: 1
                }).call((() => {
                    this.emit("introFinished", this.homepage)
                }), null, "+=1")
            }
            initPhysics() {
                this.engine = Zn().Engine.create(), this.world = this.engine.world, this.engine.gravity.y = 0, this.render = Zn().Render.create({
                    element: this.DOM.el.querySelector(".canvas-wrapper"),
                    engine: this.engine,
                    options: {
                        width: this.bounds.width,
                        height: this.bounds.height,
                        wireframeBackground: "transparent"
                    }
                }), this.debug && Zn().Render.run(this.render), this.runner = Zn().Runner.create(), Zn().Runner.run(this.runner, this.engine)
            }
            addObjects() {
                this.DOM.titles.forEach(((t, e) => {
                    const i = Zn().Bodies.rectangle(t.bounds.left, t.bounds.top, t.bounds.width, t.bounds.height, {
                        angle: (n = t.bounds.angle, n * (Math.PI / 180)),
                        restitution: 0
                    });
                    var n;
                    this.matterBodies.push(i)
                }));
                const t = this.bounds.width / 6,
                    e = this.bounds.width / 40,
                    i = Math.round(3),
                    n = Zn().Bodies.rectangle(0, this.bounds.height / 2, 1, this.bounds.height, {
                        isStatic: !0
                    }),
                    r = Zn().Bodies.rectangle(this.bounds.width, this.bounds.height / 2, 1, this.bounds.height, {
                        isStatic: !0
                    }),
                    s = Zn().Bodies.rectangle(this.bounds.width / 2, this.bounds.height + 10 + e, this.bounds.width, 20, {
                        isStatic: !0
                    });
                Zn().Composite.add(this.world, [n, s, r]);
                for (let n = 0; n <= 6; n++) {
                    const r = Zn().Bodies.circle(n * t, this.bounds.height + e, e - Math.abs(n - i) * e * .15, {
                        isStatic: !0
                    });
                    this.matterSurface.push(r)
                }
                Zn().Composite.add(this.world, [...this.matterBodies, ...this.matterSurface])
            }
            renderLoop() {
                this.DOM.titles.forEach(((t, e) => {
                    t.style.transform = "translate( " + this.matterBodies[e].position.x + "px, " + this.matterBodies[e].position.y + "px )", t.style.transform += "rotate( " + this.matterBodies[e].angle + "rad )"
                })), window.requestAnimationFrame(this.renderLoop.bind(this))
            }
        }
        class $n {
            constructor(t, e, i) {
                const n = t.querySelectorAll(".content");
                Rn.set(n, {
                    x: function(t) {
                        return i ? 100 * t + "%" : -100 * t + "%"
                    }
                }), Rn.timeline().to(n, {
                    x: (i ? "-=" : "+=") + "100%",
                    modifiers: {
                        x: Rn.utils.unitize((t => parseFloat(t) % 100))
                    },
                    duration: e,
                    ease: "none",
                    repeat: -1
                })
            }
        }
        class Kn {
            constructor(t) {
                this.columnsArray = [], this.DOM = {
                    el: t
                }, this.init()
            }
            init() {
                this.DOM.el.querySelectorAll(".content").forEach((t => {
                    t.after(t.cloneNode(!0))
                }));
                this.DOM.el.querySelectorAll(".column").forEach(((t, e) => {
                    const i = t.getAttribute("data-time");
                    this.columnsArray.push(new Jn(t, i || Vn(40, 140), e % 2))
                }))
            }
        }
        class Jn {
            constructor(t, e, i) {
                const n = t.querySelectorAll(".content");
                Rn.set(n, {
                    y: function(t) {
                        return i ? 100 * t + "%" : -100 * t + "%"
                    }
                }), Rn.timeline().to(n, {
                    y: (i ? "-=" : "+=") + "100%",
                    modifiers: {
                        y: Rn.utils.unitize((t => parseFloat(t) % 100))
                    },
                    duration: e,
                    ease: "none",
                    repeat: -1
                })
            }
        }
        var tr = i(267),
            er = i.n(tr);
        const ir = .5 * (Math.sqrt(3) - 1),
            nr = (3 - Math.sqrt(3)) / 6,
            rr = 1 / 6,
            sr = (Math.sqrt(5) - 1) / 4,
            ar = (5 - Math.sqrt(5)) / 20,
            or = new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1]),
            hr = new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1, -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1, 1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);
        const lr = class {
            constructor(t = Math.random) {
                const e = "function" == typeof t ? t : function(t) {
                    let e = 0,
                        i = 0,
                        n = 0,
                        r = 1;
                    const s = function() {
                        let t = 4022871197;
                        return function(e) {
                            e = e.toString();
                            for (let i = 0; i < e.length; i++) {
                                t += e.charCodeAt(i);
                                let n = .02519603282416938 * t;
                                t = n >>> 0, n -= t, n *= t, t = n >>> 0, n -= t, t += 4294967296 * n
                            }
                            return 2.3283064365386963e-10 * (t >>> 0)
                        }
                    }();
                    e = s(" "), i = s(" "), n = s(" "), e -= s(t), e < 0 && (e += 1);
                    i -= s(t), i < 0 && (i += 1);
                    n -= s(t), n < 0 && (n += 1);
                    return function() {
                        const t = 2091639 * e + 2.3283064365386963e-10 * r;
                        return e = i, i = n, n = t - (r = 0 | t)
                    }
                }(t);
                this.p = function(t) {
                    const e = new Uint8Array(256);
                    for (let t = 0; t < 256; t++) e[t] = t;
                    for (let i = 0; i < 255; i++) {
                        const n = i + ~~(t() * (256 - i)),
                            r = e[i];
                        e[i] = e[n], e[n] = r
                    }
                    return e
                }(e), this.perm = new Uint8Array(512), this.permMod12 = new Uint8Array(512);
                for (let t = 0; t < 512; t++) this.perm[t] = this.p[255 & t], this.permMod12[t] = this.perm[t] % 12
            }
            noise2D(t, e) {
                const i = this.permMod12,
                    n = this.perm;
                let r = 0,
                    s = 0,
                    a = 0;
                const o = (t + e) * ir,
                    h = Math.floor(t + o),
                    l = Math.floor(e + o),
                    c = (h + l) * nr,
                    u = t - (h - c),
                    d = e - (l - c);
                let p, f;
                u > d ? (p = 1, f = 0) : (p = 0, f = 1);
                const g = u - p + nr,
                    m = d - f + nr,
                    v = u - 1 + 2 * nr,
                    _ = d - 1 + 2 * nr,
                    y = 255 & h,
                    x = 255 & l;
                let b = .5 - u * u - d * d;
                if (b >= 0) {
                    const t = 3 * i[y + n[x]];
                    b *= b, r = b * b * (or[t] * u + or[t + 1] * d)
                }
                let w = .5 - g * g - m * m;
                if (w >= 0) {
                    const t = 3 * i[y + p + n[x + f]];
                    w *= w, s = w * w * (or[t] * g + or[t + 1] * m)
                }
                let S = .5 - v * v - _ * _;
                if (S >= 0) {
                    const t = 3 * i[y + 1 + n[x + 1]];
                    S *= S, a = S * S * (or[t] * v + or[t + 1] * _)
                }
                return 70 * (r + s + a)
            }
            noise3D(t, e, i) {
                const n = this.permMod12,
                    r = this.perm;
                let s, a, o, h;
                const l = .3333333333333333 * (t + e + i),
                    c = Math.floor(t + l),
                    u = Math.floor(e + l),
                    d = Math.floor(i + l),
                    p = (c + u + d) * rr,
                    f = t - (c - p),
                    g = e - (u - p),
                    m = i - (d - p);
                let v, _, y, x, b, w;
                f >= g ? g >= m ? (v = 1, _ = 0, y = 0, x = 1, b = 1, w = 0) : f >= m ? (v = 1, _ = 0, y = 0, x = 1, b = 0, w = 1) : (v = 0, _ = 0, y = 1, x = 1, b = 0, w = 1) : g < m ? (v = 0, _ = 0, y = 1, x = 0, b = 1, w = 1) : f < m ? (v = 0, _ = 1, y = 0, x = 0, b = 1, w = 1) : (v = 0, _ = 1, y = 0, x = 1, b = 1, w = 0);
                const S = f - v + rr,
                    C = g - _ + rr,
                    k = m - y + rr,
                    A = f - x + 2 * rr,
                    P = g - b + 2 * rr,
                    M = m - w + 2 * rr,
                    T = f - 1 + .5,
                    E = g - 1 + .5,
                    I = m - 1 + .5,
                    O = 255 & c,
                    L = 255 & u,
                    D = 255 & d;
                let B = .6 - f * f - g * g - m * m;
                if (B < 0) s = 0;
                else {
                    const t = 3 * n[O + r[L + r[D]]];
                    B *= B, s = B * B * (or[t] * f + or[t + 1] * g + or[t + 2] * m)
                }
                let R = .6 - S * S - C * C - k * k;
                if (R < 0) a = 0;
                else {
                    const t = 3 * n[O + v + r[L + _ + r[D + y]]];
                    R *= R, a = R * R * (or[t] * S + or[t + 1] * C + or[t + 2] * k)
                }
                let z = .6 - A * A - P * P - M * M;
                if (z < 0) o = 0;
                else {
                    const t = 3 * n[O + x + r[L + b + r[D + w]]];
                    z *= z, o = z * z * (or[t] * A + or[t + 1] * P + or[t + 2] * M)
                }
                let N = .6 - T * T - E * E - I * I;
                if (N < 0) h = 0;
                else {
                    const t = 3 * n[O + 1 + r[L + 1 + r[D + 1]]];
                    N *= N, h = N * N * (or[t] * T + or[t + 1] * E + or[t + 2] * I)
                }
                return 32 * (s + a + o + h)
            }
            noise4D(t, e, i, n) {
                const r = this.perm;
                let s, a, o, h, l;
                const c = (t + e + i + n) * sr,
                    u = Math.floor(t + c),
                    d = Math.floor(e + c),
                    p = Math.floor(i + c),
                    f = Math.floor(n + c),
                    g = (u + d + p + f) * ar,
                    m = t - (u - g),
                    v = e - (d - g),
                    _ = i - (p - g),
                    y = n - (f - g);
                let x = 0,
                    b = 0,
                    w = 0,
                    S = 0;
                m > v ? x++ : b++, m > _ ? x++ : w++, m > y ? x++ : S++, v > _ ? b++ : w++, v > y ? b++ : S++, _ > y ? w++ : S++;
                const C = x >= 3 ? 1 : 0,
                    k = b >= 3 ? 1 : 0,
                    A = w >= 3 ? 1 : 0,
                    P = S >= 3 ? 1 : 0,
                    M = x >= 2 ? 1 : 0,
                    T = b >= 2 ? 1 : 0,
                    E = w >= 2 ? 1 : 0,
                    I = S >= 2 ? 1 : 0,
                    O = x >= 1 ? 1 : 0,
                    L = b >= 1 ? 1 : 0,
                    D = w >= 1 ? 1 : 0,
                    B = S >= 1 ? 1 : 0,
                    R = m - C + ar,
                    z = v - k + ar,
                    N = _ - A + ar,
                    V = y - P + ar,
                    F = m - M + 2 * ar,
                    j = v - T + 2 * ar,
                    q = _ - E + 2 * ar,
                    H = y - I + 2 * ar,
                    W = m - O + 3 * ar,
                    U = v - L + 3 * ar,
                    Y = _ - D + 3 * ar,
                    X = y - B + 3 * ar,
                    G = m - 1 + 4 * ar,
                    Z = v - 1 + 4 * ar,
                    Q = _ - 1 + 4 * ar,
                    $ = y - 1 + 4 * ar,
                    K = 255 & u,
                    J = 255 & d,
                    tt = 255 & p,
                    et = 255 & f;
                let it = .6 - m * m - v * v - _ * _ - y * y;
                if (it < 0) s = 0;
                else {
                    const t = r[K + r[J + r[tt + r[et]]]] % 32 * 4;
                    it *= it, s = it * it * (hr[t] * m + hr[t + 1] * v + hr[t + 2] * _ + hr[t + 3] * y)
                }
                let nt = .6 - R * R - z * z - N * N - V * V;
                if (nt < 0) a = 0;
                else {
                    const t = r[K + C + r[J + k + r[tt + A + r[et + P]]]] % 32 * 4;
                    nt *= nt, a = nt * nt * (hr[t] * R + hr[t + 1] * z + hr[t + 2] * N + hr[t + 3] * V)
                }
                let rt = .6 - F * F - j * j - q * q - H * H;
                if (rt < 0) o = 0;
                else {
                    const t = r[K + M + r[J + T + r[tt + E + r[et + I]]]] % 32 * 4;
                    rt *= rt, o = rt * rt * (hr[t] * F + hr[t + 1] * j + hr[t + 2] * q + hr[t + 3] * H)
                }
                let st = .6 - W * W - U * U - Y * Y - X * X;
                if (st < 0) h = 0;
                else {
                    const t = r[K + O + r[J + L + r[tt + D + r[et + B]]]] % 32 * 4;
                    st *= st, h = st * st * (hr[t] * W + hr[t + 1] * U + hr[t + 2] * Y + hr[t + 3] * X)
                }
                let at = .6 - G * G - Z * Z - Q * Q - $ * $;
                if (at < 0) l = 0;
                else {
                    const t = r[K + 1 + r[J + 1 + r[tt + 1 + r[et + 1]]]] % 32 * 4;
                    at *= at, l = at * at * (hr[t] * G + hr[t + 1] * Z + hr[t + 2] * Q + hr[t + 3] * $)
                }
                return 27 * (s + a + o + h + l)
            }
        };
        class cr {
            constructor(t) {
                this.segments = 16, this.noiseStep = .0025, this.noiseRangeX = 1.8, this.noiseRangeY = 1.8, this.resizeStart = !0, this.DOM = {
                    el: t,
                    canvasWrapper: t.querySelector(".canvas-wrapper")
                }, this.config = [this.DOM.el.getAttribute("data-angle-left-top"), this.DOM.el.getAttribute("data-angle-right-top"), this.DOM.el.getAttribute("data-angle-right-bottom"), this.DOM.el.getAttribute("data-angle-left-bottom")], this.simplex = new lr, this.color = getComputedStyle(document.body).getPropertyValue("--demo-bg"), this.calculatePosition(), this.initPaper(), this.addObjects(), this.initEvents(), this.renderLoop()
            }
            noise(t, e) {
                return this.simplex.noise2D(t, e)
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect(), this.rangeX = jn(this.noiseRangeX, this.bounds), this.rangeY = qn(this.noiseRangeY, this.bounds)
            }
            clearFn() {
                this.paper.project.clear()
            }
            sizeFn() {
                this.paper.view.viewSize = new this.paper.Size(this.bounds.width, this.bounds.height)
            }
            resizeFn() {
                this.windowWidth !== window.innerWidth && (this.resizeStart && (this.resizeStart = !1), this.calculatePosition(), this.sizeFn(), this.resizeTimeout && clearTimeout(this.resizeTimeout), this.resizeTimeout = setTimeout((() => {
                    this.resizeStart = !0, this.clearFn(), this.addObjects()
                }), 500))
            }
            initEvents() {
                this.windowWidth = window.innerWidth, window.addEventListener("resize", (() => this.resizeFn()))
            }
            initPaper() {
                this.paperCanvas = document.createElement("canvas"), this.paperCanvas.width = this.bounds.width, this.paperCanvas.height = this.bounds.height, this.DOM.canvasWrapper.append(this.paperCanvas), this.paper = new(er().PaperScope), this.paper.setup(this.paperCanvas)
            }
            addObjects() {
                this.paper.activate();
                const t = .01 * this.bounds.width,
                    e = this.bounds.width / 1.5,
                    i = (document.querySelector("header").getBoundingClientRect().height, this.bounds.height - 2 * t),
                    n = new this.paper.Point(t, t),
                    r = new this.paper.Size(e, i),
                    s = Math.min(e, i),
                    a = this.config.map((t => null === t ? t : new this.paper.Size(s / 2.5, s / 2.5)));
                this.paperPath = this.specialRectangle(n, r, a), this.paperPath.closed = !0, this.paperPath.fillColor = this.color, this.paperPath.segments.forEach((t => {
                    t.noiseOffsetX = 1e3 * Math.random(), t.noiseOffsetY = 1e3 * Math.random(), t.originX = t.point.x, t.originY = t.point.y
                }))
            }
            renderLoop() {
                this.resizeStart && this.paperPath.segments.forEach((t => {
                    const e = this.noise(t.noiseOffsetX, t.noiseOffsetX),
                        i = this.noise(t.noiseOffsetY, t.noiseOffsetY),
                        n = Fn(e, -1, 1, t.originX - this.rangeX, t.originX + this.rangeX),
                        r = Fn(i, -1, 1, t.originY - this.rangeY, t.originY + this.rangeY);
                    t.noiseOffsetX += this.noiseStep, t.noiseOffsetY += this.noiseStep, t.point.x = n, t.point.y = r
                })), window.requestAnimationFrame(this.renderLoop.bind(this))
            }
            specialRectangle(t, e, i) {
                var n = t,
                    r = n.add(new this.paper.Point(e.width, 0)),
                    s = r.add(new this.paper.Point(0, e.height)),
                    a = s.subtract(new this.paper.Point(e.width, 0)),
                    o = new this.paper.Path;
                if (o.closed = !0, null != i[0]) {
                    var h = n.add(new this.paper.Point(0, i[0].height)),
                        l = n.add(new this.paper.Point(i[0].width, 0)),
                        c = new this.paper.Segment(h, null, {
                            x: 0,
                            y: -1 * i[0].height / 2
                        }),
                        u = new this.paper.Segment(l, {
                            x: -1 * i[0].width / 2,
                            y: 0
                        }, null);
                    o.add(c, u)
                } else o.add(n);
                if (null != i[1]) {
                    h = r.subtract(new this.paper.Point(i[1].width, 0)), c = new this.paper.Segment(h, null, {
                        y: 0,
                        x: 1 * i[1].width / 2
                    }), l = r.add(new this.paper.Point(0, i[1].height)), u = new this.paper.Segment(l, {
                        y: -1 * i[1].height / 2,
                        x: 0
                    }, null);
                    o.add(c, u)
                } else o.add(r);
                if (null != i[2]) {
                    h = s.subtract(new this.paper.Point(0, i[2].height)), c = new this.paper.Segment(h, null, {
                        x: 0,
                        y: 1 * i[2].height / 2
                    }), l = s.subtract(new this.paper.Point(i[2].width, 0)), u = new this.paper.Segment(l, {
                        x: 1 * i[2].width / 2,
                        y: 0
                    }, null);
                    o.add(c, u)
                } else o.add(s);
                if (null != i[3]) {
                    h = a.add(new this.paper.Point(i[3].width, 0)), c = new this.paper.Segment(h, null, {
                        y: 0,
                        x: -1 * i[3].width / 2
                    }), l = a.subtract(new this.paper.Point(0, i[3].height)), u = new this.paper.Segment(l, {
                        y: 1 * i[3].height / 2,
                        x: 0
                    }, null);
                    o.add(c, u)
                } else o.add(a);
                return o
            }
        }
        class ur {
            constructor(t) {
                this.matterBodies = [], this.debug = !1, this.resizeStart = !0, this.DOM = {
                    el: t,
                    svgFigures: t.querySelectorAll("svg"),
                    canvasWrapper: t.querySelector(".canvas-wrapper")
                }, this.calculatePosition(), this.initPhysics(), this.addObjects(), this.renderLoop(), this.initEvents(), this.addIntersection()
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect()
            }
            clearFn() {
                Zn().Composite.clear(this.world, !1), this.matterBodies = []
            }
            sizeFn() {
                this.render.bounds.max.x = this.render.options.width = this.render.canvas.width = this.bounds.width, this.render.bounds.max.y = this.render.options.height = this.render.canvas.height = this.bounds.height
            }
            resizeFn() {
                this.windowWidth !== window.innerWidth && (this.resizeStart && (this.clearFn(), this.resizeStart = !1), this.calculatePosition(), this.sizeFn(), this.resizeTimeout && clearTimeout(this.resizeTimeout), this.resizeTimeout = setTimeout((() => {
                    this.addObjects(), this.resizeStart = !0
                }), 500))
            }
            initEvents() {
                this.windowWidth = window.innerWidth, window.addEventListener("resize", (() => this.resizeFn()))
            }
            addIntersection() {
                this.observer = new IntersectionObserver((t => {
                    t.forEach((t => this.isVisible = t.intersectionRatio > 0)), this.isVisible && !this.engine.gravity.y && (this.engine.gravity.y = 1, this.DOM.el.classList.add("isVisible"))
                }), {
                    threshold: .5
                }), this.observer.observe(this.DOM.el)
            }
            initPhysics() {
                this.engine = Zn().Engine.create(), this.world = this.engine.world, this.engine.gravity.y = 0, this.render = Zn().Render.create({
                    element: this.DOM.canvasWrapper,
                    engine: this.engine,
                    options: {
                        width: this.bounds.width,
                        height: this.bounds.height,
                        background: "transparent"
                    }
                }), this.debug && Zn().Render.run(this.render), this.runner = Zn().Runner.create(), Zn().Runner.run(this.runner, this.engine)
            }
            addObjects() {
                const t = 20,
                    e = Zn().Bodies.rectangle(-10, this.bounds.height / 2, t, window.innerHeight, {
                        isStatic: !0
                    }),
                    i = Zn().Bodies.rectangle(this.bounds.width + 10, this.bounds.height / 2, t, window.innerHeight, {
                        isStatic: !0
                    }),
                    n = Zn().Bodies.rectangle(this.bounds.width / 2, this.bounds.height + 10, this.bounds.width, t, {
                        isStatic: !0
                    });
                Zn().Composite.add(this.world, [e, n, i]), this.DOM.svgFigures.forEach(((t, e) => {
                    t.style.transform = "none";
                    const i = t.getBoundingClientRect(),
                        n = i.width / 2,
                        r = i.width / 2,
                        s = i.width,
                        a = i.height,
                        o = t.getAttribute("data-radius").split(",").map((t => i.width * parseFloat(t))),
                        h = Zn().Bodies.rectangle(n + 20, 2 * r, s, a, {
                            chamfer: {
                                radius: o
                            }
                        });
                    this.matterBodies.push(h), Zn().Composite.add(this.world, h)
                }))
            }
            renderLoop() {
                this.isVisible && this.resizeStart && this.DOM.svgFigures.forEach(((t, e) => {
                    t.style.transform = "translate( " + this.matterBodies[e].position.x + "px, " + this.matterBodies[e].position.y + "px )", t.style.transform += "rotate( " + this.matterBodies[e].angle + "rad )"
                })), window.requestAnimationFrame(this.renderLoop.bind(this))
            }
        }
        const dr = {
            dark: {
                circle: "#303030",
                line: "rgba(255, 255, 255, 0.06)",
                text: "#D6D6D6"
            },
            light: {
                circle: "#F0F0F0",
                line: "rgba(37, 37, 37, 0.08)",
                text: "#232323"
            }
        };
        class pr {
            constructor(t) {
                this.circles = [], this.noiseStep = .001, this.noiseRangeX = 2, this.noiseRangeY = 2, this.composites = [], this.debug = !1, this.resizeStart = !0, this.DOM = {
                    el: t,
                    canvasWrapper: t.querySelector(".canvas-wrapper")
                }, this.simplex = new lr, this.calculatePosition(), this.initPhysics(), this.initPaper(), this.addObjects(), this.updateColors(), this.renderLoop(), this.initEvents(), this.addIntersection()
            }
            noise(t, e) {
                return this.simplex.noise2D(t, e)
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect(), this.rangeX = jn(this.noiseRangeX, this.bounds), this.rangeY = qn(this.noiseRangeY, this.bounds)
            }
            clearFn() {
                Zn().Composite.clear(this.world, !1), this.paper.project.clear(), this.circles = [], this.composites = []
            }
            sizeFn() {
                this.render.bounds.max.x = this.render.options.width = this.render.canvas.width = this.bounds.width, this.render.bounds.max.y = this.render.options.height = this.render.canvas.height = this.bounds.height, this.paper.view.viewSize = new this.paper.Size(this.bounds.width, this.bounds.height)
            }
            resizeFn() {
                this.windowWidth !== window.innerWidth && (this.resizeStart && (this.clearFn(), this.resizeStart = !1), this.calculatePosition(), this.sizeFn(), this.resizeTimeout && clearTimeout(this.resizeTimeout), this.resizeTimeout = setTimeout((() => {
                    this.resizeStart = !0, this.addObjects(), this.updateColors()
                }), 500))
            }
            initEvents() {
                this.windowWidth = window.innerWidth, window.addEventListener("resize", (() => this.resizeFn())), zs.scroll && zs.scroll.on("scroll", (t => {
                    this.calculatePosition()
                })), Ns.on("change", (t => {
                    this.updateColors()
                }))
            }
            addIntersection() {
                this.observer = new IntersectionObserver((t => {
                    t.forEach((t => this.isVisible = t.intersectionRatio > 0))
                })), this.observer.observe(this.DOM.el)
            }
            initPhysics() {
                this.engine = Zn().Engine.create(), this.world = this.engine.world, this.engine.gravity.x = 0, this.engine.gravity.y = 0, this.render = Zn().Render.create({
                    element: this.DOM.canvasWrapper,
                    engine: this.engine,
                    options: {
                        width: this.bounds.width,
                        height: this.bounds.height
                    }
                }), this.debug && Zn().Render.run(this.render), this.runner = Zn().Runner.create(), Zn().Runner.run(this.runner, this.engine)
            }
            initPaper() {
                if (this.paper = new(er().PaperScope), this.debug) {
                    const t = document.createElement("canvas");
                    return t.width = this.bounds.width, t.height = this.bounds.height, t.classList.add("debug"), this.DOM.canvasWrapper.append(t), void this.paper.setup(t)
                }
                this.paper.setup(this.render.canvas)
            }
            addObjects() {
                this.paper.activate(), this.line = new mr(this.paper), this.DOM.el.querySelectorAll(".circle").forEach(((t, e) => {
                    const i = Zn().Composite.create();
                    i.noiseOffsetX = 1e3 * Math.random(), i.noiseOffsetY = 1e3 * Math.random(), i.previousX = 0, i.previousY = 0;
                    const n = new fr(t, this.bounds, this.paper),
                        r = t.querySelector(".line");
                    r && this.line.addSegment(r, n.paperPath.segments, n.r, this.paper), Zn().Composite.add(i, n.circles), Zn().Composite.add(i, n.links), Zn().Composite.add(i, n.anchors), this.circles.push(n), this.composites.push(i)
                })), Zn().Composite.add(this.world, this.composites), this.line.paperPath.bringToFront(), this.line.paperPath.smooth(), this.cursor = Zn().Bodies.circle(window.mousepos.x - this.bounds.left, window.mousepos.y - this.bounds.top, jn(2, this.bounds)), Zn().Composite.add(this.world, this.cursor)
            }
            renderLoop() {
                this.isVisible && this.resizeStart && (this.circles.forEach(((t, e) => {
                    if (t.frame) {
                        const e = t.frame.paperPath,
                            i = this.noise(e.noiseOffset, e.noiseOffset),
                            n = Fn(i, -1, 1, -25, 25);
                        e.rotate(e.previous - n, t.frame.segment.point), e.noiseOffset += this.noiseStep, e.previous = n
                    }
                    const i = this.composites[e],
                        n = this.noise(i.noiseOffsetX, i.noiseOffsetX),
                        r = this.noise(i.noiseOffsetY, i.noiseOffsetY),
                        s = Fn(n, -1, 1, -this.rangeX, this.rangeX),
                        a = Fn(r, -1, 1, -this.rangeY, this.rangeY),
                        o = Zn().Vector.create(s - i.previousX, a - i.previousY);
                    Zn().Composite.translate(i, o), i.noiseOffsetX += this.noiseStep, i.noiseOffsetY += this.noiseStep, i.previousX = s, i.previousY = a, t.paperPath.segments.forEach(((e, i) => {
                        t.paperPath.segments[i].point.x = t.circles[i].position.x, t.paperPath.segments[i].point.y = t.circles[i].position.y
                    })), t.frame && t.frame.paperGroup.translate(new this.paper.Point(o.x, o.y))
                })), this.line.paperPath.segments.forEach(((t, e) => {
                    t.point = this.line.points[e].paperPath.position = this.line.segments[e].point
                })), Zn().Body.setPosition(this.cursor, {
                    x: window.mousepos.x - this.bounds.left,
                    y: window.mousepos.y - this.bounds.top
                })), window.requestAnimationFrame(this.renderLoop.bind(this))
            }
            updateColors() {
                this.circles.forEach((t => {
                    t.paperPath.fillColor = dr[Ns.active].circle, t.text && (t.text.fillColor = dr[Ns.active].text), t.frame && (t.frame.paperPath.strokeColor = dr[Ns.active].line)
                })), this.line.paperPath.strokeColor = dr[Ns.active].line
            }
        }
        class fr {
            constructor(t, e, i) {
                if (this.circles = [], this.anchors = [], this.links = [], this.points = [], this.segmentsLength = 11, this.DOM = {
                        el: t,
                        text: t.querySelector(".text"),
                        frame: t.querySelector(".frame"),
                        svg: t.querySelector("svg")
                    }, this.bounds = e, this.x = jn(parseInt(this.DOM.el.getAttribute("data-x"), 10), e), this.y = qn(parseInt(this.DOM.el.getAttribute("data-y"), 10), e), this.r = jn(parseInt(this.DOM.el.getAttribute("data-r"), 10), e), this.l = 2 * Math.PI * this.r, this.circleRadius = this.l / (4 * this.segmentsLength), this.font = Math.max(jn(1.5, e), 10), this.paperPath = new i.Path.RegularPolygon(new i.Point(this.x, this.y), this.segmentsLength, this.r), this.paperPath.segments.forEach(((t, e) => {
                        this.circles.push(Zn().Bodies.circle(this.paperPath.segments[e].point.x, this.paperPath.segments[e].point.y, this.circleRadius, {
                            density: .005,
                            restitution: 0
                        })), this.anchors.push(Zn().Bodies.circle(this.paperPath.segments[e].point.x, this.paperPath.segments[e].point.y, this.circleRadius, {
                            isStatic: !0,
                            isSensor: !0
                        })), this.center = Zn().Bodies.circle(this.paperPath.position.x, this.paperPath.position.y, this.circleRadius, {
                            isStatic: !0,
                            isSensor: !0
                        })
                    })), this.paperPath.segments.forEach(((t, e) => {
                        let i = this.circles[e + 1] ? this.circles[e + 1] : this.circles[0];
                        this.links.push(Zn().Constraint.create({
                            bodyA: this.circles[e],
                            bodyB: this.anchors[e],
                            stiffness: .015
                        })), this.links.push(Zn().Constraint.create({
                            bodyA: this.circles[e],
                            bodyB: i,
                            stiffness: .015
                        }))
                    })), this.DOM.text) {
                    const t = this.DOM.text.innerText;
                    this.text = new i.PointText({
                        point: new i.Point(this.x + 1.2 * this.r, this.y + .25 * this.font),
                        content: t,
                        fontFamily: "medium",
                        justification: "right",
                        fontSize: this.font
                    })
                }
                if (this.DOM.frame) {
                    this.frame = new vr(this.DOM.frame, this.x, this.y, this.r, this.paperPath.segments, i);
                    const t = this.circles[this.frame.segmentIndex];
                    t.isSensor = !0, t.isStatic = !0
                }
                this.DOM.svg && (this.DOM.svg.style.width = 2 * this.r, this.DOM.svg.style.height = 2 * this.r, this.DOM.svg.style.left = this.x, this.DOM.svg.style.top = this.y), this.paperPath.smooth()
            }
        }
        class gr {
            constructor(t, e, i, n) {
                this.DOM = {
                    el: t
                }, this.color = this.DOM.el.getAttribute("data-color") || getComputedStyle(document.body).getPropertyValue("--demo-bg"), this.paperPath = new n.Path.Circle({
                    center: e.point,
                    radius: .05 * i,
                    fillColor: this.color
                }), this.paperPath.bringToFront()
            }
        }
        class mr {
            constructor(t) {
                this.segments = [], this.points = [], this.paperPath = new t.Path({
                    segments: []
                })
            }
            addSegment(t, e, i, n) {
                const r = e[parseInt(t.getAttribute("data-segment"), 10)];
                this.paperPath.add(r), this.segments.push(r), this.points.push(new gr(t, r, i, n))
            }
        }
        class vr {
            constructor(t, e, i, n, r, s) {
                this.DOM = {
                    el: t
                }, this.segmentIndex = parseInt(this.DOM.el.getAttribute("data-segment"), 10), this.segment = r[this.segmentIndex], this.paperPath = new s.Path.Circle({
                    center: new s.Point(e, i),
                    radius: n,
                    applyMatrix: !1
                }), this.paperPath.noiseOffset = 1e3 * Math.random(), this.paperPath.previous = 0, this.point = new gr(t, this.segment, n, s), this.paperGroup = new s.Group(this.paperPath, this.point.paperPath)
            }
        }

        function _r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
        }

        function yr(t, e) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)
            }
        }

        function xr(t, e, i) {
            return e && yr(t.prototype, e), i && yr(t, i), t
        }

        function br(t, e, i) {
            return e in t ? Object.defineProperty(t, e, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = i, t
        }

        function wr(t, e) {
            var i = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(t);
                e && (n = n.filter((function(e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                }))), i.push.apply(i, n)
            }
            return i
        }

        function Sr(t) {
            for (var e = 1; e < arguments.length; e++) {
                var i = null != arguments[e] ? arguments[e] : {};
                e % 2 ? wr(Object(i), !0).forEach((function(e) {
                    br(t, e, i[e])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : wr(Object(i)).forEach((function(e) {
                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                }))
            }
            return t
        }

        function Cr(t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    writable: !0,
                    configurable: !0
                }
            }), e && Ar(t, e)
        }

        function kr(t) {
            return (kr = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                return t.__proto__ || Object.getPrototypeOf(t)
            })(t)
        }

        function Ar(t, e) {
            return (Ar = Object.setPrototypeOf || function(t, e) {
                return t.__proto__ = e, t
            })(t, e)
        }

        function Pr(t) {
            if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }

        function Mr(t, e) {
            return !e || "object" != typeof e && "function" != typeof e ? Pr(t) : e
        }

        function Tr(t) {
            var e = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function() {
                var i, n = kr(t);
                if (e) {
                    var r = kr(this).constructor;
                    i = Reflect.construct(n, arguments, r)
                } else i = n.apply(this, arguments);
                return Mr(this, i)
            }
        }

        function Er(t, e, i) {
            return (Er = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t, e, i) {
                var n = function(t, e) {
                    for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = kr(t)););
                    return t
                }(t, e);
                if (n) {
                    var r = Object.getOwnPropertyDescriptor(n, e);
                    return r.get ? r.get.call(i) : r.value
                }
            })(t, e, i || t)
        }

        function Ir(t, e) {
            return function(t) {
                if (Array.isArray(t)) return t
            }(t) || function(t, e) {
                if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(t))) return;
                var i = [],
                    n = !0,
                    r = !1,
                    s = void 0;
                try {
                    for (var a, o = t[Symbol.iterator](); !(n = (a = o.next()).done) && (i.push(a.value), !e || i.length !== e); n = !0);
                } catch (t) {
                    r = !0, s = t
                } finally {
                    try {
                        n || null == o.return || o.return()
                    } finally {
                        if (r) throw s
                    }
                }
                return i
            }(t, e) || Lr(t, e) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Or(t) {
            return function(t) {
                if (Array.isArray(t)) return Dr(t)
            }(t) || function(t) {
                if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
            }(t) || Lr(t) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function Lr(t, e) {
            if (t) {
                if ("string" == typeof t) return Dr(t, e);
                var i = Object.prototype.toString.call(t).slice(8, -1);
                return "Object" === i && t.constructor && (i = t.constructor.name), "Map" === i || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? Dr(t, e) : void 0
            }
        }

        function Dr(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
            return n
        }
        var Br = {
                el: document,
                name: "scroll",
                offset: [0, 0],
                repeat: !1,
                smooth: !1,
                initPosition: {
                    x: 0,
                    y: 0
                },
                direction: "vertical",
                gestureDirection: "vertical",
                reloadOnContextChange: !1,
                lerp: .1,
                class: "is-inview",
                scrollbarContainer: !1,
                scrollbarClass: "c-scrollbar",
                scrollingClass: "has-scroll-scrolling",
                draggingClass: "has-scroll-dragging",
                smoothClass: "has-scroll-smooth",
                initClass: "has-scroll-init",
                getSpeed: !1,
                getDirection: !1,
                scrollFromAnywhere: !1,
                multiplier: 1,
                firefoxMultiplier: 50,
                touchMultiplier: 2,
                resetNativeScroll: !0,
                tablet: {
                    smooth: !1,
                    direction: "vertical",
                    gestureDirection: "vertical",
                    breakpoint: 1024
                },
                smartphone: {
                    smooth: !1,
                    direction: "vertical",
                    gestureDirection: "vertical"
                }
            },
            Rr = function() {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    _r(this, t), Object.assign(this, Br, e), this.smartphone = Br.smartphone, e.smartphone && Object.assign(this.smartphone, e.smartphone), this.tablet = Br.tablet, e.tablet && Object.assign(this.tablet, e.tablet), this.namespace = "locomotive", this.html = document.documentElement, this.windowHeight = window.innerHeight, this.windowWidth = window.innerWidth, this.windowMiddle = {
                        x: this.windowWidth / 2,
                        y: this.windowHeight / 2
                    }, this.els = {}, this.currentElements = {}, this.listeners = {}, this.hasScrollTicking = !1, this.hasCallEventSet = !1, this.checkScroll = this.checkScroll.bind(this), this.checkResize = this.checkResize.bind(this), this.checkEvent = this.checkEvent.bind(this), this.instance = {
                        scroll: {
                            x: 0,
                            y: 0
                        },
                        limit: {
                            x: this.html.offsetWidth,
                            y: this.html.offsetHeight
                        },
                        currentElements: this.currentElements
                    }, this.isMobile ? this.isTablet ? this.context = "tablet" : this.context = "smartphone" : this.context = "desktop", this.isMobile && (this.direction = this[this.context].direction), "horizontal" === this.direction ? this.directionAxis = "x" : this.directionAxis = "y", this.getDirection && (this.instance.direction = null), this.getDirection && (this.instance.speed = 0), this.html.classList.add(this.initClass), window.addEventListener("resize", this.checkResize, !1)
                }
                return xr(t, [{
                    key: "init",
                    value: function() {
                        this.initEvents()
                    }
                }, {
                    key: "checkScroll",
                    value: function() {
                        this.dispatchScroll()
                    }
                }, {
                    key: "checkResize",
                    value: function() {
                        var t = this;
                        this.resizeTick || (this.resizeTick = !0, requestAnimationFrame((function() {
                            t.resize(), t.resizeTick = !1
                        })))
                    }
                }, {
                    key: "resize",
                    value: function() {}
                }, {
                    key: "checkContext",
                    value: function() {
                        if (this.reloadOnContextChange) {
                            this.isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || this.windowWidth < this.tablet.breakpoint, this.isTablet = this.isMobile && this.windowWidth >= this.tablet.breakpoint;
                            var t = this.context;
                            if (this.isMobile ? this.isTablet ? this.context = "tablet" : this.context = "smartphone" : this.context = "desktop", t != this.context)("desktop" == t ? this.smooth : this[t].smooth) != ("desktop" == this.context ? this.smooth : this[this.context].smooth) && window.location.reload()
                        }
                    }
                }, {
                    key: "initEvents",
                    value: function() {
                        var t = this;
                        this.scrollToEls = this.el.querySelectorAll("[data-".concat(this.name, "-to]")), this.setScrollTo = this.setScrollTo.bind(this), this.scrollToEls.forEach((function(e) {
                            e.addEventListener("click", t.setScrollTo, !1)
                        }))
                    }
                }, {
                    key: "setScrollTo",
                    value: function(t) {
                        t.preventDefault(), this.scrollTo(t.currentTarget.getAttribute("data-".concat(this.name, "-href")) || t.currentTarget.getAttribute("href"), {
                            offset: t.currentTarget.getAttribute("data-".concat(this.name, "-offset"))
                        })
                    }
                }, {
                    key: "addElements",
                    value: function() {}
                }, {
                    key: "detectElements",
                    value: function(t) {
                        var e = this,
                            i = this.instance.scroll.y,
                            n = i + this.windowHeight,
                            r = this.instance.scroll.x,
                            s = r + this.windowWidth;
                        Object.entries(this.els).forEach((function(a) {
                            var o = Ir(a, 2),
                                h = o[0],
                                l = o[1];
                            if (!l || l.inView && !t || ("horizontal" === e.direction ? s >= l.left && r < l.right && e.setInView(l, h) : n >= l.top && i < l.bottom && e.setInView(l, h)), l && l.inView)
                                if ("horizontal" === e.direction) {
                                    var c = l.right - l.left;
                                    l.progress = (e.instance.scroll.x - (l.left - e.windowWidth)) / (c + e.windowWidth), (s < l.left || r > l.right) && e.setOutOfView(l, h)
                                } else {
                                    var u = l.bottom - l.top;
                                    l.progress = (e.instance.scroll.y - (l.top - e.windowHeight)) / (u + e.windowHeight), (n < l.top || i > l.bottom) && e.setOutOfView(l, h)
                                }
                        })), this.hasScrollTicking = !1
                    }
                }, {
                    key: "setInView",
                    value: function(t, e) {
                        this.els[e].inView = !0, t.el.classList.add(t.class), this.currentElements[e] = t, t.call && this.hasCallEventSet && (this.dispatchCall(t, "enter"), t.repeat || (this.els[e].call = !1))
                    }
                }, {
                    key: "setOutOfView",
                    value: function(t, e) {
                        var i = this;
                        this.els[e].inView = !1, Object.keys(this.currentElements).forEach((function(t) {
                            t === e && delete i.currentElements[t]
                        })), t.call && this.hasCallEventSet && this.dispatchCall(t, "exit"), t.repeat && t.el.classList.remove(t.class)
                    }
                }, {
                    key: "dispatchCall",
                    value: function(t, e) {
                        this.callWay = e, this.callValue = t.call.split(",").map((function(t) {
                            return t.trim()
                        })), this.callObj = t, 1 == this.callValue.length && (this.callValue = this.callValue[0]);
                        var i = new Event(this.namespace + "call");
                        this.el.dispatchEvent(i)
                    }
                }, {
                    key: "dispatchScroll",
                    value: function() {
                        var t = new Event(this.namespace + "scroll");
                        this.el.dispatchEvent(t)
                    }
                }, {
                    key: "setEvents",
                    value: function(t, e) {
                        this.listeners[t] || (this.listeners[t] = []);
                        var i = this.listeners[t];
                        i.push(e), 1 === i.length && this.el.addEventListener(this.namespace + t, this.checkEvent, !1), "call" === t && (this.hasCallEventSet = !0, this.detectElements(!0))
                    }
                }, {
                    key: "unsetEvents",
                    value: function(t, e) {
                        if (this.listeners[t]) {
                            var i = this.listeners[t],
                                n = i.indexOf(e);
                            n < 0 || (i.splice(n, 1), 0 === i.index && this.el.removeEventListener(this.namespace + t, this.checkEvent, !1))
                        }
                    }
                }, {
                    key: "checkEvent",
                    value: function(t) {
                        var e = this,
                            i = t.type.replace(this.namespace, ""),
                            n = this.listeners[i];
                        n && 0 !== n.length && n.forEach((function(t) {
                            switch (i) {
                                case "scroll":
                                    return t(e.instance);
                                case "call":
                                    return t(e.callValue, e.callWay, e.callObj);
                                default:
                                    return t()
                            }
                        }))
                    }
                }, {
                    key: "startScroll",
                    value: function() {}
                }, {
                    key: "stopScroll",
                    value: function() {}
                }, {
                    key: "setScroll",
                    value: function(t, e) {
                        this.instance.scroll = {
                            x: 0,
                            y: 0
                        }
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        var t = this;
                        window.removeEventListener("resize", this.checkResize, !1), Object.keys(this.listeners).forEach((function(e) {
                            t.el.removeEventListener(t.namespace + e, t.checkEvent, !1)
                        })), this.listeners = {}, this.scrollToEls.forEach((function(e) {
                            e.removeEventListener("click", t.setScrollTo, !1)
                        })), this.html.classList.remove(this.initClass)
                    }
                }]), t
            }(),
            zr = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== i.g ? i.g : "undefined" != typeof self ? self : {};

        function Nr(t, e) {
            return t(e = {
                exports: {}
            }, e.exports), e.exports
        }
        var Vr = Nr((function(t, e) {
                t.exports = {
                    polyfill: function() {
                        var t = window,
                            e = document;
                        if (!("scrollBehavior" in e.documentElement.style) || !0 === t.__forceSmoothScrollPolyfill__) {
                            var i, n = t.HTMLElement || t.Element,
                                r = {
                                    scroll: t.scroll || t.scrollTo,
                                    scrollBy: t.scrollBy,
                                    elementScroll: n.prototype.scroll || o,
                                    scrollIntoView: n.prototype.scrollIntoView
                                },
                                s = t.performance && t.performance.now ? t.performance.now.bind(t.performance) : Date.now,
                                a = (i = t.navigator.userAgent, new RegExp(["MSIE ", "Trident/", "Edge/"].join("|")).test(i) ? 1 : 0);
                            t.scroll = t.scrollTo = function() {
                                void 0 !== arguments[0] && (!0 !== h(arguments[0]) ? f.call(t, e.body, void 0 !== arguments[0].left ? ~~arguments[0].left : t.scrollX || t.pageXOffset, void 0 !== arguments[0].top ? ~~arguments[0].top : t.scrollY || t.pageYOffset) : r.scroll.call(t, void 0 !== arguments[0].left ? arguments[0].left : "object" != typeof arguments[0] ? arguments[0] : t.scrollX || t.pageXOffset, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : t.scrollY || t.pageYOffset))
                            }, t.scrollBy = function() {
                                void 0 !== arguments[0] && (h(arguments[0]) ? r.scrollBy.call(t, void 0 !== arguments[0].left ? arguments[0].left : "object" != typeof arguments[0] ? arguments[0] : 0, void 0 !== arguments[0].top ? arguments[0].top : void 0 !== arguments[1] ? arguments[1] : 0) : f.call(t, e.body, ~~arguments[0].left + (t.scrollX || t.pageXOffset), ~~arguments[0].top + (t.scrollY || t.pageYOffset)))
                            }, n.prototype.scroll = n.prototype.scrollTo = function() {
                                if (void 0 !== arguments[0])
                                    if (!0 !== h(arguments[0])) {
                                        var t = arguments[0].left,
                                            e = arguments[0].top;
                                        f.call(this, this, void 0 === t ? this.scrollLeft : ~~t, void 0 === e ? this.scrollTop : ~~e)
                                    } else {
                                        if ("number" == typeof arguments[0] && void 0 === arguments[1]) throw new SyntaxError("Value could not be converted");
                                        r.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left : "object" != typeof arguments[0] ? ~~arguments[0] : this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top : void 0 !== arguments[1] ? ~~arguments[1] : this.scrollTop)
                                    }
                            }, n.prototype.scrollBy = function() {
                                void 0 !== arguments[0] && (!0 !== h(arguments[0]) ? this.scroll({
                                    left: ~~arguments[0].left + this.scrollLeft,
                                    top: ~~arguments[0].top + this.scrollTop,
                                    behavior: arguments[0].behavior
                                }) : r.elementScroll.call(this, void 0 !== arguments[0].left ? ~~arguments[0].left + this.scrollLeft : ~~arguments[0] + this.scrollLeft, void 0 !== arguments[0].top ? ~~arguments[0].top + this.scrollTop : ~~arguments[1] + this.scrollTop))
                            }, n.prototype.scrollIntoView = function() {
                                if (!0 !== h(arguments[0])) {
                                    var i = d(this),
                                        n = i.getBoundingClientRect(),
                                        s = this.getBoundingClientRect();
                                    i !== e.body ? (f.call(this, i, i.scrollLeft + s.left - n.left, i.scrollTop + s.top - n.top), "fixed" !== t.getComputedStyle(i).position && t.scrollBy({
                                        left: n.left,
                                        top: n.top,
                                        behavior: "smooth"
                                    })) : t.scrollBy({
                                        left: s.left,
                                        top: s.top,
                                        behavior: "smooth"
                                    })
                                } else r.scrollIntoView.call(this, void 0 === arguments[0] || arguments[0])
                            }
                        }

                        function o(t, e) {
                            this.scrollLeft = t, this.scrollTop = e
                        }

                        function h(t) {
                            if (null === t || "object" != typeof t || void 0 === t.behavior || "auto" === t.behavior || "instant" === t.behavior) return !0;
                            if ("object" == typeof t && "smooth" === t.behavior) return !1;
                            throw new TypeError("behavior member of ScrollOptions " + t.behavior + " is not a valid value for enumeration ScrollBehavior.")
                        }

                        function l(t, e) {
                            return "Y" === e ? t.clientHeight + a < t.scrollHeight : "X" === e ? t.clientWidth + a < t.scrollWidth : void 0
                        }

                        function c(e, i) {
                            var n = t.getComputedStyle(e, null)["overflow" + i];
                            return "auto" === n || "scroll" === n
                        }

                        function u(t) {
                            var e = l(t, "Y") && c(t, "Y"),
                                i = l(t, "X") && c(t, "X");
                            return e || i
                        }

                        function d(t) {
                            for (; t !== e.body && !1 === u(t);) t = t.parentNode || t.host;
                            return t
                        }

                        function p(e) {
                            var i, n, r, a, o = (s() - e.startTime) / 468;
                            a = o = o > 1 ? 1 : o, i = .5 * (1 - Math.cos(Math.PI * a)), n = e.startX + (e.x - e.startX) * i, r = e.startY + (e.y - e.startY) * i, e.method.call(e.scrollable, n, r), n === e.x && r === e.y || t.requestAnimationFrame(p.bind(t, e))
                        }

                        function f(i, n, a) {
                            var h, l, c, u, d = s();
                            i === e.body ? (h = t, l = t.scrollX || t.pageXOffset, c = t.scrollY || t.pageYOffset, u = r.scroll) : (h = i, l = i.scrollLeft, c = i.scrollTop, u = o), p({
                                scrollable: h,
                                method: u,
                                startTime: d,
                                startX: l,
                                startY: c,
                                x: n,
                                y: a
                            })
                        }
                    }
                }
            })),
            Fr = (Vr.polyfill, function(t) {
                Cr(i, t);
                var e = Tr(i);

                function i() {
                    var t, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return _r(this, i), (t = e.call(this, n)).resetNativeScroll && (history.scrollRestoration && (history.scrollRestoration = "manual"), window.scrollTo(0, 0)), window.addEventListener("scroll", t.checkScroll, !1), void 0 === window.smoothscrollPolyfill && (window.smoothscrollPolyfill = Vr, window.smoothscrollPolyfill.polyfill()), t
                }
                return xr(i, [{
                    key: "init",
                    value: function() {
                        this.instance.scroll.y = window.pageYOffset, this.addElements(), this.detectElements(), Er(kr(i.prototype), "init", this).call(this)
                    }
                }, {
                    key: "checkScroll",
                    value: function() {
                        var t = this;
                        Er(kr(i.prototype), "checkScroll", this).call(this), this.getDirection && this.addDirection(), this.getSpeed && (this.addSpeed(), this.speedTs = Date.now()), this.instance.scroll.y = window.pageYOffset, Object.entries(this.els).length && (this.hasScrollTicking || (requestAnimationFrame((function() {
                            t.detectElements()
                        })), this.hasScrollTicking = !0))
                    }
                }, {
                    key: "addDirection",
                    value: function() {
                        window.pageYOffset > this.instance.scroll.y ? "down" !== this.instance.direction && (this.instance.direction = "down") : window.pageYOffset < this.instance.scroll.y && "up" !== this.instance.direction && (this.instance.direction = "up")
                    }
                }, {
                    key: "addSpeed",
                    value: function() {
                        window.pageYOffset != this.instance.scroll.y ? this.instance.speed = (window.pageYOffset - this.instance.scroll.y) / Math.max(1, Date.now() - this.speedTs) : this.instance.speed = 0
                    }
                }, {
                    key: "resize",
                    value: function() {
                        Object.entries(this.els).length && (this.windowHeight = window.innerHeight, this.updateElements())
                    }
                }, {
                    key: "addElements",
                    value: function() {
                        var t = this;
                        this.els = {}, this.el.querySelectorAll("[data-" + this.name + "]").forEach((function(e, i) {
                            e.getBoundingClientRect();
                            var n, r, s, a = e.dataset[t.name + "Class"] || t.class,
                                o = "string" == typeof e.dataset[t.name + "Id"] ? e.dataset[t.name + "Id"] : i,
                                h = "string" == typeof e.dataset[t.name + "Offset"] ? e.dataset[t.name + "Offset"].split(",") : t.offset,
                                l = e.dataset[t.name + "Repeat"],
                                c = e.dataset[t.name + "Call"],
                                u = e.dataset[t.name + "Target"],
                                d = (s = void 0 !== u ? document.querySelector("".concat(u)) : e).getBoundingClientRect();
                            n = d.top + t.instance.scroll.y, r = d.left + t.instance.scroll.x;
                            var p = n + s.offsetHeight,
                                f = r + s.offsetWidth;
                            l = "false" != l && (null != l || t.repeat);
                            var g = t.getRelativeOffset(h),
                                m = {
                                    el: e,
                                    targetEl: s,
                                    id: o,
                                    class: a,
                                    top: n += g[0],
                                    bottom: p -= g[1],
                                    left: r,
                                    right: f,
                                    offset: h,
                                    progress: 0,
                                    repeat: l,
                                    inView: !1,
                                    call: c
                                };
                            t.els[o] = m, e.classList.contains(a) && t.setInView(t.els[o], o)
                        }))
                    }
                }, {
                    key: "updateElements",
                    value: function() {
                        var t = this;
                        Object.entries(this.els).forEach((function(e) {
                            var i = Ir(e, 2),
                                n = i[0],
                                r = i[1],
                                s = r.targetEl.getBoundingClientRect().top + t.instance.scroll.y,
                                a = s + r.targetEl.offsetHeight,
                                o = t.getRelativeOffset(r.offset);
                            t.els[n].top = s + o[0], t.els[n].bottom = a - o[1]
                        })), this.hasScrollTicking = !1
                    }
                }, {
                    key: "getRelativeOffset",
                    value: function(t) {
                        var e = [0, 0];
                        if (t)
                            for (var i = 0; i < t.length; i++) "string" == typeof t[i] ? t[i].includes("%") ? e[i] = parseInt(t[i].replace("%", "") * this.windowHeight / 100) : e[i] = parseInt(t[i]) : e[i] = t[i];
                        return e
                    }
                }, {
                    key: "scrollTo",
                    value: function(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = parseInt(e.offset) || 0,
                            n = !!e.callback && e.callback;
                        if ("string" == typeof t) {
                            if ("top" === t) t = this.html;
                            else if ("bottom" === t) t = this.html.offsetHeight - window.innerHeight;
                            else if (!(t = document.querySelector(t))) return
                        } else if ("number" == typeof t) t = parseInt(t);
                        else if (!t || !t.tagName) return void console.warn("`target` parameter is not valid");
                        i = "number" != typeof t ? t.getBoundingClientRect().top + i + this.instance.scroll.y : t + i;
                        var r = function() {
                            return parseInt(window.pageYOffset) === parseInt(i)
                        };
                        if (n) {
                            if (r()) return void n();
                            var s = function t() {
                                r() && (window.removeEventListener("scroll", t), n())
                            };
                            window.addEventListener("scroll", s)
                        }
                        window.scrollTo({
                            top: i,
                            behavior: 0 === e.duration ? "auto" : "smooth"
                        })
                    }
                }, {
                    key: "update",
                    value: function() {
                        this.addElements(), this.detectElements()
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        Er(kr(i.prototype), "destroy", this).call(this), window.removeEventListener("scroll", this.checkScroll, !1)
                    }
                }]), i
            }(Rr)),
            jr = Object.getOwnPropertySymbols,
            qr = Object.prototype.hasOwnProperty,
            Hr = Object.prototype.propertyIsEnumerable;

        function Wr(t) {
            if (null == t) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(t)
        }
        var Ur = function() {
            try {
                if (!Object.assign) return !1;
                var t = new String("abc");
                if (t[5] = "de", "5" === Object.getOwnPropertyNames(t)[0]) return !1;
                for (var e = {}, i = 0; i < 10; i++) e["_" + String.fromCharCode(i)] = i;
                if ("0123456789" !== Object.getOwnPropertyNames(e).map((function(t) {
                        return e[t]
                    })).join("")) return !1;
                var n = {};
                return "abcdefghijklmnopqrst".split("").forEach((function(t) {
                    n[t] = t
                })), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, n)).join("")
            } catch (t) {
                return !1
            }
        }() ? Object.assign : function(t, e) {
            for (var i, n, r = Wr(t), s = 1; s < arguments.length; s++) {
                for (var a in i = Object(arguments[s])) qr.call(i, a) && (r[a] = i[a]);
                if (jr) {
                    n = jr(i);
                    for (var o = 0; o < n.length; o++) Hr.call(i, n[o]) && (r[n[o]] = i[n[o]])
                }
            }
            return r
        };

        function Yr() {}
        Yr.prototype = {
            on: function(t, e, i) {
                var n = this.e || (this.e = {});
                return (n[t] || (n[t] = [])).push({
                    fn: e,
                    ctx: i
                }), this
            },
            once: function(t, e, i) {
                var n = this;

                function r() {
                    n.off(t, r), e.apply(i, arguments)
                }
                return r._ = e, this.on(t, r, i)
            },
            emit: function(t) {
                for (var e = [].slice.call(arguments, 1), i = ((this.e || (this.e = {}))[t] || []).slice(), n = 0, r = i.length; n < r; n++) i[n].fn.apply(i[n].ctx, e);
                return this
            },
            off: function(t, e) {
                var i = this.e || (this.e = {}),
                    n = i[t],
                    r = [];
                if (n && e)
                    for (var s = 0, a = n.length; s < a; s++) n[s].fn !== e && n[s].fn._ !== e && r.push(n[s]);
                return r.length ? i[t] = r : delete i[t], this
            }
        };
        var Xr = Yr,
            Gr = Nr((function(t, e) {
                (function() {
                    (null !== e ? e : this).Lethargy = function() {
                        function t(t, e, i, n) {
                            this.stability = null != t ? Math.abs(t) : 8, this.sensitivity = null != e ? 1 + Math.abs(e) : 100, this.tolerance = null != i ? 1 + Math.abs(i) : 1.1, this.delay = null != n ? n : 150, this.lastUpDeltas = function() {
                                var t, e, i;
                                for (i = [], t = 1, e = 2 * this.stability; 1 <= e ? t <= e : t >= e; 1 <= e ? t++ : t--) i.push(null);
                                return i
                            }.call(this), this.lastDownDeltas = function() {
                                var t, e, i;
                                for (i = [], t = 1, e = 2 * this.stability; 1 <= e ? t <= e : t >= e; 1 <= e ? t++ : t--) i.push(null);
                                return i
                            }.call(this), this.deltasTimestamp = function() {
                                var t, e, i;
                                for (i = [], t = 1, e = 2 * this.stability; 1 <= e ? t <= e : t >= e; 1 <= e ? t++ : t--) i.push(null);
                                return i
                            }.call(this)
                        }
                        return t.prototype.check = function(t) {
                            var e;
                            return null != (t = t.originalEvent || t).wheelDelta ? e = t.wheelDelta : null != t.deltaY ? e = -40 * t.deltaY : null == t.detail && 0 !== t.detail || (e = -40 * t.detail), this.deltasTimestamp.push(Date.now()), this.deltasTimestamp.shift(), e > 0 ? (this.lastUpDeltas.push(e), this.lastUpDeltas.shift(), this.isInertia(1)) : (this.lastDownDeltas.push(e), this.lastDownDeltas.shift(), this.isInertia(-1))
                        }, t.prototype.isInertia = function(t) {
                            var e, i, n, r, s, a, o;
                            return null === (e = -1 === t ? this.lastDownDeltas : this.lastUpDeltas)[0] ? t : !(this.deltasTimestamp[2 * this.stability - 2] + this.delay > Date.now() && e[0] === e[2 * this.stability - 1]) && (n = e.slice(0, this.stability), i = e.slice(this.stability, 2 * this.stability), o = n.reduce((function(t, e) {
                                return t + e
                            })), s = i.reduce((function(t, e) {
                                return t + e
                            })), a = o / n.length, r = s / i.length, Math.abs(a) < Math.abs(r * this.tolerance) && this.sensitivity < Math.abs(r) && t)
                        }, t.prototype.showLastUpDeltas = function() {
                            return this.lastUpDeltas
                        }, t.prototype.showLastDownDeltas = function() {
                            return this.lastDownDeltas
                        }, t
                    }()
                }).call(zr)
            })),
            Zr = {
                hasWheelEvent: "onwheel" in document,
                hasMouseWheelEvent: "onmousewheel" in document,
                hasTouch: "ontouchstart" in window || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch,
                hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,
                hasPointer: !!window.navigator.msPointerEnabled,
                hasKeyDown: "onkeydown" in document,
                isFirefox: navigator.userAgent.indexOf("Firefox") > -1
            },
            Qr = Object.prototype.toString,
            $r = Object.prototype.hasOwnProperty;

        function Kr(t, e) {
            return function() {
                return t.apply(e, arguments)
            }
        }
        var Jr = Gr.Lethargy,
            ts = "virtualscroll",
            es = os,
            is = 37,
            ns = 38,
            rs = 39,
            ss = 40,
            as = 32;

        function os(t) {
            ! function(t) {
                if (!t) return console.warn("bindAll requires at least one argument.");
                var e = Array.prototype.slice.call(arguments, 1);
                if (0 === e.length)
                    for (var i in t) $r.call(t, i) && "function" == typeof t[i] && "[object Function]" == Qr.call(t[i]) && e.push(i);
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    t[r] = Kr(t[r], t)
                }
            }(this, "_onWheel", "_onMouseWheel", "_onTouchStart", "_onTouchMove", "_onKeyDown"), this.el = window, t && t.el && (this.el = t.el, delete t.el), this.options = Ur({
                mouseMultiplier: 1,
                touchMultiplier: 2,
                firefoxMultiplier: 15,
                keyStep: 120,
                preventTouch: !1,
                unpreventTouchClass: "vs-touchmove-allowed",
                limitInertia: !1,
                useKeyboard: !0,
                useTouch: !0
            }, t), this.options.limitInertia && (this._lethargy = new Jr), this._emitter = new Xr, this._event = {
                y: 0,
                x: 0,
                deltaX: 0,
                deltaY: 0
            }, this.touchStartX = null, this.touchStartY = null, this.bodyTouchAction = null, void 0 !== this.options.passive && (this.listenerOptions = {
                passive: this.options.passive
            })
        }

        function hs(t, e, i) {
            return (1 - i) * t + i * e
        }

        function ls(t) {
            var e = {};
            if (window.getComputedStyle) {
                var i = getComputedStyle(t),
                    n = i.transform || i.webkitTransform || i.mozTransform,
                    r = n.match(/^matrix3d\((.+)\)$/);
                return r ? (e.x = r ? parseFloat(r[1].split(", ")[12]) : 0, e.y = r ? parseFloat(r[1].split(", ")[13]) : 0) : (r = n.match(/^matrix\((.+)\)$/), e.x = r ? parseFloat(r[1].split(", ")[4]) : 0, e.y = r ? parseFloat(r[1].split(", ")[5]) : 0), e
            }
        }

        function cs(t) {
            for (var e = []; t && t !== document; t = t.parentNode) e.push(t);
            return e
        }
        os.prototype._notify = function(t) {
            var e = this._event;
            e.x += e.deltaX, e.y += e.deltaY, this._emitter.emit(ts, {
                x: e.x,
                y: e.y,
                deltaX: e.deltaX,
                deltaY: e.deltaY,
                originalEvent: t
            })
        }, os.prototype._onWheel = function(t) {
            var e = this.options;
            if (!this._lethargy || !1 !== this._lethargy.check(t)) {
                var i = this._event;
                i.deltaX = t.wheelDeltaX || -1 * t.deltaX, i.deltaY = t.wheelDeltaY || -1 * t.deltaY, Zr.isFirefox && 1 == t.deltaMode && (i.deltaX *= e.firefoxMultiplier, i.deltaY *= e.firefoxMultiplier), i.deltaX *= e.mouseMultiplier, i.deltaY *= e.mouseMultiplier, this._notify(t)
            }
        }, os.prototype._onMouseWheel = function(t) {
            if (!this.options.limitInertia || !1 !== this._lethargy.check(t)) {
                var e = this._event;
                e.deltaX = t.wheelDeltaX ? t.wheelDeltaX : 0, e.deltaY = t.wheelDeltaY ? t.wheelDeltaY : t.wheelDelta, this._notify(t)
            }
        }, os.prototype._onTouchStart = function(t) {
            var e = t.targetTouches ? t.targetTouches[0] : t;
            this.touchStartX = e.pageX, this.touchStartY = e.pageY
        }, os.prototype._onTouchMove = function(t) {
            var e = this.options;
            e.preventTouch && !t.target.classList.contains(e.unpreventTouchClass) && t.preventDefault();
            var i = this._event,
                n = t.targetTouches ? t.targetTouches[0] : t;
            i.deltaX = (n.pageX - this.touchStartX) * e.touchMultiplier, i.deltaY = (n.pageY - this.touchStartY) * e.touchMultiplier, this.touchStartX = n.pageX, this.touchStartY = n.pageY, this._notify(t)
        }, os.prototype._onKeyDown = function(t) {
            var e = this._event;
            e.deltaX = e.deltaY = 0;
            var i = window.innerHeight - 40;
            switch (t.keyCode) {
                case is:
                case ns:
                    e.deltaY = this.options.keyStep;
                    break;
                case rs:
                case ss:
                    e.deltaY = -this.options.keyStep;
                    break;
                case t.shiftKey:
                    e.deltaY = i;
                    break;
                case as:
                    e.deltaY = -i;
                    break;
                default:
                    return
            }
            this._notify(t)
        }, os.prototype._bind = function() {
            Zr.hasWheelEvent && this.el.addEventListener("wheel", this._onWheel, this.listenerOptions), Zr.hasMouseWheelEvent && this.el.addEventListener("mousewheel", this._onMouseWheel, this.listenerOptions), Zr.hasTouch && this.options.useTouch && (this.el.addEventListener("touchstart", this._onTouchStart, this.listenerOptions), this.el.addEventListener("touchmove", this._onTouchMove, this.listenerOptions)), Zr.hasPointer && Zr.hasTouchWin && (this.bodyTouchAction = document.body.style.msTouchAction, document.body.style.msTouchAction = "none", this.el.addEventListener("MSPointerDown", this._onTouchStart, !0), this.el.addEventListener("MSPointerMove", this._onTouchMove, !0)), Zr.hasKeyDown && this.options.useKeyboard && document.addEventListener("keydown", this._onKeyDown)
        }, os.prototype._unbind = function() {
            Zr.hasWheelEvent && this.el.removeEventListener("wheel", this._onWheel), Zr.hasMouseWheelEvent && this.el.removeEventListener("mousewheel", this._onMouseWheel), Zr.hasTouch && (this.el.removeEventListener("touchstart", this._onTouchStart), this.el.removeEventListener("touchmove", this._onTouchMove)), Zr.hasPointer && Zr.hasTouchWin && (document.body.style.msTouchAction = this.bodyTouchAction, this.el.removeEventListener("MSPointerDown", this._onTouchStart, !0), this.el.removeEventListener("MSPointerMove", this._onTouchMove, !0)), Zr.hasKeyDown && this.options.useKeyboard && document.removeEventListener("keydown", this._onKeyDown)
        }, os.prototype.on = function(t, e) {
            this._emitter.on(ts, t, e);
            var i = this._emitter.e;
            i && i[ts] && 1 === i[ts].length && this._bind()
        }, os.prototype.off = function(t, e) {
            this._emitter.off(ts, t, e);
            var i = this._emitter.e;
            (!i[ts] || i[ts].length <= 0) && this._unbind()
        }, os.prototype.reset = function() {
            var t = this._event;
            t.x = 0, t.y = 0
        }, os.prototype.destroy = function() {
            this._emitter.off(), this._unbind()
        };
        var us = .1,
            ds = "function" == typeof Float32Array;

        function ps(t, e) {
            return 1 - 3 * e + 3 * t
        }

        function fs(t, e) {
            return 3 * e - 6 * t
        }

        function gs(t) {
            return 3 * t
        }

        function ms(t, e, i) {
            return ((ps(e, i) * t + fs(e, i)) * t + gs(e)) * t
        }

        function vs(t, e, i) {
            return 3 * ps(e, i) * t * t + 2 * fs(e, i) * t + gs(e)
        }

        function _s(t) {
            return t
        }
        var ys = function(t, e, i, n) {
                if (!(0 <= t && t <= 1 && 0 <= i && i <= 1)) throw new Error("bezier x values must be in [0, 1] range");
                if (t === e && i === n) return _s;
                for (var r = ds ? new Float32Array(11) : new Array(11), s = 0; s < 11; ++s) r[s] = ms(s * us, t, i);

                function a(e) {
                    for (var n = 0, s = 1; 10 !== s && r[s] <= e; ++s) n += us;
                    --s;
                    var a = n + (e - r[s]) / (r[s + 1] - r[s]) * us,
                        o = vs(a, t, i);
                    return o >= .001 ? function(t, e, i, n) {
                        for (var r = 0; r < 4; ++r) {
                            var s = vs(e, i, n);
                            if (0 === s) return e;
                            e -= (ms(e, i, n) - t) / s
                        }
                        return e
                    }(e, a, t, i) : 0 === o ? a : function(t, e, i, n, r) {
                        var s, a, o = 0;
                        do {
                            (s = ms(a = e + (i - e) / 2, n, r) - t) > 0 ? i = a : e = a
                        } while (Math.abs(s) > 1e-7 && ++o < 10);
                        return a
                    }(e, n, n + us, t, i)
                }
                return function(t) {
                    return 0 === t ? 0 : 1 === t ? 1 : ms(a(t), e, n)
                }
            },
            xs = 38,
            bs = 40,
            ws = 32,
            Ss = 9,
            Cs = 33,
            ks = 34,
            As = 36,
            Ps = 35,
            Ms = function(t) {
                Cr(i, t);
                var e = Tr(i);

                function i() {
                    var t, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return _r(this, i), history.scrollRestoration && (history.scrollRestoration = "manual"), window.scrollTo(0, 0), (t = e.call(this, n)).inertia && (t.lerp = .1 * t.inertia), t.isScrolling = !1, t.isDraggingScrollbar = !1, t.isTicking = !1, t.hasScrollTicking = !1, t.parallaxElements = {}, t.stop = !1, t.scrollbarContainer = n.scrollbarContainer, t.checkKey = t.checkKey.bind(Pr(t)), window.addEventListener("keydown", t.checkKey, !1), t
                }
                return xr(i, [{
                    key: "init",
                    value: function() {
                        var t = this;
                        this.html.classList.add(this.smoothClass), this.html.setAttribute("data-".concat(this.name, "-direction"), this.direction), this.instance = Sr({
                            delta: {
                                x: this.initPosition.x,
                                y: this.initPosition.y
                            },
                            scroll: {
                                x: this.initPosition.x,
                                y: this.initPosition.y
                            }
                        }, this.instance), this.vs = new es({
                            el: this.scrollFromAnywhere ? document : this.el,
                            mouseMultiplier: navigator.platform.indexOf("Win") > -1 ? 1 : .4,
                            firefoxMultiplier: this.firefoxMultiplier,
                            touchMultiplier: this.touchMultiplier,
                            useKeyboard: !1,
                            passive: !0
                        }), this.vs.on((function(e) {
                            t.stop || t.isDraggingScrollbar || requestAnimationFrame((function() {
                                t.updateDelta(e), t.isScrolling || t.startScrolling()
                            }))
                        })), this.setScrollLimit(), this.initScrollBar(), this.addSections(), this.addElements(), this.checkScroll(!0), this.transformElements(!0, !0), Er(kr(i.prototype), "init", this).call(this)
                    }
                }, {
                    key: "setScrollLimit",
                    value: function() {
                        if (this.instance.limit.y = this.el.offsetHeight - this.windowHeight, "horizontal" === this.direction) {
                            for (var t = 0, e = this.el.children, i = 0; i < e.length; i++) t += e[i].offsetWidth;
                            this.instance.limit.x = t - this.windowWidth
                        }
                    }
                }, {
                    key: "startScrolling",
                    value: function() {
                        this.startScrollTs = Date.now(), this.isScrolling = !0, this.checkScroll(), this.html.classList.add(this.scrollingClass)
                    }
                }, {
                    key: "stopScrolling",
                    value: function() {
                        cancelAnimationFrame(this.checkScrollRaf), this.startScrollTs = void 0, this.scrollToRaf && (cancelAnimationFrame(this.scrollToRaf), this.scrollToRaf = null), this.isScrolling = !1, this.instance.scroll.y = Math.round(this.instance.scroll.y), this.html.classList.remove(this.scrollingClass)
                    }
                }, {
                    key: "checkKey",
                    value: function(t) {
                        var e = this;
                        if (this.stop) t.keyCode == Ss && requestAnimationFrame((function() {
                            e.html.scrollTop = 0, document.body.scrollTop = 0, e.html.scrollLeft = 0, document.body.scrollLeft = 0
                        }));
                        else {
                            switch (t.keyCode) {
                                case Ss:
                                    requestAnimationFrame((function() {
                                        e.html.scrollTop = 0, document.body.scrollTop = 0, e.html.scrollLeft = 0, document.body.scrollLeft = 0, e.scrollTo(document.activeElement, {
                                            offset: -window.innerHeight / 2
                                        })
                                    }));
                                    break;
                                case xs:
                                    this.instance.delta[this.directionAxis] -= 240;
                                    break;
                                case bs:
                                    this.instance.delta[this.directionAxis] += 240;
                                    break;
                                case Cs:
                                    this.instance.delta[this.directionAxis] -= window.innerHeight;
                                    break;
                                case ks:
                                    this.instance.delta[this.directionAxis] += window.innerHeight;
                                    break;
                                case As:
                                    this.instance.delta[this.directionAxis] -= this.instance.limit[this.directionAxis];
                                    break;
                                case Ps:
                                    this.instance.delta[this.directionAxis] += this.instance.limit[this.directionAxis];
                                    break;
                                case ws:
                                    document.activeElement instanceof HTMLInputElement || document.activeElement instanceof HTMLTextAreaElement || (t.shiftKey ? this.instance.delta[this.directionAxis] -= window.innerHeight : this.instance.delta[this.directionAxis] += window.innerHeight);
                                    break;
                                default:
                                    return
                            }
                            this.instance.delta[this.directionAxis] < 0 && (this.instance.delta[this.directionAxis] = 0), this.instance.delta[this.directionAxis] > this.instance.limit[this.directionAxis] && (this.instance.delta[this.directionAxis] = this.instance.limit[this.directionAxis]), this.stopScrolling(), this.isScrolling = !0, this.checkScroll(), this.html.classList.add(this.scrollingClass)
                        }
                    }
                }, {
                    key: "checkScroll",
                    value: function() {
                        var t = this,
                            e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        if (e || this.isScrolling || this.isDraggingScrollbar) {
                            this.hasScrollTicking || (this.checkScrollRaf = requestAnimationFrame((function() {
                                return t.checkScroll()
                            })), this.hasScrollTicking = !0), this.updateScroll();
                            var n = Math.abs(this.instance.delta[this.directionAxis] - this.instance.scroll[this.directionAxis]),
                                r = Date.now() - this.startScrollTs;
                            if (!this.animatingScroll && r > 100 && (n < .5 && 0 != this.instance.delta[this.directionAxis] || n < .5 && 0 == this.instance.delta[this.directionAxis]) && this.stopScrolling(), Object.entries(this.sections).forEach((function(i) {
                                    var n = Ir(i, 2),
                                        r = (n[0], n[1]);
                                    r.persistent || t.instance.scroll[t.directionAxis] > r.offset[t.directionAxis] && t.instance.scroll[t.directionAxis] < r.limit[t.directionAxis] ? ("horizontal" === t.direction ? t.transform(r.el, -t.instance.scroll[t.directionAxis], 0) : t.transform(r.el, 0, -t.instance.scroll[t.directionAxis]), r.inView || (r.inView = !0, r.el.style.opacity = 1, r.el.style.pointerEvents = "all", r.el.setAttribute("data-".concat(t.name, "-section-inview"), ""))) : ((r.inView || e) && (r.inView = !1, r.el.style.opacity = 0, r.el.style.pointerEvents = "none", r.el.removeAttribute("data-".concat(t.name, "-section-inview"))), t.transform(r.el, 0, 0))
                                })), this.getDirection && this.addDirection(), this.getSpeed && (this.addSpeed(), this.speedTs = Date.now()), this.detectElements(), this.transformElements(), this.hasScrollbar) {
                                var s = this.instance.scroll[this.directionAxis] / this.instance.limit[this.directionAxis] * this.scrollBarLimit[this.directionAxis];
                                "horizontal" === this.direction ? this.transform(this.scrollbarThumb, s, 0) : this.transform(this.scrollbarThumb, 0, s)
                            }
                            Er(kr(i.prototype), "checkScroll", this).call(this), this.hasScrollTicking = !1
                        }
                    }
                }, {
                    key: "resize",
                    value: function() {
                        this.windowHeight = window.innerHeight, this.windowWidth = window.innerWidth, this.checkContext(), this.windowMiddle = {
                            x: this.windowWidth / 2,
                            y: this.windowHeight / 2
                        }, this.update()
                    }
                }, {
                    key: "updateDelta",
                    value: function(t) {
                        var e, i = this[this.context] && this[this.context].gestureDirection ? this[this.context].gestureDirection : this.gestureDirection;
                        e = "both" === i ? t.deltaX + t.deltaY : "vertical" === i ? t.deltaY : "horizontal" === i ? t.deltaX : t.deltaY, this.instance.delta[this.directionAxis] -= e * this.multiplier, this.instance.delta[this.directionAxis] < 0 && (this.instance.delta[this.directionAxis] = 0), this.instance.delta[this.directionAxis] > this.instance.limit[this.directionAxis] && (this.instance.delta[this.directionAxis] = this.instance.limit[this.directionAxis])
                    }
                }, {
                    key: "updateScroll",
                    value: function(t) {
                        this.isScrolling || this.isDraggingScrollbar ? this.instance.scroll[this.directionAxis] = hs(this.instance.scroll[this.directionAxis], this.instance.delta[this.directionAxis], this.lerp) : this.instance.scroll[this.directionAxis] > this.instance.limit[this.directionAxis] ? this.setScroll(this.instance.scroll[this.directionAxis], this.instance.limit[this.directionAxis]) : this.instance.scroll.y < 0 ? this.setScroll(this.instance.scroll[this.directionAxis], 0) : this.setScroll(this.instance.scroll[this.directionAxis], this.instance.delta[this.directionAxis])
                    }
                }, {
                    key: "addDirection",
                    value: function() {
                        this.instance.delta.y > this.instance.scroll.y ? "down" !== this.instance.direction && (this.instance.direction = "down") : this.instance.delta.y < this.instance.scroll.y && "up" !== this.instance.direction && (this.instance.direction = "up"), this.instance.delta.x > this.instance.scroll.x ? "right" !== this.instance.direction && (this.instance.direction = "right") : this.instance.delta.x < this.instance.scroll.x && "left" !== this.instance.direction && (this.instance.direction = "left")
                    }
                }, {
                    key: "addSpeed",
                    value: function() {
                        this.instance.delta[this.directionAxis] != this.instance.scroll[this.directionAxis] ? this.instance.speed = (this.instance.delta[this.directionAxis] - this.instance.scroll[this.directionAxis]) / Math.max(1, Date.now() - this.speedTs) : this.instance.speed = 0
                    }
                }, {
                    key: "initScrollBar",
                    value: function() {
                        if (this.scrollbar = document.createElement("span"), this.scrollbarThumb = document.createElement("span"), this.scrollbar.classList.add("".concat(this.scrollbarClass)), this.scrollbarThumb.classList.add("".concat(this.scrollbarClass, "_thumb")), this.scrollbar.append(this.scrollbarThumb), this.scrollbarContainer ? this.scrollbarContainer.append(this.scrollbar) : document.body.append(this.scrollbar), this.getScrollBar = this.getScrollBar.bind(this), this.releaseScrollBar = this.releaseScrollBar.bind(this), this.moveScrollBar = this.moveScrollBar.bind(this), this.scrollbarThumb.addEventListener("mousedown", this.getScrollBar), window.addEventListener("mouseup", this.releaseScrollBar), window.addEventListener("mousemove", this.moveScrollBar), this.hasScrollbar = !1, "horizontal" == this.direction) {
                            if (this.instance.limit.x + this.windowWidth <= this.windowWidth) return
                        } else if (this.instance.limit.y + this.windowHeight <= this.windowHeight) return;
                        this.hasScrollbar = !0, this.scrollbarBCR = this.scrollbar.getBoundingClientRect(), this.scrollbarHeight = this.scrollbarBCR.height, this.scrollbarWidth = this.scrollbarBCR.width, "horizontal" === this.direction ? this.scrollbarThumb.style.width = "".concat(this.scrollbarWidth * this.scrollbarWidth / (this.instance.limit.x + this.scrollbarWidth), "px") : this.scrollbarThumb.style.height = "".concat(this.scrollbarHeight * this.scrollbarHeight / (this.instance.limit.y + this.scrollbarHeight), "px"), this.scrollbarThumbBCR = this.scrollbarThumb.getBoundingClientRect(), this.scrollBarLimit = {
                            x: this.scrollbarWidth - this.scrollbarThumbBCR.width,
                            y: this.scrollbarHeight - this.scrollbarThumbBCR.height
                        }
                    }
                }, {
                    key: "reinitScrollBar",
                    value: function() {
                        if (this.hasScrollbar = !1, "horizontal" == this.direction) {
                            if (this.instance.limit.x + this.windowWidth <= this.windowWidth) return
                        } else if (this.instance.limit.y + this.windowHeight <= this.windowHeight) return;
                        this.hasScrollbar = !0, this.scrollbarBCR = this.scrollbar.getBoundingClientRect(), this.scrollbarHeight = this.scrollbarBCR.height, this.scrollbarWidth = this.scrollbarBCR.width, "horizontal" === this.direction ? this.scrollbarThumb.style.width = "".concat(this.scrollbarWidth * this.scrollbarWidth / (this.instance.limit.x + this.scrollbarWidth), "px") : this.scrollbarThumb.style.height = "".concat(this.scrollbarHeight * this.scrollbarHeight / (this.instance.limit.y + this.scrollbarHeight), "px"), this.scrollbarThumbBCR = this.scrollbarThumb.getBoundingClientRect(), this.scrollBarLimit = {
                            x: this.scrollbarWidth - this.scrollbarThumbBCR.width,
                            y: this.scrollbarHeight - this.scrollbarThumbBCR.height
                        }
                    }
                }, {
                    key: "destroyScrollBar",
                    value: function() {
                        this.scrollbarThumb.removeEventListener("mousedown", this.getScrollBar), window.removeEventListener("mouseup", this.releaseScrollBar), window.removeEventListener("mousemove", this.moveScrollBar), this.scrollbar.remove()
                    }
                }, {
                    key: "getScrollBar",
                    value: function(t) {
                        this.isDraggingScrollbar = !0, this.checkScroll(), this.html.classList.remove(this.scrollingClass), this.html.classList.add(this.draggingClass)
                    }
                }, {
                    key: "releaseScrollBar",
                    value: function(t) {
                        this.isDraggingScrollbar = !1, this.isScrolling && this.html.classList.add(this.scrollingClass), this.html.classList.remove(this.draggingClass)
                    }
                }, {
                    key: "moveScrollBar",
                    value: function(t) {
                        var e = this;
                        this.isDraggingScrollbar && requestAnimationFrame((function() {
                            var i = 100 * (t.clientX - e.scrollbarBCR.left) / e.scrollbarWidth * e.instance.limit.x / 100,
                                n = 100 * (t.clientY - e.scrollbarBCR.top) / e.scrollbarHeight * e.instance.limit.y / 100;
                            n > 0 && n < e.instance.limit.y && (e.instance.delta.y = n), i > 0 && i < e.instance.limit.x && (e.instance.delta.x = i)
                        }))
                    }
                }, {
                    key: "addElements",
                    value: function() {
                        var t = this;
                        this.els = {}, this.parallaxElements = {}, this.el.querySelectorAll("[data-".concat(this.name, "]")).forEach((function(e, i) {
                            var n, r, s, a = cs(e),
                                o = Object.entries(t.sections).map((function(t) {
                                    var e = Ir(t, 2);
                                    e[0];
                                    return e[1]
                                })).find((function(t) {
                                    return a.includes(t.el)
                                })),
                                h = e.dataset[t.name + "Class"] || t.class,
                                l = "string" == typeof e.dataset[t.name + "Id"] ? e.dataset[t.name + "Id"] : "el" + i,
                                c = e.dataset[t.name + "Repeat"],
                                u = e.dataset[t.name + "Call"],
                                d = e.dataset[t.name + "Position"],
                                p = e.dataset[t.name + "Delay"],
                                f = e.dataset[t.name + "Direction"],
                                g = "string" == typeof e.dataset[t.name + "Sticky"],
                                m = !!e.dataset[t.name + "Speed"] && parseFloat(e.dataset[t.name + "Speed"]) / 10,
                                v = "string" == typeof e.dataset[t.name + "Offset"] ? e.dataset[t.name + "Offset"].split(",") : t.offset,
                                _ = e.dataset[t.name + "Target"],
                                y = (s = void 0 !== _ ? document.querySelector("".concat(_)) : e).getBoundingClientRect();
                            null === o || o.inView ? (n = y.top + t.instance.scroll.y - ls(s).y, r = y.left + t.instance.scroll.x - ls(s).x) : (n = y.top - ls(o.el).y - ls(s).y, r = y.left - ls(o.el).x - ls(s).x);
                            var x = n + s.offsetHeight,
                                b = r + s.offsetWidth,
                                w = {
                                    x: (b - r) / 2 + r,
                                    y: (x - n) / 2 + n
                                };
                            if (g) {
                                var S = e.getBoundingClientRect(),
                                    C = S.top,
                                    k = S.left,
                                    A = {
                                        x: k - r,
                                        y: C - n
                                    };
                                n += window.innerHeight, r += window.innerWidth, x = C + s.offsetHeight - e.offsetHeight - A[t.directionAxis], w = {
                                    x: ((b = k + s.offsetWidth - e.offsetWidth - A[t.directionAxis]) - r) / 2 + r,
                                    y: (x - n) / 2 + n
                                }
                            }
                            c = "false" != c && (null != c || t.repeat);
                            var P = [0, 0];
                            if (v)
                                if ("horizontal" === t.direction) {
                                    for (var M = 0; M < v.length; M++) "string" == typeof v[M] ? v[M].includes("%") ? P[M] = parseInt(v[M].replace("%", "") * t.windowWidth / 100) : P[M] = parseInt(v[M]) : P[M] = v[M];
                                    r += P[0], b -= P[1]
                                } else {
                                    for (M = 0; M < v.length; M++) "string" == typeof v[M] ? v[M].includes("%") ? P[M] = parseInt(v[M].replace("%", "") * t.windowHeight / 100) : P[M] = parseInt(v[M]) : P[M] = v[M];
                                    n += P[0], x -= P[1]
                                }
                            var T = {
                                el: e,
                                id: l,
                                class: h,
                                section: o,
                                top: n,
                                middle: w,
                                bottom: x,
                                left: r,
                                right: b,
                                offset: v,
                                progress: 0,
                                repeat: c,
                                inView: !1,
                                call: u,
                                speed: m,
                                delay: p,
                                position: d,
                                target: s,
                                direction: f,
                                sticky: g
                            };
                            t.els[l] = T, e.classList.contains(h) && t.setInView(t.els[l], l), (!1 !== m || g) && (t.parallaxElements[l] = T)
                        }))
                    }
                }, {
                    key: "addSections",
                    value: function() {
                        var t = this;
                        this.sections = {};
                        var e = this.el.querySelectorAll("[data-".concat(this.name, "-section]"));
                        0 === e.length && (e = [this.el]), e.forEach((function(e, i) {
                            var n = "string" == typeof e.dataset[t.name + "Id"] ? e.dataset[t.name + "Id"] : "section" + i,
                                r = e.getBoundingClientRect(),
                                s = {
                                    x: r.left - 1.5 * window.innerWidth - ls(e).x,
                                    y: r.top - 1.5 * window.innerHeight - ls(e).y
                                },
                                a = {
                                    x: s.x + r.width + 2 * window.innerWidth,
                                    y: s.y + r.height + 2 * window.innerHeight
                                },
                                o = "string" == typeof e.dataset[t.name + "Persistent"];
                            e.setAttribute("data-scroll-section-id", n);
                            var h = {
                                el: e,
                                offset: s,
                                limit: a,
                                inView: !1,
                                persistent: o,
                                id: n
                            };
                            t.sections[n] = h
                        }))
                    }
                }, {
                    key: "transform",
                    value: function(t, e, i, n) {
                        var r;
                        if (n) {
                            var s = ls(t),
                                a = hs(s.x, e, n),
                                o = hs(s.y, i, n);
                            r = "matrix3d(1,0,0.00,0,0.00,1,0.00,0,0,0,1,0,".concat(a, ",").concat(o, ",0,1)")
                        } else r = "matrix3d(1,0,0.00,0,0.00,1,0.00,0,0,0,1,0,".concat(e, ",").concat(i, ",0,1)");
                        t.style.webkitTransform = r, t.style.msTransform = r, t.style.transform = r
                    }
                }, {
                    key: "transformElements",
                    value: function(t) {
                        var e = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            n = this.instance.scroll.x + this.windowWidth,
                            r = this.instance.scroll.y + this.windowHeight,
                            s = {
                                x: this.instance.scroll.x + this.windowMiddle.x,
                                y: this.instance.scroll.y + this.windowMiddle.y
                            };
                        Object.entries(this.parallaxElements).forEach((function(a) {
                            var o = Ir(a, 2),
                                h = (o[0], o[1]),
                                l = !1;
                            if (t && (l = 0), h.inView || i) switch (h.position) {
                                case "top":
                                    l = e.instance.scroll[e.directionAxis] * -h.speed;
                                    break;
                                case "elementTop":
                                    l = (r - h.top) * -h.speed;
                                    break;
                                case "bottom":
                                    l = (e.instance.limit[e.directionAxis] - r + e.windowHeight) * h.speed;
                                    break;
                                case "left":
                                    l = e.instance.scroll[e.directionAxis] * -h.speed;
                                    break;
                                case "elementLeft":
                                    l = (n - h.left) * -h.speed;
                                    break;
                                case "right":
                                    l = (e.instance.limit[e.directionAxis] - n + e.windowHeight) * h.speed;
                                    break;
                                default:
                                    l = (s[e.directionAxis] - h.middle[e.directionAxis]) * -h.speed
                            }
                            h.sticky && (l = h.inView ? "horizontal" === e.direction ? e.instance.scroll.x - h.left + window.innerWidth : e.instance.scroll.y - h.top + window.innerHeight : "horizontal" === e.direction ? e.instance.scroll.x < h.left - window.innerWidth && e.instance.scroll.x < h.left - window.innerWidth / 2 ? 0 : e.instance.scroll.x > h.right && e.instance.scroll.x > h.right + 100 && h.right - h.left + window.innerWidth : e.instance.scroll.y < h.top - window.innerHeight && e.instance.scroll.y < h.top - window.innerHeight / 2 ? 0 : e.instance.scroll.y > h.bottom && e.instance.scroll.y > h.bottom + 100 && h.bottom - h.top + window.innerHeight), !1 !== l && ("horizontal" === h.direction || "horizontal" === e.direction && "vertical" !== h.direction ? e.transform(h.el, l, 0, !t && h.delay) : e.transform(h.el, 0, l, !t && h.delay))
                        }))
                    }
                }, {
                    key: "scrollTo",
                    value: function(t) {
                        var e = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = parseInt(i.offset) || 0,
                            r = isNaN(parseInt(i.duration)) ? 1e3 : parseInt(i.duration),
                            s = i.easing || [.25, 0, .35, 1],
                            a = !!i.disableLerp,
                            o = !!i.callback && i.callback;
                        if (s = ys.apply(void 0, Or(s)), "string" == typeof t) {
                            if ("top" === t) t = 0;
                            else if ("bottom" === t) t = this.instance.limit.y;
                            else if ("left" === t) t = 0;
                            else if ("right" === t) t = this.instance.limit.x;
                            else if (!(t = document.querySelector(t))) return
                        } else if ("number" == typeof t) t = parseInt(t);
                        else if (!t || !t.tagName) return void console.warn("`target` parameter is not valid");
                        if ("number" != typeof t) {
                            var h = cs(t).includes(this.el);
                            if (!h) return;
                            var l = t.getBoundingClientRect(),
                                c = l.top,
                                u = l.left,
                                d = cs(t),
                                p = d.find((function(t) {
                                    return Object.entries(e.sections).map((function(t) {
                                        var e = Ir(t, 2);
                                        e[0];
                                        return e[1]
                                    })).find((function(e) {
                                        return e.el == t
                                    }))
                                })),
                                f = 0;
                            f = p ? ls(p)[this.directionAxis] : -this.instance.scroll[this.directionAxis], n = "horizontal" === this.direction ? u + n - f : c + n - f
                        } else n = t + n;
                        var g = parseFloat(this.instance.delta[this.directionAxis]),
                            m = Math.max(0, Math.min(n, this.instance.limit[this.directionAxis])),
                            v = m - g,
                            _ = function(t) {
                                a ? "horizontal" === e.direction ? e.setScroll(g + v * t, e.instance.delta.y) : e.setScroll(e.instance.delta.x, g + v * t) : e.instance.delta[e.directionAxis] = g + v * t
                            };
                        this.animatingScroll = !0, this.stopScrolling(), this.startScrolling();
                        var y = Date.now(),
                            x = function t() {
                                var i = (Date.now() - y) / r;
                                i > 1 ? (_(1), e.animatingScroll = !1, 0 == r && e.update(), o && o()) : (e.scrollToRaf = requestAnimationFrame(t), _(s(i)))
                            };
                        x()
                    }
                }, {
                    key: "update",
                    value: function() {
                        this.setScrollLimit(), this.addSections(), this.addElements(), this.detectElements(), this.updateScroll(), this.transformElements(!0), this.reinitScrollBar(), this.checkScroll(!0)
                    }
                }, {
                    key: "startScroll",
                    value: function() {
                        this.stop = !1
                    }
                }, {
                    key: "stopScroll",
                    value: function() {
                        this.stop = !0
                    }
                }, {
                    key: "setScroll",
                    value: function(t, e) {
                        this.instance = Sr(Sr({}, this.instance), {}, {
                            scroll: {
                                x: t,
                                y: e
                            },
                            delta: {
                                x: t,
                                y: e
                            },
                            speed: 0
                        })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        Er(kr(i.prototype), "destroy", this).call(this), this.stopScrolling(), this.html.classList.remove(this.smoothClass), this.vs.destroy(), this.destroyScrollBar(), window.removeEventListener("keydown", this.checkKey, !1)
                    }
                }]), i
            }(Rr);
        const Ts = function() {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                _r(this, t), this.options = e, Object.assign(this, Br, e), this.smartphone = Br.smartphone, e.smartphone && Object.assign(this.smartphone, e.smartphone), this.tablet = Br.tablet, e.tablet && Object.assign(this.tablet, e.tablet), this.smooth || "horizontal" != this.direction || console.warn("🚨 `smooth:false` & `horizontal` direction are not yet compatible"), this.tablet.smooth || "horizontal" != this.tablet.direction || console.warn("🚨 `smooth:false` & `horizontal` direction are not yet compatible (tablet)"), this.smartphone.smooth || "horizontal" != this.smartphone.direction || console.warn("🚨 `smooth:false` & `horizontal` direction are not yet compatible (smartphone)"), this.init()
            }
            return xr(t, [{
                key: "init",
                value: function() {
                    if (this.options.isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 || window.innerWidth < this.tablet.breakpoint, this.options.isTablet = this.options.isMobile && window.innerWidth >= this.tablet.breakpoint, this.smooth && !this.options.isMobile || this.tablet.smooth && this.options.isTablet || this.smartphone.smooth && this.options.isMobile && !this.options.isTablet ? this.scroll = new Ms(this.options) : this.scroll = new Fr(this.options), this.scroll.init(), window.location.hash) {
                        var t = window.location.hash.slice(1, window.location.hash.length),
                            e = document.getElementById(t);
                        e && this.scroll.scrollTo(e)
                    }
                }
            }, {
                key: "update",
                value: function() {
                    this.scroll.update()
                }
            }, {
                key: "start",
                value: function() {
                    this.scroll.startScroll()
                }
            }, {
                key: "stop",
                value: function() {
                    this.scroll.stopScroll()
                }
            }, {
                key: "scrollTo",
                value: function(t, e) {
                    this.scroll.scrollTo(t, e)
                }
            }, {
                key: "setScroll",
                value: function(t, e) {
                    this.scroll.setScroll(t, e)
                }
            }, {
                key: "on",
                value: function(t, e) {
                    this.scroll.setEvents(t, e)
                }
            }, {
                key: "off",
                value: function(t, e) {
                    this.scroll.unsetEvents(t, e)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.scroll.destroy()
                }
            }]), t
        }();
        class Es {
            constructor(t) {
                t && (window.scrollTo(0, 0), window.lscrollpos = {
                    x: 0,
                    y: 0
                }, Hn || (this.scroll = new Ts({
                    el: t,
                    smooth: !0,
                    smartphone: {
                        smooth: !0
                    },
                    tablet: {
                        smooth: !0
                    },
                    scrollFromAnywhere: !0
                }), this.scroll.on("scroll", (t => {
                    window.lscrollpos.y = t.scroll.y
                }))))
            }
            headerHighlight(t) {
                const e = document.querySelector("header");
                t > 320 ? e.classList.add("active") : e.classList.remove("active")
            }
        }
        class Is {
            constructor(t) {
                this.hover = !1, this.DOM = {
                    el: t,
                    layers: t.querySelectorAll(".layer")
                }, this.DOM.layers.forEach((t => {
                    t.range = parseFloat(t.getAttribute("data-range"), 10)
                })), this.renderedStyles = {
                    tx: {
                        previous: 0,
                        current: 0,
                        amt: .1
                    },
                    ty: {
                        previous: 0,
                        current: 0,
                        amt: .1
                    }
                }, this.calculatePosition(), this.initEvents(), this.renderLoop()
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect()
            }
            initEvents() {
                this.mouseenterFn = t => {
                    this.calculatePosition(), this.hover = !0
                }, this.mouseleaveFn = t => {
                    this.hover = !1
                }, this.DOM.el.addEventListener("mouseenter", this.mouseenterFn), this.DOM.el.addEventListener("mouseleave", this.mouseleaveFn), zs.scroll && zs.scroll.on("scroll", (t => {
                    this.calculatePosition()
                }))
            }
            renderLoop() {
                let t = 0,
                    e = 0;
                this.hover && (t = .3 * (window.mousepos.x - this.bounds.left - this.bounds.width / 2), e = .3 * (window.mousepos.y - this.bounds.top - this.bounds.height / 2)), this.renderedStyles.tx.current = t, this.renderedStyles.ty.current = e;
                for (const t in this.renderedStyles) this.renderedStyles[t].previous = zn(this.renderedStyles[t].previous, this.renderedStyles[t].current, this.renderedStyles[t].amt);
                this.DOM.layers.forEach((t => {
                    t.style.transform = `translate3d(${this.renderedStyles.tx.previous*t.range}px, ${this.renderedStyles.ty.previous*t.range}px, 0)`
                })), window.requestAnimationFrame(this.renderLoop.bind(this))
            }
        }
        class Os {
            constructor(t) {
                this.counters = [], this.DOM = {
                    el: t,
                    counters: t.querySelectorAll(".counter")
                }, this.DOM.counters.forEach((t => {
                    this.counters.push(new Ls(t))
                })), this.addIntersection()
            }
            addIntersection() {
                this.observer = new IntersectionObserver((t => {
                    t.forEach((t => {
                        t.intersectionRatio > 0 && (this.counters.forEach((t => {
                            t.updateCount()
                        })), this.observer.unobserve(this.DOM.el))
                    }))
                }), {
                    threshold: .5
                }), this.observer.observe(this.DOM.el)
            }
        }
        class Ls {
            constructor(t) {
                this.duration = 2e3, this.DOM = {
                    el: t
                }, this.target = +this.DOM.el.getAttribute("data-target"), this.DOM.el.innerText = "0"
            }
            updateCount() {
                let t = null;
                Date.now();
                const e = i => {
                    t || (t = i);
                    const n = Math.min((i - t) / this.duration, 1);
                    this.DOM.el.innerText = Math.floor(n * this.target), n < 1 ? this.frame = window.requestAnimationFrame(e) : window.cancelAnimationFrame(this.frame)
                };
                this.frame = window.requestAnimationFrame(e)
            }
        }
        class Ds {
            constructor(t) {
                this.options = {
                    movement: {
                        spin: {
                            translate: {
                                x: [0, 0],
                                y: [0, 0],
                                z: [0, 0]
                            },
                            rotate: {
                                x: [5, -5],
                                y: [-5, 5],
                                z: [0, 0]
                            }
                        },
                        text: {
                            translate: {
                                x: [-1.25, 1.25],
                                y: [-1.25, 1.25],
                                z: [0, 1.25]
                            },
                            rotate: {
                                x: [0, 0],
                                y: [0, 0],
                                z: [0, 0]
                            }
                        },
                        title: {
                            translate: {
                                x: [-1, 1],
                                y: [-1, 1],
                                z: [0, 1]
                            },
                            rotate: {
                                x: [0, 0],
                                y: [0, 0],
                                z: [0, 0]
                            }
                        },
                        preview: {
                            translate: {
                                x: [-.5, .5],
                                y: [-.5, .5],
                                z: [0, .5]
                            },
                            rotate: {
                                x: [0, 0],
                                y: [0, 0],
                                z: [0, 0]
                            }
                        },
                        description: {
                            translate: {
                                x: [-.25, .25],
                                y: [-.25, .25],
                                z: [0, .25]
                            },
                            rotate: {
                                x: [0, 0],
                                y: [0, 0],
                                z: [0, 0]
                            }
                        }
                    },
                    clipPath: {
                        initial: "inset(50% 49% 50% 51% round 50% 49% 50% 51%)"
                    }
                }, this.hover = !1, this.DOM = {
                    el: t,
                    animatable: {
                        spin: t.querySelector(".spin"),
                        text: t.querySelector(".text"),
                        title: t.querySelector(".title"),
                        description: t.querySelector(".description"),
                        preview: t.querySelector(".preview")
                    },
                    preview: t.querySelector(".preview"),
                    content: t.querySelector(".content")
                }, Rn.set(this.DOM.preview, {
                    clipPath: this.options.clipPath.initial
                }), this.options.clipPath.hover = this.DOM.preview.getAttribute("data-clip"), this.calculatePosition(), this.initEvents(), this.renderLoop()
            }
            calculatePosition() {
                this.bounds = this.DOM.el.getBoundingClientRect()
            }
            initEvents() {
                this.mouseenterFn = t => {
                    this.calculatePosition(), this.hover = !0, window.serviceHovered = !0, Rn.to(this.DOM.preview, {
                        duration: 1,
                        ease: "expo",
                        clipPath: this.options.clipPath.hover
                    })
                }, this.mouseleaveFn = t => {
                    this.hover = !1, window.serviceHovered = !1, Rn.to(this.DOM.preview, {
                        duration: 1,
                        ease: "expo",
                        clipPath: this.options.clipPath.initial
                    });
                    for (const t in this.DOM.animatable) Rn.to(this.DOM.animatable[t], {
                        duration: .5,
                        x: 0,
                        y: 0,
                        z: 0,
                        rotateX: 0,
                        rotateY: 0,
                        rotateZ: 0,
                        ease: "elastic.out(1, 0.6)"
                    })
                }, this.DOM.el.addEventListener("mouseenter", this.mouseenterFn), this.DOM.el.addEventListener("mouseleave", this.mouseleaveFn), zs.scroll ? zs.scroll.on("scroll", (t => {
                    this.calculatePosition()
                })) : window.addEventListener("scroll", (() => {
                    this.calculatePosition()
                })), this.DOM.el.addEventListener("click", this.clickFn)
            }
            renderLoop() {
                if (this.hover)
                    for (const t in this.DOM.animatable) {
                        const e = this.options.movement[t].translate,
                            i = this.options.movement[t].rotate,
                            n = {
                                translate: {
                                    x: (e.x[1] - e.x[0]) / this.bounds.width * (window.mousepos.x - this.bounds.left) + e.x[0],
                                    y: (e.y[1] - e.y[0]) / this.bounds.height * (window.mousepos.y - this.bounds.top) + e.y[0],
                                    z: (e.z[1] - e.z[0]) / this.bounds.height * (window.mousepos.y - this.bounds.top) + e.z[0]
                                },
                                rotate: {
                                    x: (i.x[1] - i.x[0]) / this.bounds.height * (window.mousepos.y - this.bounds.top) + i.x[0],
                                    y: (i.y[1] - i.y[0]) / this.bounds.width * (window.mousepos.x - this.bounds.left) + i.y[0],
                                    z: (i.z[1] - i.z[0]) / this.bounds.width * (window.mousepos.x - this.bounds.left) + i.z[0]
                                }
                            };
                        Rn.to(this.DOM.animatable[t], {
                            x: n.translate.x + "rem",
                            y: n.translate.y + "rem",
                            z: n.translate.z + "rem",
                            rotateX: n.rotate.x + "rem",
                            rotateY: n.rotate.y + "rem",
                            rotateZ: n.rotate.z + "rem"
                        })
                    }
                window.requestAnimationFrame(this.renderLoop.bind(this))
            }
        }
        class Bs {
            constructor() {
                this.DOM = {
                    hamburger: document.querySelector("#hamburger"),
                    hamburgerPath: document.querySelector("#hamburger path"),
                    hamburgerAlign: document.querySelector("#hamburger .align"),
                    overlay: document.querySelector("#overlay"),
                    path: document.querySelector("#overlay path"),
                    nav: document.querySelector("nav"),
                    menu: document.querySelectorAll("nav a"),
                    figure: document.querySelector("#overlay .figure"),
                    content: document.querySelector("#content"),
                    images: document.querySelectorAll("nav picture"),
                    linesOpen: document.querySelectorAll(".open span"),
                    linesClose: document.querySelectorAll(".icon .close")
                }, this.path = ["M 100 100 Q 50 -100 0 100 z", "M 100 100 Q 50 100 0 100 z"], Rn.set(this.DOM.hamburgerPath, {
                    attr: {
                        d: this.path[0]
                    }
                }), this.tl = Rn.timeline({
                    onComplete: () => {
                        this.isHamburgerAnimating = !1
                    },
                    paused: !0
                }).to(this.DOM.hamburgerAlign, {
                    y: "56px",
                    duration: .5
                }).to(this.DOM.hamburgerPath, {
                    attr: {
                        d: this.path[1]
                    },
                    duration: .5
                }, "<").call((() => {
                    this.DOM.hamburger.classList.toggle("effect")
                })).to(this.DOM.hamburgerAlign, {
                    y: "0%",
                    duration: .5
                }).to(this.DOM.hamburgerPath, {
                    attr: {
                        d: this.path[0]
                    },
                    duration: .5
                }, "<").to(this.DOM.hamburgerAlign, {
                    y: "0%",
                    duration: .5
                }), this.initEvents();
                const t = window.location.pathname.split("/")[1];
                this.activeMenu = this.DOM.nav.querySelector('a[href="' + t + '"]'), this.activeMenu && (this.activeMenu.classList.add("active"), this.activeIndex = [...this.DOM.menu].indexOf(this.activeMenu)), this.onHover(this.activeMenu, this.activeIndex)
            }
            initEvents() {
                this.DOM.hamburger.addEventListener("click", (t => {
                    this.isAnimating || (this.isAnimating = !0, this.hamburgerOpened ? this.closeMenu() : this.openMenu())
                })), [...this.DOM.menu].forEach(((t, e) => {
                    t.addEventListener("mouseenter", (() => {
                        this.onHover(t, e), this.hover && clearTimeout(this.hover)
                    })), t.addEventListener("mouseleave", (() => {
                        this.hover = setTimeout((() => {
                            this.onHover(this.activeMenu, this.activeIndex)
                        }), 500)
                    }))
                })), Hn ? (this.updateCenter(), window.addEventListener("resize", (() => {
                    this.windowWidth !== window.innerWidth && this.updateCenter()
                }))) : (this.DOM.hamburger.addEventListener("mouseenter", (() => {
                    this.tl.play()
                })), this.DOM.hamburger.addEventListener("mouseleave", (() => {
                    this.tl.reverse()
                })))
            }
            updateCenter() {
                this.windowWidth = window.innerWidth, this.DOM.hamburger.style.top = window.innerHeight / 2 + "px"
            }
            onHover(t, e = this.DOM.images.length - 1) {
                if (this.activeImage === this.DOM.images[e]) return;
                let i, n;
                t && (i = t.getAttribute("data-color"), n = t.getAttribute("data-radius")), this.DOM.figure.style.background = i || "", this.DOM.figure.setAttribute("data-radius", n || "");
                const r = this.activeImageIndex < e;
                this.activeImage && Rn.to(this.activeImage, {
                    opacity: 0,
                    x: r ? "-10%" : "10%"
                }), this.activeImage = this.DOM.images[e], this.activeImageIndex = e, Rn.fromTo(this.activeImage, {
                    opacity: 0,
                    x: r ? "10%" : "-10%"
                }, {
                    opacity: 1,
                    x: "0%"
                })
            }
            openMenu() {
                const t = ["M 100 0 H 100 Q 100 50 100 100 H 100 Q 100 50 100 0 z", "M 100 0 H 50 Q 0 50 50 100 H 100 Q 100 50 100 0 z", "M 100 0 H 0 Q 0 50 0 100 H 100 Q 100 50 100 0 z", "M 50 0 H 0 Q 0 50 0 100 H 50 Q 0 50 50 0 z", "M 0 0 H 0 Q 0 50 0 100 H 0 Q 0 50 0 0 z"];
                this.DOM.hamburger.classList.add("active"), this.hamburgerOpened = !0, Rn.timeline({
                    onComplete: () => {
                        this.isAnimating = !1
                    }
                }).set(this.DOM.path, {
                    attr: {
                        d: t[0]
                    }
                }).to(this.DOM.path, {
                    duration: .8,
                    ease: "power4.in",
                    attr: {
                        d: t[1]
                    }
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power2",
                    attr: {
                        d: t[2]
                    },
                    onComplete: () => {
                        this.DOM.overlay.classList.add("opened")
                    }
                }).to(this.DOM.content, {
                    duration: 1.1,
                    ease: "power4.in",
                    x: "-10%"
                }, "0").set(this.DOM.nav, {
                    opacity: 1
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power2.in",
                    attr: {
                        d: t[3]
                    }
                }).to(this.DOM.path, {
                    duration: .8,
                    ease: "power4",
                    attr: {
                        d: t[4]
                    }
                }).to(this.DOM.menu, {
                    duration: 1.1,
                    ease: "power4",
                    startAt: {
                        y: 150
                    },
                    y: 0,
                    opacity: 1,
                    stagger: .1
                }, ">-=1.1").to(this.DOM.linesOpen, {
                    duration: .5,
                    ease: "power2",
                    scaleX: 0,
                    stagger: .15
                }, 0).to(this.DOM.linesClose, {
                    duration: .5,
                    ease: "power2",
                    scale: 1
                }, ">")
            }
            closeMenu() {
                const t = ["M 0 0 H 0 Q 0 50 0 100 H 0 Q 0 50 0 0 z", "M 0 0 H 50 Q 100 50 50 100 H 0 Q 0 50 0 0 z", "M 0 0 H 100 Q 100 50 100 100 H 0 Q 0 50 0 0 z", "M 50 0 H 100 Q 100 50 100 100 H 50 Q 100 50 50 0 z", "M 100 0 H 100 Q 100 50 100 100 H 100 Q 100 50 100 0 z"];
                this.DOM.hamburger.classList.remove("active"), this.hamburgerOpened = !1, Rn.timeline({
                    onComplete: () => {
                        this.isAnimating = !1
                    }
                }).set(this.DOM.path, {
                    attr: {
                        d: t[0]
                    }
                }).to(this.DOM.path, {
                    duration: .8,
                    delay: .15,
                    ease: "power4.in",
                    attr: {
                        d: t[1]
                    }
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power2",
                    attr: {
                        d: t[2]
                    },
                    onComplete: () => {
                        this.DOM.overlay.classList.remove("opened")
                    }
                }).set(this.DOM.nav, {
                    opacity: 0
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power2.in",
                    attr: {
                        d: t[3]
                    }
                }).to(this.DOM.path, {
                    duration: .8,
                    ease: "power4",
                    attr: {
                        d: t[4]
                    }
                }).to(this.DOM.content, {
                    duration: 1.1,
                    ease: "power4.out",
                    x: "0%"
                }, ">-=1.1").to(this.DOM.menu, {
                    duration: .8,
                    ease: "power4.in",
                    y: 150,
                    opacity: 0,
                    stagger: -.1
                }, 0).to(this.DOM.linesClose, {
                    duration: .5,
                    ease: "power2",
                    scale: 0
                }, 0).to(this.DOM.linesOpen, {
                    duration: .5,
                    ease: "power2",
                    scaleX: 1,
                    stagger: .15
                }, ">")
            }
        }
        class Rs {
            constructor() {
                this.DOM = {
                    loader: document.querySelector("#loader-wrapper"),
                    overlay: document.querySelector("#loader"),
                    path: document.querySelector("#loader path"),
                    content: document.querySelector("#content")
                }, this.path = ["M 0 0 H 0 Q 0 50 0 100 H 0 Q 0 50 0 0 z", "M 0 0 H 50 Q 100 50 50 100 H 0 Q 0 50 0 0 z", this.DOM.path.getAttribute("d"), "M 50 0 H 100 Q 100 50 100 100 H 50 Q 100 50 50 0 z", "M 100 0 H 100 Q 100 50 100 100 H 100 Q 100 50 100 0 z"], this.initEvents()
            }
            initIntro() {
                Rn.set(this.DOM.path, {
                    attr: {
                        d: this.path[4]
                    }
                }), Rn.set(this.DOM.loader, {
                    display: "block"
                })
            }
            initEvents() {
                [...document.querySelectorAll("a[href]")].forEach((t => {
                    t.addEventListener("click", (e => {
                        e.preventDefault();
                        const i = t.getAttribute("href");
                        window.location.href.split("/").pop() !== i && this.openLoader(i)
                    }))
                }))
            }
            openLoader(t) {
                this.DOM.overlay.style.pointerEvents = "all", this.isAnimating = !0;
                const e = Rn.timeline({
                    onComplete: () => {
                        this.isAnimating = !1, window.location.href = t
                    }
                }).set(this.DOM.path, {
                    attr: {
                        d: this.path[0]
                    }
                }).to(this.DOM.path, {
                    duration: .8,
                    ease: "power4.in",
                    attr: {
                        d: this.path[1]
                    }
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power2",
                    attr: {
                        d: this.path[2]
                    }
                });
                this.DOM.content && e.to(this.DOM.content, {
                    duration: 1.1,
                    ease: "power4.in",
                    x: "10%"
                }, 0)
            }
            closeLoader() {
                this.DOM.overlay.style.pointerEvents = "none", this.isAnimating = !0, Rn.timeline({
                    onComplete: () => {
                        this.isAnimating = !1
                    }
                }).to(this.DOM.path, {
                    delay: .1,
                    duration: .8,
                    ease: "power2.in",
                    attr: {
                        d: this.path[3]
                    }
                }).to(this.DOM.path, {
                    duration: .3,
                    ease: "power4",
                    attr: {
                        d: this.path[4]
                    }
                }).fromTo(this.DOM.content, {
                    x: "-10%"
                }, {
                    duration: 1.1,
                    ease: "power.out",
                    x: "0%"
                }, ">-=1.1")
            }
        }
        let zs, Ns;
        window.onpageshow = t => {
            t.persisted && window.location.reload()
        };
        const Vs = document.getElementById("intro");
        Vs || (Ns = new Xn(document.getElementById("theme-toggle"))), Hn || document.documentElement.classList.add("pointer--enabled"), window.onload = () => {
            document.documentElement.classList.add("page--loaded");
            const t = new Rs;
            if (Vs) {
                new Qn(Vs).on("introFinished", (e => {
                    t.openLoader(e)
                })), t.initIntro()
            } else t.closeLoader();
            window.mousepos = {
                x: 0,
                y: 0
            }, window.addEventListener("mousemove", (t => {
                return window.mousepos = {
                    x: (e = t).clientX,
                    y: e.clientY
                };
                var e
            }));
            const e = document.querySelector(".cursor");
            if (e) {
                const t = new Wn(e);
                [...document.querySelectorAll("a, button")].forEach((e => {
                    e.addEventListener("mouseenter", (() => t.enter())), e.addEventListener("mouseleave", (() => t.leave()))
                })), [...document.querySelectorAll(".input")].forEach((e => {
                    e.addEventListener("mouseenter", (() => t.enter(!0))), e.addEventListener("mouseleave", (() => t.leave()))
                }))
            }
            const i = document.querySelector("[data-scroll-container]");
            zs = new Es(i), document.querySelectorAll(".scroll-to").forEach((t => {
                t.addEventListener("click", (e => {
                    e.preventDefault();
                    const i = document.querySelector(t.getAttribute("data-scroll-to"));
                    zs.scroll ? zs.scroll.scrollTo(i) : i.scrollIntoView({
                        behavior: "smooth"
                    })
                }))
            })), setTimeout((() => {
                ! function() {
                    const t = new IntersectionObserver((t => {
                        t.forEach((t => {
                            t.intersectionRatio > 0 && t.target.classList.add("active")
                        }))
                    }), {
                        threshold: 1
                    });
                    [...document.querySelectorAll(".text-effect")].forEach((e => {
                        t.observe(e)
                    }))
                }()
            }), 400), document.querySelectorAll(".button").forEach((t => {
                new Yn(t)
            }));
            const n = document.getElementById("banner-slider");
            n && new Kn(n);
            const r = document.getElementById("blob");
            r && new cr(r);
            const s = document.getElementById("footer-physics");
            s && new ur(s), document.querySelectorAll(".sketch-wrapper").forEach((t => {
                new pr(t)
            })), document.querySelectorAll(".thumbnail").forEach((t => {
                new Is(t)
            })), document.querySelectorAll(".counters").forEach((t => {
                new Os(t)
            })), document.querySelectorAll(".service").forEach((t => {
                new Ds(t)
            }));
            document.querySelector("header") && new Bs, document.querySelectorAll(".input").forEach((t => {
                t.addEventListener("focus", (() => {
                    t.classList.add("focus")
                })), t.addEventListener("blur", (() => {
                    t.classList.remove("focus")
                })), t.addEventListener("keyup", (() => {
                    t.value ? t.classList.add("not--empty") : t.classList.remove("not--empty")
                }))
            }));
            const a = document.getElementById("form");
            if (a) {
                let t = !1;
                const e = document.getElementById("popup"),
                    i = document.getElementById("close-popup"),
                    n = e.querySelectorAll(".item"),
                    r = Rn.timeline({
                        paused: !0
                    }).to(e, {
                        autoAlpha: 1,
                        duration: .5
                    }).fromTo(n, {
                        opacity: 0,
                        y: 150
                    }, {
                        duration: .8,
                        ease: "power4",
                        y: 0,
                        opacity: 1,
                        stagger: .05
                    }, "-=0.15");
                i.addEventListener("click", (() => {
                    r.reverse()
                }));
                const s = t => {
                    const e = new XMLHttpRequest,
                        i = new FormData(t);
                    e.addEventListener("load", (function(e) {
                        200 === e.currentTarget.status ? (! function(t) {
                            t.reset(), [...t.querySelectorAll(".input")].forEach((t => {
                                t.classList.remove("focus"), t.classList.remove("not--empty")
                            }))
                        }(t), r.play()) : alert("Oops! Something went wrong."), this.isSubmitted = !1
                    })), e.addEventListener("error", (function(t) {
                        alert("Oops! Something went wrong."), this.isSubmitted = !1
                    })), e.open("POST", t.getAttribute("action")), e.send(i)
                };
                a.addEventListener("submit", (function(e) {
                    e.preventDefault(), t || (this.isSubmitted = !0, s(a))
                }))
            }
        }
    })()
})();